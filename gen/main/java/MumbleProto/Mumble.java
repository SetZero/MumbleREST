// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Mumble.proto

package MumbleProto;

public final class Mumble {
  private Mumble() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface VersionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.Version)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * 2-byte Major, 1-byte Minor and 1-byte Patch version number.
     * </pre>
     *
     * <code>optional uint32 version = 1;</code>
     */
    boolean hasVersion();
    /**
     * <pre>
     * 2-byte Major, 1-byte Minor and 1-byte Patch version number.
     * </pre>
     *
     * <code>optional uint32 version = 1;</code>
     */
    int getVersion();

    /**
     * <pre>
     * Client release name.
     * </pre>
     *
     * <code>optional string release = 2;</code>
     */
    boolean hasRelease();
    /**
     * <pre>
     * Client release name.
     * </pre>
     *
     * <code>optional string release = 2;</code>
     */
    java.lang.String getRelease();
    /**
     * <pre>
     * Client release name.
     * </pre>
     *
     * <code>optional string release = 2;</code>
     */
    com.google.protobuf.ByteString
        getReleaseBytes();

    /**
     * <pre>
     * Client OS name.
     * </pre>
     *
     * <code>optional string os = 3;</code>
     */
    boolean hasOs();
    /**
     * <pre>
     * Client OS name.
     * </pre>
     *
     * <code>optional string os = 3;</code>
     */
    java.lang.String getOs();
    /**
     * <pre>
     * Client OS name.
     * </pre>
     *
     * <code>optional string os = 3;</code>
     */
    com.google.protobuf.ByteString
        getOsBytes();

    /**
     * <pre>
     * Client OS version.
     * </pre>
     *
     * <code>optional string os_version = 4;</code>
     */
    boolean hasOsVersion();
    /**
     * <pre>
     * Client OS version.
     * </pre>
     *
     * <code>optional string os_version = 4;</code>
     */
    java.lang.String getOsVersion();
    /**
     * <pre>
     * Client OS version.
     * </pre>
     *
     * <code>optional string os_version = 4;</code>
     */
    com.google.protobuf.ByteString
        getOsVersionBytes();
  }
  /**
   * Protobuf type {@code MumbleProto.Version}
   */
  public  static final class Version extends
      com.google.protobuf.GeneratedMessageLite<
          Version, Version.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.Version)
      VersionOrBuilder {
    private Version() {
      release_ = "";
      os_ = "";
      osVersion_ = "";
    }
    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <pre>
     * 2-byte Major, 1-byte Minor and 1-byte Patch version number.
     * </pre>
     *
     * <code>optional uint32 version = 1;</code>
     */
    @java.lang.Override
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * 2-byte Major, 1-byte Minor and 1-byte Patch version number.
     * </pre>
     *
     * <code>optional uint32 version = 1;</code>
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }
    /**
     * <pre>
     * 2-byte Major, 1-byte Minor and 1-byte Patch version number.
     * </pre>
     *
     * <code>optional uint32 version = 1;</code>
     */
    private void setVersion(int value) {
      bitField0_ |= 0x00000001;
      version_ = value;
    }
    /**
     * <pre>
     * 2-byte Major, 1-byte Minor and 1-byte Patch version number.
     * </pre>
     *
     * <code>optional uint32 version = 1;</code>
     */
    private void clearVersion() {
      bitField0_ = (bitField0_ & ~0x00000001);
      version_ = 0;
    }

    public static final int RELEASE_FIELD_NUMBER = 2;
    private java.lang.String release_;
    /**
     * <pre>
     * Client release name.
     * </pre>
     *
     * <code>optional string release = 2;</code>
     */
    @java.lang.Override
    public boolean hasRelease() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Client release name.
     * </pre>
     *
     * <code>optional string release = 2;</code>
     */
    @java.lang.Override
    public java.lang.String getRelease() {
      return release_;
    }
    /**
     * <pre>
     * Client release name.
     * </pre>
     *
     * <code>optional string release = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getReleaseBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(release_);
    }
    /**
     * <pre>
     * Client release name.
     * </pre>
     *
     * <code>optional string release = 2;</code>
     */
    private void setRelease(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      release_ = value;
    }
    /**
     * <pre>
     * Client release name.
     * </pre>
     *
     * <code>optional string release = 2;</code>
     */
    private void clearRelease() {
      bitField0_ = (bitField0_ & ~0x00000002);
      release_ = getDefaultInstance().getRelease();
    }
    /**
     * <pre>
     * Client release name.
     * </pre>
     *
     * <code>optional string release = 2;</code>
     */
    private void setReleaseBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      release_ = value.toStringUtf8();
    }

    public static final int OS_FIELD_NUMBER = 3;
    private java.lang.String os_;
    /**
     * <pre>
     * Client OS name.
     * </pre>
     *
     * <code>optional string os = 3;</code>
     */
    @java.lang.Override
    public boolean hasOs() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Client OS name.
     * </pre>
     *
     * <code>optional string os = 3;</code>
     */
    @java.lang.Override
    public java.lang.String getOs() {
      return os_;
    }
    /**
     * <pre>
     * Client OS name.
     * </pre>
     *
     * <code>optional string os = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOsBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(os_);
    }
    /**
     * <pre>
     * Client OS name.
     * </pre>
     *
     * <code>optional string os = 3;</code>
     */
    private void setOs(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      os_ = value;
    }
    /**
     * <pre>
     * Client OS name.
     * </pre>
     *
     * <code>optional string os = 3;</code>
     */
    private void clearOs() {
      bitField0_ = (bitField0_ & ~0x00000004);
      os_ = getDefaultInstance().getOs();
    }
    /**
     * <pre>
     * Client OS name.
     * </pre>
     *
     * <code>optional string os = 3;</code>
     */
    private void setOsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      os_ = value.toStringUtf8();
    }

    public static final int OS_VERSION_FIELD_NUMBER = 4;
    private java.lang.String osVersion_;
    /**
     * <pre>
     * Client OS version.
     * </pre>
     *
     * <code>optional string os_version = 4;</code>
     */
    @java.lang.Override
    public boolean hasOsVersion() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Client OS version.
     * </pre>
     *
     * <code>optional string os_version = 4;</code>
     */
    @java.lang.Override
    public java.lang.String getOsVersion() {
      return osVersion_;
    }
    /**
     * <pre>
     * Client OS version.
     * </pre>
     *
     * <code>optional string os_version = 4;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOsVersionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(osVersion_);
    }
    /**
     * <pre>
     * Client OS version.
     * </pre>
     *
     * <code>optional string os_version = 4;</code>
     */
    private void setOsVersion(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      osVersion_ = value;
    }
    /**
     * <pre>
     * Client OS version.
     * </pre>
     *
     * <code>optional string os_version = 4;</code>
     */
    private void clearOsVersion() {
      bitField0_ = (bitField0_ & ~0x00000008);
      osVersion_ = getDefaultInstance().getOsVersion();
    }
    /**
     * <pre>
     * Client OS version.
     * </pre>
     *
     * <code>optional string os_version = 4;</code>
     */
    private void setOsVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      osVersion_ = value.toStringUtf8();
    }

    public static MumbleProto.Mumble.Version parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.Version parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.Version parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.Version parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.Version parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.Version parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.Version parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.Version parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.Version parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.Version parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.Version parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.Version parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.Version prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code MumbleProto.Version}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.Version, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.Version)
        MumbleProto.Mumble.VersionOrBuilder {
      // Construct using MumbleProto.Mumble.Version.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * 2-byte Major, 1-byte Minor and 1-byte Patch version number.
       * </pre>
       *
       * <code>optional uint32 version = 1;</code>
       */
      @java.lang.Override
      public boolean hasVersion() {
        return instance.hasVersion();
      }
      /**
       * <pre>
       * 2-byte Major, 1-byte Minor and 1-byte Patch version number.
       * </pre>
       *
       * <code>optional uint32 version = 1;</code>
       */
      @java.lang.Override
      public int getVersion() {
        return instance.getVersion();
      }
      /**
       * <pre>
       * 2-byte Major, 1-byte Minor and 1-byte Patch version number.
       * </pre>
       *
       * <code>optional uint32 version = 1;</code>
       */
      public Builder setVersion(int value) {
        copyOnWrite();
        instance.setVersion(value);
        return this;
      }
      /**
       * <pre>
       * 2-byte Major, 1-byte Minor and 1-byte Patch version number.
       * </pre>
       *
       * <code>optional uint32 version = 1;</code>
       */
      public Builder clearVersion() {
        copyOnWrite();
        instance.clearVersion();
        return this;
      }

      /**
       * <pre>
       * Client release name.
       * </pre>
       *
       * <code>optional string release = 2;</code>
       */
      @java.lang.Override
      public boolean hasRelease() {
        return instance.hasRelease();
      }
      /**
       * <pre>
       * Client release name.
       * </pre>
       *
       * <code>optional string release = 2;</code>
       */
      @java.lang.Override
      public java.lang.String getRelease() {
        return instance.getRelease();
      }
      /**
       * <pre>
       * Client release name.
       * </pre>
       *
       * <code>optional string release = 2;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getReleaseBytes() {
        return instance.getReleaseBytes();
      }
      /**
       * <pre>
       * Client release name.
       * </pre>
       *
       * <code>optional string release = 2;</code>
       */
      public Builder setRelease(
          java.lang.String value) {
        copyOnWrite();
        instance.setRelease(value);
        return this;
      }
      /**
       * <pre>
       * Client release name.
       * </pre>
       *
       * <code>optional string release = 2;</code>
       */
      public Builder clearRelease() {
        copyOnWrite();
        instance.clearRelease();
        return this;
      }
      /**
       * <pre>
       * Client release name.
       * </pre>
       *
       * <code>optional string release = 2;</code>
       */
      public Builder setReleaseBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setReleaseBytes(value);
        return this;
      }

      /**
       * <pre>
       * Client OS name.
       * </pre>
       *
       * <code>optional string os = 3;</code>
       */
      @java.lang.Override
      public boolean hasOs() {
        return instance.hasOs();
      }
      /**
       * <pre>
       * Client OS name.
       * </pre>
       *
       * <code>optional string os = 3;</code>
       */
      @java.lang.Override
      public java.lang.String getOs() {
        return instance.getOs();
      }
      /**
       * <pre>
       * Client OS name.
       * </pre>
       *
       * <code>optional string os = 3;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getOsBytes() {
        return instance.getOsBytes();
      }
      /**
       * <pre>
       * Client OS name.
       * </pre>
       *
       * <code>optional string os = 3;</code>
       */
      public Builder setOs(
          java.lang.String value) {
        copyOnWrite();
        instance.setOs(value);
        return this;
      }
      /**
       * <pre>
       * Client OS name.
       * </pre>
       *
       * <code>optional string os = 3;</code>
       */
      public Builder clearOs() {
        copyOnWrite();
        instance.clearOs();
        return this;
      }
      /**
       * <pre>
       * Client OS name.
       * </pre>
       *
       * <code>optional string os = 3;</code>
       */
      public Builder setOsBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setOsBytes(value);
        return this;
      }

      /**
       * <pre>
       * Client OS version.
       * </pre>
       *
       * <code>optional string os_version = 4;</code>
       */
      @java.lang.Override
      public boolean hasOsVersion() {
        return instance.hasOsVersion();
      }
      /**
       * <pre>
       * Client OS version.
       * </pre>
       *
       * <code>optional string os_version = 4;</code>
       */
      @java.lang.Override
      public java.lang.String getOsVersion() {
        return instance.getOsVersion();
      }
      /**
       * <pre>
       * Client OS version.
       * </pre>
       *
       * <code>optional string os_version = 4;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getOsVersionBytes() {
        return instance.getOsVersionBytes();
      }
      /**
       * <pre>
       * Client OS version.
       * </pre>
       *
       * <code>optional string os_version = 4;</code>
       */
      public Builder setOsVersion(
          java.lang.String value) {
        copyOnWrite();
        instance.setOsVersion(value);
        return this;
      }
      /**
       * <pre>
       * Client OS version.
       * </pre>
       *
       * <code>optional string os_version = 4;</code>
       */
      public Builder clearOsVersion() {
        copyOnWrite();
        instance.clearOsVersion();
        return this;
      }
      /**
       * <pre>
       * Client OS version.
       * </pre>
       *
       * <code>optional string os_version = 4;</code>
       */
      public Builder setOsVersionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setOsVersionBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.Version)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.Version();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "version_",
              "release_",
              "os_",
              "osVersion_",
            };
            java.lang.String info =
                "\u0001\u0004\u0000\u0001\u0001\u0004\u0004\u0000\u0000\u0000\u0001\u000b\u0000\u0002" +
                "\b\u0001\u0003\b\u0002\u0004\b\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.Version> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.Version.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.Version)
    private static final MumbleProto.Mumble.Version DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new Version();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Version.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.Version getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Version> PARSER;

    public static com.google.protobuf.Parser<Version> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface UDPTunnelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.UDPTunnel)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Not used.
     * </pre>
     *
     * <code>required bytes packet = 1;</code>
     */
    boolean hasPacket();
    /**
     * <pre>
     * Not used.
     * </pre>
     *
     * <code>required bytes packet = 1;</code>
     */
    com.google.protobuf.ByteString getPacket();
  }
  /**
   * <pre>
   * Not used. Not even for tunneling UDP through TCP.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.UDPTunnel}
   */
  public  static final class UDPTunnel extends
      com.google.protobuf.GeneratedMessageLite<
          UDPTunnel, UDPTunnel.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.UDPTunnel)
      UDPTunnelOrBuilder {
    private UDPTunnel() {
      packet_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int PACKET_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString packet_;
    /**
     * <pre>
     * Not used.
     * </pre>
     *
     * <code>required bytes packet = 1;</code>
     */
    @java.lang.Override
    public boolean hasPacket() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Not used.
     * </pre>
     *
     * <code>required bytes packet = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPacket() {
      return packet_;
    }
    /**
     * <pre>
     * Not used.
     * </pre>
     *
     * <code>required bytes packet = 1;</code>
     */
    private void setPacket(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      packet_ = value;
    }
    /**
     * <pre>
     * Not used.
     * </pre>
     *
     * <code>required bytes packet = 1;</code>
     */
    private void clearPacket() {
      bitField0_ = (bitField0_ & ~0x00000001);
      packet_ = getDefaultInstance().getPacket();
    }

    public static MumbleProto.Mumble.UDPTunnel parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.UDPTunnel parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.UDPTunnel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.UDPTunnel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.UDPTunnel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.UDPTunnel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.UDPTunnel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.UDPTunnel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.UDPTunnel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.UDPTunnel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.UDPTunnel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.UDPTunnel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.UDPTunnel prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Not used. Not even for tunneling UDP through TCP.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.UDPTunnel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.UDPTunnel, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.UDPTunnel)
        MumbleProto.Mumble.UDPTunnelOrBuilder {
      // Construct using MumbleProto.Mumble.UDPTunnel.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Not used.
       * </pre>
       *
       * <code>required bytes packet = 1;</code>
       */
      @java.lang.Override
      public boolean hasPacket() {
        return instance.hasPacket();
      }
      /**
       * <pre>
       * Not used.
       * </pre>
       *
       * <code>required bytes packet = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPacket() {
        return instance.getPacket();
      }
      /**
       * <pre>
       * Not used.
       * </pre>
       *
       * <code>required bytes packet = 1;</code>
       */
      public Builder setPacket(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPacket(value);
        return this;
      }
      /**
       * <pre>
       * Not used.
       * </pre>
       *
       * <code>required bytes packet = 1;</code>
       */
      public Builder clearPacket() {
        copyOnWrite();
        instance.clearPacket();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.UDPTunnel)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.UDPTunnel();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "packet_",
            };
            java.lang.String info =
                "\u0001\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0001\u0001\u050a\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.UDPTunnel> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.UDPTunnel.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.UDPTunnel)
    private static final MumbleProto.Mumble.UDPTunnel DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new UDPTunnel();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        UDPTunnel.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.UDPTunnel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<UDPTunnel> PARSER;

    public static com.google.protobuf.Parser<UDPTunnel> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AuthenticateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.Authenticate)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * UTF-8 encoded username.
     * </pre>
     *
     * <code>optional string username = 1;</code>
     */
    boolean hasUsername();
    /**
     * <pre>
     * UTF-8 encoded username.
     * </pre>
     *
     * <code>optional string username = 1;</code>
     */
    java.lang.String getUsername();
    /**
     * <pre>
     * UTF-8 encoded username.
     * </pre>
     *
     * <code>optional string username = 1;</code>
     */
    com.google.protobuf.ByteString
        getUsernameBytes();

    /**
     * <pre>
     * Server or user password.
     * </pre>
     *
     * <code>optional string password = 2;</code>
     */
    boolean hasPassword();
    /**
     * <pre>
     * Server or user password.
     * </pre>
     *
     * <code>optional string password = 2;</code>
     */
    java.lang.String getPassword();
    /**
     * <pre>
     * Server or user password.
     * </pre>
     *
     * <code>optional string password = 2;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    /**
     * <pre>
     * Additional access tokens for server ACL groups.
     * </pre>
     *
     * <code>repeated string tokens = 3;</code>
     */
    java.util.List<java.lang.String>
        getTokensList();
    /**
     * <pre>
     * Additional access tokens for server ACL groups.
     * </pre>
     *
     * <code>repeated string tokens = 3;</code>
     */
    int getTokensCount();
    /**
     * <pre>
     * Additional access tokens for server ACL groups.
     * </pre>
     *
     * <code>repeated string tokens = 3;</code>
     */
    java.lang.String getTokens(int index);
    /**
     * <pre>
     * Additional access tokens for server ACL groups.
     * </pre>
     *
     * <code>repeated string tokens = 3;</code>
     */
    com.google.protobuf.ByteString
        getTokensBytes(int index);

    /**
     * <pre>
     * A list of CELT bitstream version constants supported by the client.
     * </pre>
     *
     * <code>repeated int32 celt_versions = 4;</code>
     */
    java.util.List<java.lang.Integer> getCeltVersionsList();
    /**
     * <pre>
     * A list of CELT bitstream version constants supported by the client.
     * </pre>
     *
     * <code>repeated int32 celt_versions = 4;</code>
     */
    int getCeltVersionsCount();
    /**
     * <pre>
     * A list of CELT bitstream version constants supported by the client.
     * </pre>
     *
     * <code>repeated int32 celt_versions = 4;</code>
     */
    int getCeltVersions(int index);

    /**
     * <code>optional bool opus = 5 [default = false];</code>
     */
    boolean hasOpus();
    /**
     * <code>optional bool opus = 5 [default = false];</code>
     */
    boolean getOpus();
  }
  /**
   * <pre>
   * Used by the client to send the authentication credentials to the server.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.Authenticate}
   */
  public  static final class Authenticate extends
      com.google.protobuf.GeneratedMessageLite<
          Authenticate, Authenticate.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.Authenticate)
      AuthenticateOrBuilder {
    private Authenticate() {
      username_ = "";
      password_ = "";
      tokens_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      celtVersions_ = emptyIntList();
    }
    private int bitField0_;
    public static final int USERNAME_FIELD_NUMBER = 1;
    private java.lang.String username_;
    /**
     * <pre>
     * UTF-8 encoded username.
     * </pre>
     *
     * <code>optional string username = 1;</code>
     */
    @java.lang.Override
    public boolean hasUsername() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * UTF-8 encoded username.
     * </pre>
     *
     * <code>optional string username = 1;</code>
     */
    @java.lang.Override
    public java.lang.String getUsername() {
      return username_;
    }
    /**
     * <pre>
     * UTF-8 encoded username.
     * </pre>
     *
     * <code>optional string username = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUsernameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(username_);
    }
    /**
     * <pre>
     * UTF-8 encoded username.
     * </pre>
     *
     * <code>optional string username = 1;</code>
     */
    private void setUsername(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      username_ = value;
    }
    /**
     * <pre>
     * UTF-8 encoded username.
     * </pre>
     *
     * <code>optional string username = 1;</code>
     */
    private void clearUsername() {
      bitField0_ = (bitField0_ & ~0x00000001);
      username_ = getDefaultInstance().getUsername();
    }
    /**
     * <pre>
     * UTF-8 encoded username.
     * </pre>
     *
     * <code>optional string username = 1;</code>
     */
    private void setUsernameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      username_ = value.toStringUtf8();
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private java.lang.String password_;
    /**
     * <pre>
     * Server or user password.
     * </pre>
     *
     * <code>optional string password = 2;</code>
     */
    @java.lang.Override
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Server or user password.
     * </pre>
     *
     * <code>optional string password = 2;</code>
     */
    @java.lang.Override
    public java.lang.String getPassword() {
      return password_;
    }
    /**
     * <pre>
     * Server or user password.
     * </pre>
     *
     * <code>optional string password = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(password_);
    }
    /**
     * <pre>
     * Server or user password.
     * </pre>
     *
     * <code>optional string password = 2;</code>
     */
    private void setPassword(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      password_ = value;
    }
    /**
     * <pre>
     * Server or user password.
     * </pre>
     *
     * <code>optional string password = 2;</code>
     */
    private void clearPassword() {
      bitField0_ = (bitField0_ & ~0x00000002);
      password_ = getDefaultInstance().getPassword();
    }
    /**
     * <pre>
     * Server or user password.
     * </pre>
     *
     * <code>optional string password = 2;</code>
     */
    private void setPasswordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      password_ = value.toStringUtf8();
    }

    public static final int TOKENS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<java.lang.String> tokens_;
    /**
     * <pre>
     * Additional access tokens for server ACL groups.
     * </pre>
     *
     * <code>repeated string tokens = 3;</code>
     */
    @java.lang.Override
    public java.util.List<java.lang.String> getTokensList() {
      return tokens_;
    }
    /**
     * <pre>
     * Additional access tokens for server ACL groups.
     * </pre>
     *
     * <code>repeated string tokens = 3;</code>
     */
    @java.lang.Override
    public int getTokensCount() {
      return tokens_.size();
    }
    /**
     * <pre>
     * Additional access tokens for server ACL groups.
     * </pre>
     *
     * <code>repeated string tokens = 3;</code>
     */
    @java.lang.Override
    public java.lang.String getTokens(int index) {
      return tokens_.get(index);
    }
    /**
     * <pre>
     * Additional access tokens for server ACL groups.
     * </pre>
     *
     * <code>repeated string tokens = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTokensBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          tokens_.get(index));
    }
    private void ensureTokensIsMutable() {
      if (!tokens_.isModifiable()) {
        tokens_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tokens_);
       }
    }
    /**
     * <pre>
     * Additional access tokens for server ACL groups.
     * </pre>
     *
     * <code>repeated string tokens = 3;</code>
     */
    private void setTokens(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureTokensIsMutable();
      tokens_.set(index, value);
    }
    /**
     * <pre>
     * Additional access tokens for server ACL groups.
     * </pre>
     *
     * <code>repeated string tokens = 3;</code>
     */
    private void addTokens(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureTokensIsMutable();
      tokens_.add(value);
    }
    /**
     * <pre>
     * Additional access tokens for server ACL groups.
     * </pre>
     *
     * <code>repeated string tokens = 3;</code>
     */
    private void addAllTokens(
        java.lang.Iterable<java.lang.String> values) {
      ensureTokensIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, tokens_);
    }
    /**
     * <pre>
     * Additional access tokens for server ACL groups.
     * </pre>
     *
     * <code>repeated string tokens = 3;</code>
     */
    private void clearTokens() {
      tokens_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <pre>
     * Additional access tokens for server ACL groups.
     * </pre>
     *
     * <code>repeated string tokens = 3;</code>
     */
    private void addTokensBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureTokensIsMutable();
      tokens_.add(value.toStringUtf8());
    }

    public static final int CELT_VERSIONS_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList celtVersions_;
    /**
     * <pre>
     * A list of CELT bitstream version constants supported by the client.
     * </pre>
     *
     * <code>repeated int32 celt_versions = 4;</code>
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getCeltVersionsList() {
      return celtVersions_;
    }
    /**
     * <pre>
     * A list of CELT bitstream version constants supported by the client.
     * </pre>
     *
     * <code>repeated int32 celt_versions = 4;</code>
     */
    @java.lang.Override
    public int getCeltVersionsCount() {
      return celtVersions_.size();
    }
    /**
     * <pre>
     * A list of CELT bitstream version constants supported by the client.
     * </pre>
     *
     * <code>repeated int32 celt_versions = 4;</code>
     */
    @java.lang.Override
    public int getCeltVersions(int index) {
      return celtVersions_.getInt(index);
    }
    private void ensureCeltVersionsIsMutable() {
      if (!celtVersions_.isModifiable()) {
        celtVersions_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(celtVersions_);
       }
    }
    /**
     * <pre>
     * A list of CELT bitstream version constants supported by the client.
     * </pre>
     *
     * <code>repeated int32 celt_versions = 4;</code>
     */
    private void setCeltVersions(
        int index, int value) {
      ensureCeltVersionsIsMutable();
      celtVersions_.setInt(index, value);
    }
    /**
     * <pre>
     * A list of CELT bitstream version constants supported by the client.
     * </pre>
     *
     * <code>repeated int32 celt_versions = 4;</code>
     */
    private void addCeltVersions(int value) {
      ensureCeltVersionsIsMutable();
      celtVersions_.addInt(value);
    }
    /**
     * <pre>
     * A list of CELT bitstream version constants supported by the client.
     * </pre>
     *
     * <code>repeated int32 celt_versions = 4;</code>
     */
    private void addAllCeltVersions(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureCeltVersionsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, celtVersions_);
    }
    /**
     * <pre>
     * A list of CELT bitstream version constants supported by the client.
     * </pre>
     *
     * <code>repeated int32 celt_versions = 4;</code>
     */
    private void clearCeltVersions() {
      celtVersions_ = emptyIntList();
    }

    public static final int OPUS_FIELD_NUMBER = 5;
    private boolean opus_;
    /**
     * <code>optional bool opus = 5 [default = false];</code>
     */
    @java.lang.Override
    public boolean hasOpus() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional bool opus = 5 [default = false];</code>
     */
    @java.lang.Override
    public boolean getOpus() {
      return opus_;
    }
    /**
     * <code>optional bool opus = 5 [default = false];</code>
     */
    private void setOpus(boolean value) {
      bitField0_ |= 0x00000004;
      opus_ = value;
    }
    /**
     * <code>optional bool opus = 5 [default = false];</code>
     */
    private void clearOpus() {
      bitField0_ = (bitField0_ & ~0x00000004);
      opus_ = false;
    }

    public static MumbleProto.Mumble.Authenticate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.Authenticate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.Authenticate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.Authenticate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.Authenticate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.Authenticate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.Authenticate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.Authenticate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.Authenticate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.Authenticate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.Authenticate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.Authenticate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.Authenticate prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Used by the client to send the authentication credentials to the server.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.Authenticate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.Authenticate, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.Authenticate)
        MumbleProto.Mumble.AuthenticateOrBuilder {
      // Construct using MumbleProto.Mumble.Authenticate.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * UTF-8 encoded username.
       * </pre>
       *
       * <code>optional string username = 1;</code>
       */
      @java.lang.Override
      public boolean hasUsername() {
        return instance.hasUsername();
      }
      /**
       * <pre>
       * UTF-8 encoded username.
       * </pre>
       *
       * <code>optional string username = 1;</code>
       */
      @java.lang.Override
      public java.lang.String getUsername() {
        return instance.getUsername();
      }
      /**
       * <pre>
       * UTF-8 encoded username.
       * </pre>
       *
       * <code>optional string username = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUsernameBytes() {
        return instance.getUsernameBytes();
      }
      /**
       * <pre>
       * UTF-8 encoded username.
       * </pre>
       *
       * <code>optional string username = 1;</code>
       */
      public Builder setUsername(
          java.lang.String value) {
        copyOnWrite();
        instance.setUsername(value);
        return this;
      }
      /**
       * <pre>
       * UTF-8 encoded username.
       * </pre>
       *
       * <code>optional string username = 1;</code>
       */
      public Builder clearUsername() {
        copyOnWrite();
        instance.clearUsername();
        return this;
      }
      /**
       * <pre>
       * UTF-8 encoded username.
       * </pre>
       *
       * <code>optional string username = 1;</code>
       */
      public Builder setUsernameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUsernameBytes(value);
        return this;
      }

      /**
       * <pre>
       * Server or user password.
       * </pre>
       *
       * <code>optional string password = 2;</code>
       */
      @java.lang.Override
      public boolean hasPassword() {
        return instance.hasPassword();
      }
      /**
       * <pre>
       * Server or user password.
       * </pre>
       *
       * <code>optional string password = 2;</code>
       */
      @java.lang.Override
      public java.lang.String getPassword() {
        return instance.getPassword();
      }
      /**
       * <pre>
       * Server or user password.
       * </pre>
       *
       * <code>optional string password = 2;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        return instance.getPasswordBytes();
      }
      /**
       * <pre>
       * Server or user password.
       * </pre>
       *
       * <code>optional string password = 2;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        copyOnWrite();
        instance.setPassword(value);
        return this;
      }
      /**
       * <pre>
       * Server or user password.
       * </pre>
       *
       * <code>optional string password = 2;</code>
       */
      public Builder clearPassword() {
        copyOnWrite();
        instance.clearPassword();
        return this;
      }
      /**
       * <pre>
       * Server or user password.
       * </pre>
       *
       * <code>optional string password = 2;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPasswordBytes(value);
        return this;
      }

      /**
       * <pre>
       * Additional access tokens for server ACL groups.
       * </pre>
       *
       * <code>repeated string tokens = 3;</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.String>
          getTokensList() {
        return java.util.Collections.unmodifiableList(
            instance.getTokensList());
      }
      /**
       * <pre>
       * Additional access tokens for server ACL groups.
       * </pre>
       *
       * <code>repeated string tokens = 3;</code>
       */
      @java.lang.Override
      public int getTokensCount() {
        return instance.getTokensCount();
      }
      /**
       * <pre>
       * Additional access tokens for server ACL groups.
       * </pre>
       *
       * <code>repeated string tokens = 3;</code>
       */
      @java.lang.Override
      public java.lang.String getTokens(int index) {
        return instance.getTokens(index);
      }
      /**
       * <pre>
       * Additional access tokens for server ACL groups.
       * </pre>
       *
       * <code>repeated string tokens = 3;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTokensBytes(int index) {
        return instance.getTokensBytes(index);
      }
      /**
       * <pre>
       * Additional access tokens for server ACL groups.
       * </pre>
       *
       * <code>repeated string tokens = 3;</code>
       */
      public Builder setTokens(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setTokens(index, value);
        return this;
      }
      /**
       * <pre>
       * Additional access tokens for server ACL groups.
       * </pre>
       *
       * <code>repeated string tokens = 3;</code>
       */
      public Builder addTokens(
          java.lang.String value) {
        copyOnWrite();
        instance.addTokens(value);
        return this;
      }
      /**
       * <pre>
       * Additional access tokens for server ACL groups.
       * </pre>
       *
       * <code>repeated string tokens = 3;</code>
       */
      public Builder addAllTokens(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllTokens(values);
        return this;
      }
      /**
       * <pre>
       * Additional access tokens for server ACL groups.
       * </pre>
       *
       * <code>repeated string tokens = 3;</code>
       */
      public Builder clearTokens() {
        copyOnWrite();
        instance.clearTokens();
        return this;
      }
      /**
       * <pre>
       * Additional access tokens for server ACL groups.
       * </pre>
       *
       * <code>repeated string tokens = 3;</code>
       */
      public Builder addTokensBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addTokensBytes(value);
        return this;
      }

      /**
       * <pre>
       * A list of CELT bitstream version constants supported by the client.
       * </pre>
       *
       * <code>repeated int32 celt_versions = 4;</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getCeltVersionsList() {
        return java.util.Collections.unmodifiableList(
            instance.getCeltVersionsList());
      }
      /**
       * <pre>
       * A list of CELT bitstream version constants supported by the client.
       * </pre>
       *
       * <code>repeated int32 celt_versions = 4;</code>
       */
      @java.lang.Override
      public int getCeltVersionsCount() {
        return instance.getCeltVersionsCount();
      }
      /**
       * <pre>
       * A list of CELT bitstream version constants supported by the client.
       * </pre>
       *
       * <code>repeated int32 celt_versions = 4;</code>
       */
      @java.lang.Override
      public int getCeltVersions(int index) {
        return instance.getCeltVersions(index);
      }
      /**
       * <pre>
       * A list of CELT bitstream version constants supported by the client.
       * </pre>
       *
       * <code>repeated int32 celt_versions = 4;</code>
       */
      public Builder setCeltVersions(
          int index, int value) {
        copyOnWrite();
        instance.setCeltVersions(index, value);
        return this;
      }
      /**
       * <pre>
       * A list of CELT bitstream version constants supported by the client.
       * </pre>
       *
       * <code>repeated int32 celt_versions = 4;</code>
       */
      public Builder addCeltVersions(int value) {
        copyOnWrite();
        instance.addCeltVersions(value);
        return this;
      }
      /**
       * <pre>
       * A list of CELT bitstream version constants supported by the client.
       * </pre>
       *
       * <code>repeated int32 celt_versions = 4;</code>
       */
      public Builder addAllCeltVersions(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllCeltVersions(values);
        return this;
      }
      /**
       * <pre>
       * A list of CELT bitstream version constants supported by the client.
       * </pre>
       *
       * <code>repeated int32 celt_versions = 4;</code>
       */
      public Builder clearCeltVersions() {
        copyOnWrite();
        instance.clearCeltVersions();
        return this;
      }

      /**
       * <code>optional bool opus = 5 [default = false];</code>
       */
      @java.lang.Override
      public boolean hasOpus() {
        return instance.hasOpus();
      }
      /**
       * <code>optional bool opus = 5 [default = false];</code>
       */
      @java.lang.Override
      public boolean getOpus() {
        return instance.getOpus();
      }
      /**
       * <code>optional bool opus = 5 [default = false];</code>
       */
      public Builder setOpus(boolean value) {
        copyOnWrite();
        instance.setOpus(value);
        return this;
      }
      /**
       * <code>optional bool opus = 5 [default = false];</code>
       */
      public Builder clearOpus() {
        copyOnWrite();
        instance.clearOpus();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.Authenticate)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.Authenticate();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "username_",
              "password_",
              "tokens_",
              "celtVersions_",
              "opus_",
            };
            java.lang.String info =
                "\u0001\u0005\u0000\u0001\u0001\u0005\u0005\u0000\u0002\u0000\u0001\b\u0000\u0002" +
                "\b\u0001\u0003\u001a\u0004\u0016\u0005\u0007\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.Authenticate> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.Authenticate.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.Authenticate)
    private static final MumbleProto.Mumble.Authenticate DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new Authenticate();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Authenticate.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.Authenticate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Authenticate> PARSER;

    public static com.google.protobuf.Parser<Authenticate> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.Ping)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Client timestamp. Server should not attempt to decode.
     * </pre>
     *
     * <code>optional uint64 timestamp = 1;</code>
     */
    boolean hasTimestamp();
    /**
     * <pre>
     * Client timestamp. Server should not attempt to decode.
     * </pre>
     *
     * <code>optional uint64 timestamp = 1;</code>
     */
    long getTimestamp();

    /**
     * <pre>
     * The amount of good packets received.
     * </pre>
     *
     * <code>optional uint32 good = 2;</code>
     */
    boolean hasGood();
    /**
     * <pre>
     * The amount of good packets received.
     * </pre>
     *
     * <code>optional uint32 good = 2;</code>
     */
    int getGood();

    /**
     * <pre>
     * The amount of late packets received.
     * </pre>
     *
     * <code>optional uint32 late = 3;</code>
     */
    boolean hasLate();
    /**
     * <pre>
     * The amount of late packets received.
     * </pre>
     *
     * <code>optional uint32 late = 3;</code>
     */
    int getLate();

    /**
     * <pre>
     * The amount of packets never received.
     * </pre>
     *
     * <code>optional uint32 lost = 4;</code>
     */
    boolean hasLost();
    /**
     * <pre>
     * The amount of packets never received.
     * </pre>
     *
     * <code>optional uint32 lost = 4;</code>
     */
    int getLost();

    /**
     * <pre>
     * The amount of nonce resyncs.
     * </pre>
     *
     * <code>optional uint32 resync = 5;</code>
     */
    boolean hasResync();
    /**
     * <pre>
     * The amount of nonce resyncs.
     * </pre>
     *
     * <code>optional uint32 resync = 5;</code>
     */
    int getResync();

    /**
     * <pre>
     * The total amount of UDP packets received.
     * </pre>
     *
     * <code>optional uint32 udp_packets = 6;</code>
     */
    boolean hasUdpPackets();
    /**
     * <pre>
     * The total amount of UDP packets received.
     * </pre>
     *
     * <code>optional uint32 udp_packets = 6;</code>
     */
    int getUdpPackets();

    /**
     * <pre>
     * The total amount of TCP packets received.
     * </pre>
     *
     * <code>optional uint32 tcp_packets = 7;</code>
     */
    boolean hasTcpPackets();
    /**
     * <pre>
     * The total amount of TCP packets received.
     * </pre>
     *
     * <code>optional uint32 tcp_packets = 7;</code>
     */
    int getTcpPackets();

    /**
     * <pre>
     * UDP ping average.
     * </pre>
     *
     * <code>optional float udp_ping_avg = 8;</code>
     */
    boolean hasUdpPingAvg();
    /**
     * <pre>
     * UDP ping average.
     * </pre>
     *
     * <code>optional float udp_ping_avg = 8;</code>
     */
    float getUdpPingAvg();

    /**
     * <pre>
     * UDP ping variance.
     * </pre>
     *
     * <code>optional float udp_ping_var = 9;</code>
     */
    boolean hasUdpPingVar();
    /**
     * <pre>
     * UDP ping variance.
     * </pre>
     *
     * <code>optional float udp_ping_var = 9;</code>
     */
    float getUdpPingVar();

    /**
     * <pre>
     * TCP ping average.
     * </pre>
     *
     * <code>optional float tcp_ping_avg = 10;</code>
     */
    boolean hasTcpPingAvg();
    /**
     * <pre>
     * TCP ping average.
     * </pre>
     *
     * <code>optional float tcp_ping_avg = 10;</code>
     */
    float getTcpPingAvg();

    /**
     * <pre>
     * TCP ping variance.
     * </pre>
     *
     * <code>optional float tcp_ping_var = 11;</code>
     */
    boolean hasTcpPingVar();
    /**
     * <pre>
     * TCP ping variance.
     * </pre>
     *
     * <code>optional float tcp_ping_var = 11;</code>
     */
    float getTcpPingVar();
  }
  /**
   * <pre>
   * Sent by the client to notify the server that the client is still alive.
   * Server must reply to the packet with the same timestamp and its own
   * good/late/lost/resync numbers. None of the fields is strictly required.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.Ping}
   */
  public  static final class Ping extends
      com.google.protobuf.GeneratedMessageLite<
          Ping, Ping.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.Ping)
      PingOrBuilder {
    private Ping() {
    }
    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <pre>
     * Client timestamp. Server should not attempt to decode.
     * </pre>
     *
     * <code>optional uint64 timestamp = 1;</code>
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Client timestamp. Server should not attempt to decode.
     * </pre>
     *
     * <code>optional uint64 timestamp = 1;</code>
     */
    @java.lang.Override
    public long getTimestamp() {
      return timestamp_;
    }
    /**
     * <pre>
     * Client timestamp. Server should not attempt to decode.
     * </pre>
     *
     * <code>optional uint64 timestamp = 1;</code>
     */
    private void setTimestamp(long value) {
      bitField0_ |= 0x00000001;
      timestamp_ = value;
    }
    /**
     * <pre>
     * Client timestamp. Server should not attempt to decode.
     * </pre>
     *
     * <code>optional uint64 timestamp = 1;</code>
     */
    private void clearTimestamp() {
      bitField0_ = (bitField0_ & ~0x00000001);
      timestamp_ = 0L;
    }

    public static final int GOOD_FIELD_NUMBER = 2;
    private int good_;
    /**
     * <pre>
     * The amount of good packets received.
     * </pre>
     *
     * <code>optional uint32 good = 2;</code>
     */
    @java.lang.Override
    public boolean hasGood() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The amount of good packets received.
     * </pre>
     *
     * <code>optional uint32 good = 2;</code>
     */
    @java.lang.Override
    public int getGood() {
      return good_;
    }
    /**
     * <pre>
     * The amount of good packets received.
     * </pre>
     *
     * <code>optional uint32 good = 2;</code>
     */
    private void setGood(int value) {
      bitField0_ |= 0x00000002;
      good_ = value;
    }
    /**
     * <pre>
     * The amount of good packets received.
     * </pre>
     *
     * <code>optional uint32 good = 2;</code>
     */
    private void clearGood() {
      bitField0_ = (bitField0_ & ~0x00000002);
      good_ = 0;
    }

    public static final int LATE_FIELD_NUMBER = 3;
    private int late_;
    /**
     * <pre>
     * The amount of late packets received.
     * </pre>
     *
     * <code>optional uint32 late = 3;</code>
     */
    @java.lang.Override
    public boolean hasLate() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The amount of late packets received.
     * </pre>
     *
     * <code>optional uint32 late = 3;</code>
     */
    @java.lang.Override
    public int getLate() {
      return late_;
    }
    /**
     * <pre>
     * The amount of late packets received.
     * </pre>
     *
     * <code>optional uint32 late = 3;</code>
     */
    private void setLate(int value) {
      bitField0_ |= 0x00000004;
      late_ = value;
    }
    /**
     * <pre>
     * The amount of late packets received.
     * </pre>
     *
     * <code>optional uint32 late = 3;</code>
     */
    private void clearLate() {
      bitField0_ = (bitField0_ & ~0x00000004);
      late_ = 0;
    }

    public static final int LOST_FIELD_NUMBER = 4;
    private int lost_;
    /**
     * <pre>
     * The amount of packets never received.
     * </pre>
     *
     * <code>optional uint32 lost = 4;</code>
     */
    @java.lang.Override
    public boolean hasLost() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The amount of packets never received.
     * </pre>
     *
     * <code>optional uint32 lost = 4;</code>
     */
    @java.lang.Override
    public int getLost() {
      return lost_;
    }
    /**
     * <pre>
     * The amount of packets never received.
     * </pre>
     *
     * <code>optional uint32 lost = 4;</code>
     */
    private void setLost(int value) {
      bitField0_ |= 0x00000008;
      lost_ = value;
    }
    /**
     * <pre>
     * The amount of packets never received.
     * </pre>
     *
     * <code>optional uint32 lost = 4;</code>
     */
    private void clearLost() {
      bitField0_ = (bitField0_ & ~0x00000008);
      lost_ = 0;
    }

    public static final int RESYNC_FIELD_NUMBER = 5;
    private int resync_;
    /**
     * <pre>
     * The amount of nonce resyncs.
     * </pre>
     *
     * <code>optional uint32 resync = 5;</code>
     */
    @java.lang.Override
    public boolean hasResync() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The amount of nonce resyncs.
     * </pre>
     *
     * <code>optional uint32 resync = 5;</code>
     */
    @java.lang.Override
    public int getResync() {
      return resync_;
    }
    /**
     * <pre>
     * The amount of nonce resyncs.
     * </pre>
     *
     * <code>optional uint32 resync = 5;</code>
     */
    private void setResync(int value) {
      bitField0_ |= 0x00000010;
      resync_ = value;
    }
    /**
     * <pre>
     * The amount of nonce resyncs.
     * </pre>
     *
     * <code>optional uint32 resync = 5;</code>
     */
    private void clearResync() {
      bitField0_ = (bitField0_ & ~0x00000010);
      resync_ = 0;
    }

    public static final int UDP_PACKETS_FIELD_NUMBER = 6;
    private int udpPackets_;
    /**
     * <pre>
     * The total amount of UDP packets received.
     * </pre>
     *
     * <code>optional uint32 udp_packets = 6;</code>
     */
    @java.lang.Override
    public boolean hasUdpPackets() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The total amount of UDP packets received.
     * </pre>
     *
     * <code>optional uint32 udp_packets = 6;</code>
     */
    @java.lang.Override
    public int getUdpPackets() {
      return udpPackets_;
    }
    /**
     * <pre>
     * The total amount of UDP packets received.
     * </pre>
     *
     * <code>optional uint32 udp_packets = 6;</code>
     */
    private void setUdpPackets(int value) {
      bitField0_ |= 0x00000020;
      udpPackets_ = value;
    }
    /**
     * <pre>
     * The total amount of UDP packets received.
     * </pre>
     *
     * <code>optional uint32 udp_packets = 6;</code>
     */
    private void clearUdpPackets() {
      bitField0_ = (bitField0_ & ~0x00000020);
      udpPackets_ = 0;
    }

    public static final int TCP_PACKETS_FIELD_NUMBER = 7;
    private int tcpPackets_;
    /**
     * <pre>
     * The total amount of TCP packets received.
     * </pre>
     *
     * <code>optional uint32 tcp_packets = 7;</code>
     */
    @java.lang.Override
    public boolean hasTcpPackets() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * The total amount of TCP packets received.
     * </pre>
     *
     * <code>optional uint32 tcp_packets = 7;</code>
     */
    @java.lang.Override
    public int getTcpPackets() {
      return tcpPackets_;
    }
    /**
     * <pre>
     * The total amount of TCP packets received.
     * </pre>
     *
     * <code>optional uint32 tcp_packets = 7;</code>
     */
    private void setTcpPackets(int value) {
      bitField0_ |= 0x00000040;
      tcpPackets_ = value;
    }
    /**
     * <pre>
     * The total amount of TCP packets received.
     * </pre>
     *
     * <code>optional uint32 tcp_packets = 7;</code>
     */
    private void clearTcpPackets() {
      bitField0_ = (bitField0_ & ~0x00000040);
      tcpPackets_ = 0;
    }

    public static final int UDP_PING_AVG_FIELD_NUMBER = 8;
    private float udpPingAvg_;
    /**
     * <pre>
     * UDP ping average.
     * </pre>
     *
     * <code>optional float udp_ping_avg = 8;</code>
     */
    @java.lang.Override
    public boolean hasUdpPingAvg() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * UDP ping average.
     * </pre>
     *
     * <code>optional float udp_ping_avg = 8;</code>
     */
    @java.lang.Override
    public float getUdpPingAvg() {
      return udpPingAvg_;
    }
    /**
     * <pre>
     * UDP ping average.
     * </pre>
     *
     * <code>optional float udp_ping_avg = 8;</code>
     */
    private void setUdpPingAvg(float value) {
      bitField0_ |= 0x00000080;
      udpPingAvg_ = value;
    }
    /**
     * <pre>
     * UDP ping average.
     * </pre>
     *
     * <code>optional float udp_ping_avg = 8;</code>
     */
    private void clearUdpPingAvg() {
      bitField0_ = (bitField0_ & ~0x00000080);
      udpPingAvg_ = 0F;
    }

    public static final int UDP_PING_VAR_FIELD_NUMBER = 9;
    private float udpPingVar_;
    /**
     * <pre>
     * UDP ping variance.
     * </pre>
     *
     * <code>optional float udp_ping_var = 9;</code>
     */
    @java.lang.Override
    public boolean hasUdpPingVar() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * UDP ping variance.
     * </pre>
     *
     * <code>optional float udp_ping_var = 9;</code>
     */
    @java.lang.Override
    public float getUdpPingVar() {
      return udpPingVar_;
    }
    /**
     * <pre>
     * UDP ping variance.
     * </pre>
     *
     * <code>optional float udp_ping_var = 9;</code>
     */
    private void setUdpPingVar(float value) {
      bitField0_ |= 0x00000100;
      udpPingVar_ = value;
    }
    /**
     * <pre>
     * UDP ping variance.
     * </pre>
     *
     * <code>optional float udp_ping_var = 9;</code>
     */
    private void clearUdpPingVar() {
      bitField0_ = (bitField0_ & ~0x00000100);
      udpPingVar_ = 0F;
    }

    public static final int TCP_PING_AVG_FIELD_NUMBER = 10;
    private float tcpPingAvg_;
    /**
     * <pre>
     * TCP ping average.
     * </pre>
     *
     * <code>optional float tcp_ping_avg = 10;</code>
     */
    @java.lang.Override
    public boolean hasTcpPingAvg() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * TCP ping average.
     * </pre>
     *
     * <code>optional float tcp_ping_avg = 10;</code>
     */
    @java.lang.Override
    public float getTcpPingAvg() {
      return tcpPingAvg_;
    }
    /**
     * <pre>
     * TCP ping average.
     * </pre>
     *
     * <code>optional float tcp_ping_avg = 10;</code>
     */
    private void setTcpPingAvg(float value) {
      bitField0_ |= 0x00000200;
      tcpPingAvg_ = value;
    }
    /**
     * <pre>
     * TCP ping average.
     * </pre>
     *
     * <code>optional float tcp_ping_avg = 10;</code>
     */
    private void clearTcpPingAvg() {
      bitField0_ = (bitField0_ & ~0x00000200);
      tcpPingAvg_ = 0F;
    }

    public static final int TCP_PING_VAR_FIELD_NUMBER = 11;
    private float tcpPingVar_;
    /**
     * <pre>
     * TCP ping variance.
     * </pre>
     *
     * <code>optional float tcp_ping_var = 11;</code>
     */
    @java.lang.Override
    public boolean hasTcpPingVar() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * TCP ping variance.
     * </pre>
     *
     * <code>optional float tcp_ping_var = 11;</code>
     */
    @java.lang.Override
    public float getTcpPingVar() {
      return tcpPingVar_;
    }
    /**
     * <pre>
     * TCP ping variance.
     * </pre>
     *
     * <code>optional float tcp_ping_var = 11;</code>
     */
    private void setTcpPingVar(float value) {
      bitField0_ |= 0x00000400;
      tcpPingVar_ = value;
    }
    /**
     * <pre>
     * TCP ping variance.
     * </pre>
     *
     * <code>optional float tcp_ping_var = 11;</code>
     */
    private void clearTcpPingVar() {
      bitField0_ = (bitField0_ & ~0x00000400);
      tcpPingVar_ = 0F;
    }

    public static MumbleProto.Mumble.Ping parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.Ping parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.Ping parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.Ping parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.Ping parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.Ping parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.Ping parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.Ping parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.Ping parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.Ping parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.Ping parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.Ping parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.Ping prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Sent by the client to notify the server that the client is still alive.
     * Server must reply to the packet with the same timestamp and its own
     * good/late/lost/resync numbers. None of the fields is strictly required.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.Ping}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.Ping, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.Ping)
        MumbleProto.Mumble.PingOrBuilder {
      // Construct using MumbleProto.Mumble.Ping.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Client timestamp. Server should not attempt to decode.
       * </pre>
       *
       * <code>optional uint64 timestamp = 1;</code>
       */
      @java.lang.Override
      public boolean hasTimestamp() {
        return instance.hasTimestamp();
      }
      /**
       * <pre>
       * Client timestamp. Server should not attempt to decode.
       * </pre>
       *
       * <code>optional uint64 timestamp = 1;</code>
       */
      @java.lang.Override
      public long getTimestamp() {
        return instance.getTimestamp();
      }
      /**
       * <pre>
       * Client timestamp. Server should not attempt to decode.
       * </pre>
       *
       * <code>optional uint64 timestamp = 1;</code>
       */
      public Builder setTimestamp(long value) {
        copyOnWrite();
        instance.setTimestamp(value);
        return this;
      }
      /**
       * <pre>
       * Client timestamp. Server should not attempt to decode.
       * </pre>
       *
       * <code>optional uint64 timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        copyOnWrite();
        instance.clearTimestamp();
        return this;
      }

      /**
       * <pre>
       * The amount of good packets received.
       * </pre>
       *
       * <code>optional uint32 good = 2;</code>
       */
      @java.lang.Override
      public boolean hasGood() {
        return instance.hasGood();
      }
      /**
       * <pre>
       * The amount of good packets received.
       * </pre>
       *
       * <code>optional uint32 good = 2;</code>
       */
      @java.lang.Override
      public int getGood() {
        return instance.getGood();
      }
      /**
       * <pre>
       * The amount of good packets received.
       * </pre>
       *
       * <code>optional uint32 good = 2;</code>
       */
      public Builder setGood(int value) {
        copyOnWrite();
        instance.setGood(value);
        return this;
      }
      /**
       * <pre>
       * The amount of good packets received.
       * </pre>
       *
       * <code>optional uint32 good = 2;</code>
       */
      public Builder clearGood() {
        copyOnWrite();
        instance.clearGood();
        return this;
      }

      /**
       * <pre>
       * The amount of late packets received.
       * </pre>
       *
       * <code>optional uint32 late = 3;</code>
       */
      @java.lang.Override
      public boolean hasLate() {
        return instance.hasLate();
      }
      /**
       * <pre>
       * The amount of late packets received.
       * </pre>
       *
       * <code>optional uint32 late = 3;</code>
       */
      @java.lang.Override
      public int getLate() {
        return instance.getLate();
      }
      /**
       * <pre>
       * The amount of late packets received.
       * </pre>
       *
       * <code>optional uint32 late = 3;</code>
       */
      public Builder setLate(int value) {
        copyOnWrite();
        instance.setLate(value);
        return this;
      }
      /**
       * <pre>
       * The amount of late packets received.
       * </pre>
       *
       * <code>optional uint32 late = 3;</code>
       */
      public Builder clearLate() {
        copyOnWrite();
        instance.clearLate();
        return this;
      }

      /**
       * <pre>
       * The amount of packets never received.
       * </pre>
       *
       * <code>optional uint32 lost = 4;</code>
       */
      @java.lang.Override
      public boolean hasLost() {
        return instance.hasLost();
      }
      /**
       * <pre>
       * The amount of packets never received.
       * </pre>
       *
       * <code>optional uint32 lost = 4;</code>
       */
      @java.lang.Override
      public int getLost() {
        return instance.getLost();
      }
      /**
       * <pre>
       * The amount of packets never received.
       * </pre>
       *
       * <code>optional uint32 lost = 4;</code>
       */
      public Builder setLost(int value) {
        copyOnWrite();
        instance.setLost(value);
        return this;
      }
      /**
       * <pre>
       * The amount of packets never received.
       * </pre>
       *
       * <code>optional uint32 lost = 4;</code>
       */
      public Builder clearLost() {
        copyOnWrite();
        instance.clearLost();
        return this;
      }

      /**
       * <pre>
       * The amount of nonce resyncs.
       * </pre>
       *
       * <code>optional uint32 resync = 5;</code>
       */
      @java.lang.Override
      public boolean hasResync() {
        return instance.hasResync();
      }
      /**
       * <pre>
       * The amount of nonce resyncs.
       * </pre>
       *
       * <code>optional uint32 resync = 5;</code>
       */
      @java.lang.Override
      public int getResync() {
        return instance.getResync();
      }
      /**
       * <pre>
       * The amount of nonce resyncs.
       * </pre>
       *
       * <code>optional uint32 resync = 5;</code>
       */
      public Builder setResync(int value) {
        copyOnWrite();
        instance.setResync(value);
        return this;
      }
      /**
       * <pre>
       * The amount of nonce resyncs.
       * </pre>
       *
       * <code>optional uint32 resync = 5;</code>
       */
      public Builder clearResync() {
        copyOnWrite();
        instance.clearResync();
        return this;
      }

      /**
       * <pre>
       * The total amount of UDP packets received.
       * </pre>
       *
       * <code>optional uint32 udp_packets = 6;</code>
       */
      @java.lang.Override
      public boolean hasUdpPackets() {
        return instance.hasUdpPackets();
      }
      /**
       * <pre>
       * The total amount of UDP packets received.
       * </pre>
       *
       * <code>optional uint32 udp_packets = 6;</code>
       */
      @java.lang.Override
      public int getUdpPackets() {
        return instance.getUdpPackets();
      }
      /**
       * <pre>
       * The total amount of UDP packets received.
       * </pre>
       *
       * <code>optional uint32 udp_packets = 6;</code>
       */
      public Builder setUdpPackets(int value) {
        copyOnWrite();
        instance.setUdpPackets(value);
        return this;
      }
      /**
       * <pre>
       * The total amount of UDP packets received.
       * </pre>
       *
       * <code>optional uint32 udp_packets = 6;</code>
       */
      public Builder clearUdpPackets() {
        copyOnWrite();
        instance.clearUdpPackets();
        return this;
      }

      /**
       * <pre>
       * The total amount of TCP packets received.
       * </pre>
       *
       * <code>optional uint32 tcp_packets = 7;</code>
       */
      @java.lang.Override
      public boolean hasTcpPackets() {
        return instance.hasTcpPackets();
      }
      /**
       * <pre>
       * The total amount of TCP packets received.
       * </pre>
       *
       * <code>optional uint32 tcp_packets = 7;</code>
       */
      @java.lang.Override
      public int getTcpPackets() {
        return instance.getTcpPackets();
      }
      /**
       * <pre>
       * The total amount of TCP packets received.
       * </pre>
       *
       * <code>optional uint32 tcp_packets = 7;</code>
       */
      public Builder setTcpPackets(int value) {
        copyOnWrite();
        instance.setTcpPackets(value);
        return this;
      }
      /**
       * <pre>
       * The total amount of TCP packets received.
       * </pre>
       *
       * <code>optional uint32 tcp_packets = 7;</code>
       */
      public Builder clearTcpPackets() {
        copyOnWrite();
        instance.clearTcpPackets();
        return this;
      }

      /**
       * <pre>
       * UDP ping average.
       * </pre>
       *
       * <code>optional float udp_ping_avg = 8;</code>
       */
      @java.lang.Override
      public boolean hasUdpPingAvg() {
        return instance.hasUdpPingAvg();
      }
      /**
       * <pre>
       * UDP ping average.
       * </pre>
       *
       * <code>optional float udp_ping_avg = 8;</code>
       */
      @java.lang.Override
      public float getUdpPingAvg() {
        return instance.getUdpPingAvg();
      }
      /**
       * <pre>
       * UDP ping average.
       * </pre>
       *
       * <code>optional float udp_ping_avg = 8;</code>
       */
      public Builder setUdpPingAvg(float value) {
        copyOnWrite();
        instance.setUdpPingAvg(value);
        return this;
      }
      /**
       * <pre>
       * UDP ping average.
       * </pre>
       *
       * <code>optional float udp_ping_avg = 8;</code>
       */
      public Builder clearUdpPingAvg() {
        copyOnWrite();
        instance.clearUdpPingAvg();
        return this;
      }

      /**
       * <pre>
       * UDP ping variance.
       * </pre>
       *
       * <code>optional float udp_ping_var = 9;</code>
       */
      @java.lang.Override
      public boolean hasUdpPingVar() {
        return instance.hasUdpPingVar();
      }
      /**
       * <pre>
       * UDP ping variance.
       * </pre>
       *
       * <code>optional float udp_ping_var = 9;</code>
       */
      @java.lang.Override
      public float getUdpPingVar() {
        return instance.getUdpPingVar();
      }
      /**
       * <pre>
       * UDP ping variance.
       * </pre>
       *
       * <code>optional float udp_ping_var = 9;</code>
       */
      public Builder setUdpPingVar(float value) {
        copyOnWrite();
        instance.setUdpPingVar(value);
        return this;
      }
      /**
       * <pre>
       * UDP ping variance.
       * </pre>
       *
       * <code>optional float udp_ping_var = 9;</code>
       */
      public Builder clearUdpPingVar() {
        copyOnWrite();
        instance.clearUdpPingVar();
        return this;
      }

      /**
       * <pre>
       * TCP ping average.
       * </pre>
       *
       * <code>optional float tcp_ping_avg = 10;</code>
       */
      @java.lang.Override
      public boolean hasTcpPingAvg() {
        return instance.hasTcpPingAvg();
      }
      /**
       * <pre>
       * TCP ping average.
       * </pre>
       *
       * <code>optional float tcp_ping_avg = 10;</code>
       */
      @java.lang.Override
      public float getTcpPingAvg() {
        return instance.getTcpPingAvg();
      }
      /**
       * <pre>
       * TCP ping average.
       * </pre>
       *
       * <code>optional float tcp_ping_avg = 10;</code>
       */
      public Builder setTcpPingAvg(float value) {
        copyOnWrite();
        instance.setTcpPingAvg(value);
        return this;
      }
      /**
       * <pre>
       * TCP ping average.
       * </pre>
       *
       * <code>optional float tcp_ping_avg = 10;</code>
       */
      public Builder clearTcpPingAvg() {
        copyOnWrite();
        instance.clearTcpPingAvg();
        return this;
      }

      /**
       * <pre>
       * TCP ping variance.
       * </pre>
       *
       * <code>optional float tcp_ping_var = 11;</code>
       */
      @java.lang.Override
      public boolean hasTcpPingVar() {
        return instance.hasTcpPingVar();
      }
      /**
       * <pre>
       * TCP ping variance.
       * </pre>
       *
       * <code>optional float tcp_ping_var = 11;</code>
       */
      @java.lang.Override
      public float getTcpPingVar() {
        return instance.getTcpPingVar();
      }
      /**
       * <pre>
       * TCP ping variance.
       * </pre>
       *
       * <code>optional float tcp_ping_var = 11;</code>
       */
      public Builder setTcpPingVar(float value) {
        copyOnWrite();
        instance.setTcpPingVar(value);
        return this;
      }
      /**
       * <pre>
       * TCP ping variance.
       * </pre>
       *
       * <code>optional float tcp_ping_var = 11;</code>
       */
      public Builder clearTcpPingVar() {
        copyOnWrite();
        instance.clearTcpPingVar();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.Ping)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.Ping();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "timestamp_",
              "good_",
              "late_",
              "lost_",
              "resync_",
              "udpPackets_",
              "tcpPackets_",
              "udpPingAvg_",
              "udpPingVar_",
              "tcpPingAvg_",
              "tcpPingVar_",
            };
            java.lang.String info =
                "\u0001\u000b\u0000\u0001\u0001\u000b\u000b\u0000\u0000\u0000\u0001\u0003\u0000\u0002" +
                "\u000b\u0001\u0003\u000b\u0002\u0004\u000b\u0003\u0005\u000b\u0004\u0006\u000b\u0005" +
                "\u0007\u000b\u0006\b\u0001\u0007\t\u0001\b\n\u0001\t\u000b\u0001\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.Ping> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.Ping.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.Ping)
    private static final MumbleProto.Mumble.Ping DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new Ping();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Ping.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.Ping getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Ping> PARSER;

    public static com.google.protobuf.Parser<Ping> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RejectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.Reject)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Rejection type.
     * </pre>
     *
     * <code>optional .MumbleProto.Reject.RejectType type = 1;</code>
     */
    boolean hasType();
    /**
     * <pre>
     * Rejection type.
     * </pre>
     *
     * <code>optional .MumbleProto.Reject.RejectType type = 1;</code>
     */
    MumbleProto.Mumble.Reject.RejectType getType();

    /**
     * <pre>
     * Human readable rejection reason.
     * </pre>
     *
     * <code>optional string reason = 2;</code>
     */
    boolean hasReason();
    /**
     * <pre>
     * Human readable rejection reason.
     * </pre>
     *
     * <code>optional string reason = 2;</code>
     */
    java.lang.String getReason();
    /**
     * <pre>
     * Human readable rejection reason.
     * </pre>
     *
     * <code>optional string reason = 2;</code>
     */
    com.google.protobuf.ByteString
        getReasonBytes();
  }
  /**
   * <pre>
   * Sent by the server when it rejects the user connection.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.Reject}
   */
  public  static final class Reject extends
      com.google.protobuf.GeneratedMessageLite<
          Reject, Reject.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.Reject)
      RejectOrBuilder {
    private Reject() {
      reason_ = "";
    }
    /**
     * Protobuf enum {@code MumbleProto.Reject.RejectType}
     */
    public enum RejectType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * The rejection reason is unknown (details should be available
       * in Reject.reason).
       * </pre>
       *
       * <code>None = 0;</code>
       */
      None(0),
      /**
       * <pre>
       * The client attempted to connect with an incompatible version.
       * </pre>
       *
       * <code>WrongVersion = 1;</code>
       */
      WrongVersion(1),
      /**
       * <pre>
       * The user name supplied by the client was invalid.
       * </pre>
       *
       * <code>InvalidUsername = 2;</code>
       */
      InvalidUsername(2),
      /**
       * <pre>
       * The client attempted to authenticate as a user with a password but it
       * was wrong.
       * </pre>
       *
       * <code>WrongUserPW = 3;</code>
       */
      WrongUserPW(3),
      /**
       * <pre>
       * The client attempted to connect to a passworded server but the password
       * was wrong.
       * </pre>
       *
       * <code>WrongServerPW = 4;</code>
       */
      WrongServerPW(4),
      /**
       * <pre>
       * Supplied username is already in use.
       * </pre>
       *
       * <code>UsernameInUse = 5;</code>
       */
      UsernameInUse(5),
      /**
       * <pre>
       * Server is currently full and cannot accept more users.
       * </pre>
       *
       * <code>ServerFull = 6;</code>
       */
      ServerFull(6),
      /**
       * <pre>
       * The user did not provide a certificate but one is required.
       * </pre>
       *
       * <code>NoCertificate = 7;</code>
       */
      NoCertificate(7),
      /**
       * <code>AuthenticatorFail = 8;</code>
       */
      AuthenticatorFail(8),
      ;

      /**
       * <pre>
       * The rejection reason is unknown (details should be available
       * in Reject.reason).
       * </pre>
       *
       * <code>None = 0;</code>
       */
      public static final int None_VALUE = 0;
      /**
       * <pre>
       * The client attempted to connect with an incompatible version.
       * </pre>
       *
       * <code>WrongVersion = 1;</code>
       */
      public static final int WrongVersion_VALUE = 1;
      /**
       * <pre>
       * The user name supplied by the client was invalid.
       * </pre>
       *
       * <code>InvalidUsername = 2;</code>
       */
      public static final int InvalidUsername_VALUE = 2;
      /**
       * <pre>
       * The client attempted to authenticate as a user with a password but it
       * was wrong.
       * </pre>
       *
       * <code>WrongUserPW = 3;</code>
       */
      public static final int WrongUserPW_VALUE = 3;
      /**
       * <pre>
       * The client attempted to connect to a passworded server but the password
       * was wrong.
       * </pre>
       *
       * <code>WrongServerPW = 4;</code>
       */
      public static final int WrongServerPW_VALUE = 4;
      /**
       * <pre>
       * Supplied username is already in use.
       * </pre>
       *
       * <code>UsernameInUse = 5;</code>
       */
      public static final int UsernameInUse_VALUE = 5;
      /**
       * <pre>
       * Server is currently full and cannot accept more users.
       * </pre>
       *
       * <code>ServerFull = 6;</code>
       */
      public static final int ServerFull_VALUE = 6;
      /**
       * <pre>
       * The user did not provide a certificate but one is required.
       * </pre>
       *
       * <code>NoCertificate = 7;</code>
       */
      public static final int NoCertificate_VALUE = 7;
      /**
       * <code>AuthenticatorFail = 8;</code>
       */
      public static final int AuthenticatorFail_VALUE = 8;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RejectType valueOf(int value) {
        return forNumber(value);
      }

      public static RejectType forNumber(int value) {
        switch (value) {
          case 0: return None;
          case 1: return WrongVersion;
          case 2: return InvalidUsername;
          case 3: return WrongUserPW;
          case 4: return WrongServerPW;
          case 5: return UsernameInUse;
          case 6: return ServerFull;
          case 7: return NoCertificate;
          case 8: return AuthenticatorFail;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RejectType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          RejectType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RejectType>() {
              @java.lang.Override
              public RejectType findValueByNumber(int number) {
                return RejectType.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return RejectTypeVerifier.INSTANCE;
      }

      private static final class RejectTypeVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new RejectTypeVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return RejectType.forNumber(number) != null;
              }
            };

      private final int value;

      private RejectType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:MumbleProto.Reject.RejectType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * Rejection type.
     * </pre>
     *
     * <code>optional .MumbleProto.Reject.RejectType type = 1;</code>
     */
    @java.lang.Override
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Rejection type.
     * </pre>
     *
     * <code>optional .MumbleProto.Reject.RejectType type = 1;</code>
     */
    @java.lang.Override
    public MumbleProto.Mumble.Reject.RejectType getType() {
      MumbleProto.Mumble.Reject.RejectType result = MumbleProto.Mumble.Reject.RejectType.forNumber(type_);
      return result == null ? MumbleProto.Mumble.Reject.RejectType.None : result;
    }
    /**
     * <pre>
     * Rejection type.
     * </pre>
     *
     * <code>optional .MumbleProto.Reject.RejectType type = 1;</code>
     */
    private void setType(MumbleProto.Mumble.Reject.RejectType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
    }
    /**
     * <pre>
     * Rejection type.
     * </pre>
     *
     * <code>optional .MumbleProto.Reject.RejectType type = 1;</code>
     */
    private void clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 0;
    }

    public static final int REASON_FIELD_NUMBER = 2;
    private java.lang.String reason_;
    /**
     * <pre>
     * Human readable rejection reason.
     * </pre>
     *
     * <code>optional string reason = 2;</code>
     */
    @java.lang.Override
    public boolean hasReason() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Human readable rejection reason.
     * </pre>
     *
     * <code>optional string reason = 2;</code>
     */
    @java.lang.Override
    public java.lang.String getReason() {
      return reason_;
    }
    /**
     * <pre>
     * Human readable rejection reason.
     * </pre>
     *
     * <code>optional string reason = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getReasonBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(reason_);
    }
    /**
     * <pre>
     * Human readable rejection reason.
     * </pre>
     *
     * <code>optional string reason = 2;</code>
     */
    private void setReason(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      reason_ = value;
    }
    /**
     * <pre>
     * Human readable rejection reason.
     * </pre>
     *
     * <code>optional string reason = 2;</code>
     */
    private void clearReason() {
      bitField0_ = (bitField0_ & ~0x00000002);
      reason_ = getDefaultInstance().getReason();
    }
    /**
     * <pre>
     * Human readable rejection reason.
     * </pre>
     *
     * <code>optional string reason = 2;</code>
     */
    private void setReasonBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      reason_ = value.toStringUtf8();
    }

    public static MumbleProto.Mumble.Reject parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.Reject parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.Reject parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.Reject parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.Reject parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.Reject parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.Reject parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.Reject parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.Reject parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.Reject parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.Reject parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.Reject parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.Reject prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Sent by the server when it rejects the user connection.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.Reject}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.Reject, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.Reject)
        MumbleProto.Mumble.RejectOrBuilder {
      // Construct using MumbleProto.Mumble.Reject.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Rejection type.
       * </pre>
       *
       * <code>optional .MumbleProto.Reject.RejectType type = 1;</code>
       */
      @java.lang.Override
      public boolean hasType() {
        return instance.hasType();
      }
      /**
       * <pre>
       * Rejection type.
       * </pre>
       *
       * <code>optional .MumbleProto.Reject.RejectType type = 1;</code>
       */
      @java.lang.Override
      public MumbleProto.Mumble.Reject.RejectType getType() {
        return instance.getType();
      }
      /**
       * <pre>
       * Rejection type.
       * </pre>
       *
       * <code>optional .MumbleProto.Reject.RejectType type = 1;</code>
       */
      public Builder setType(MumbleProto.Mumble.Reject.RejectType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <pre>
       * Rejection type.
       * </pre>
       *
       * <code>optional .MumbleProto.Reject.RejectType type = 1;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <pre>
       * Human readable rejection reason.
       * </pre>
       *
       * <code>optional string reason = 2;</code>
       */
      @java.lang.Override
      public boolean hasReason() {
        return instance.hasReason();
      }
      /**
       * <pre>
       * Human readable rejection reason.
       * </pre>
       *
       * <code>optional string reason = 2;</code>
       */
      @java.lang.Override
      public java.lang.String getReason() {
        return instance.getReason();
      }
      /**
       * <pre>
       * Human readable rejection reason.
       * </pre>
       *
       * <code>optional string reason = 2;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getReasonBytes() {
        return instance.getReasonBytes();
      }
      /**
       * <pre>
       * Human readable rejection reason.
       * </pre>
       *
       * <code>optional string reason = 2;</code>
       */
      public Builder setReason(
          java.lang.String value) {
        copyOnWrite();
        instance.setReason(value);
        return this;
      }
      /**
       * <pre>
       * Human readable rejection reason.
       * </pre>
       *
       * <code>optional string reason = 2;</code>
       */
      public Builder clearReason() {
        copyOnWrite();
        instance.clearReason();
        return this;
      }
      /**
       * <pre>
       * Human readable rejection reason.
       * </pre>
       *
       * <code>optional string reason = 2;</code>
       */
      public Builder setReasonBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setReasonBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.Reject)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.Reject();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "type_",
              MumbleProto.Mumble.Reject.RejectType.internalGetVerifier(),
              "reason_",
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\f\u0000\u0002" +
                "\b\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.Reject> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.Reject.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.Reject)
    private static final MumbleProto.Mumble.Reject DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new Reject();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Reject.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.Reject getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Reject> PARSER;

    public static com.google.protobuf.Parser<Reject> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ServerSyncOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.ServerSync)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The session of the current user.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    boolean hasSession();
    /**
     * <pre>
     * The session of the current user.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    int getSession();

    /**
     * <pre>
     * Maximum bandwidth that the user should use.
     * </pre>
     *
     * <code>optional uint32 max_bandwidth = 2;</code>
     */
    boolean hasMaxBandwidth();
    /**
     * <pre>
     * Maximum bandwidth that the user should use.
     * </pre>
     *
     * <code>optional uint32 max_bandwidth = 2;</code>
     */
    int getMaxBandwidth();

    /**
     * <pre>
     * Server welcome text.
     * </pre>
     *
     * <code>optional string welcome_text = 3;</code>
     */
    boolean hasWelcomeText();
    /**
     * <pre>
     * Server welcome text.
     * </pre>
     *
     * <code>optional string welcome_text = 3;</code>
     */
    java.lang.String getWelcomeText();
    /**
     * <pre>
     * Server welcome text.
     * </pre>
     *
     * <code>optional string welcome_text = 3;</code>
     */
    com.google.protobuf.ByteString
        getWelcomeTextBytes();

    /**
     * <pre>
     * Current user permissions in the root channel.
     * </pre>
     *
     * <code>optional uint64 permissions = 4;</code>
     */
    boolean hasPermissions();
    /**
     * <pre>
     * Current user permissions in the root channel.
     * </pre>
     *
     * <code>optional uint64 permissions = 4;</code>
     */
    long getPermissions();
  }
  /**
   * <pre>
   * ServerSync message is sent by the server when it has authenticated the user
   * and finished synchronizing the server state.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.ServerSync}
   */
  public  static final class ServerSync extends
      com.google.protobuf.GeneratedMessageLite<
          ServerSync, ServerSync.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.ServerSync)
      ServerSyncOrBuilder {
    private ServerSync() {
      welcomeText_ = "";
    }
    private int bitField0_;
    public static final int SESSION_FIELD_NUMBER = 1;
    private int session_;
    /**
     * <pre>
     * The session of the current user.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    @java.lang.Override
    public boolean hasSession() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The session of the current user.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    @java.lang.Override
    public int getSession() {
      return session_;
    }
    /**
     * <pre>
     * The session of the current user.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    private void setSession(int value) {
      bitField0_ |= 0x00000001;
      session_ = value;
    }
    /**
     * <pre>
     * The session of the current user.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    private void clearSession() {
      bitField0_ = (bitField0_ & ~0x00000001);
      session_ = 0;
    }

    public static final int MAX_BANDWIDTH_FIELD_NUMBER = 2;
    private int maxBandwidth_;
    /**
     * <pre>
     * Maximum bandwidth that the user should use.
     * </pre>
     *
     * <code>optional uint32 max_bandwidth = 2;</code>
     */
    @java.lang.Override
    public boolean hasMaxBandwidth() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Maximum bandwidth that the user should use.
     * </pre>
     *
     * <code>optional uint32 max_bandwidth = 2;</code>
     */
    @java.lang.Override
    public int getMaxBandwidth() {
      return maxBandwidth_;
    }
    /**
     * <pre>
     * Maximum bandwidth that the user should use.
     * </pre>
     *
     * <code>optional uint32 max_bandwidth = 2;</code>
     */
    private void setMaxBandwidth(int value) {
      bitField0_ |= 0x00000002;
      maxBandwidth_ = value;
    }
    /**
     * <pre>
     * Maximum bandwidth that the user should use.
     * </pre>
     *
     * <code>optional uint32 max_bandwidth = 2;</code>
     */
    private void clearMaxBandwidth() {
      bitField0_ = (bitField0_ & ~0x00000002);
      maxBandwidth_ = 0;
    }

    public static final int WELCOME_TEXT_FIELD_NUMBER = 3;
    private java.lang.String welcomeText_;
    /**
     * <pre>
     * Server welcome text.
     * </pre>
     *
     * <code>optional string welcome_text = 3;</code>
     */
    @java.lang.Override
    public boolean hasWelcomeText() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Server welcome text.
     * </pre>
     *
     * <code>optional string welcome_text = 3;</code>
     */
    @java.lang.Override
    public java.lang.String getWelcomeText() {
      return welcomeText_;
    }
    /**
     * <pre>
     * Server welcome text.
     * </pre>
     *
     * <code>optional string welcome_text = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getWelcomeTextBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(welcomeText_);
    }
    /**
     * <pre>
     * Server welcome text.
     * </pre>
     *
     * <code>optional string welcome_text = 3;</code>
     */
    private void setWelcomeText(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      welcomeText_ = value;
    }
    /**
     * <pre>
     * Server welcome text.
     * </pre>
     *
     * <code>optional string welcome_text = 3;</code>
     */
    private void clearWelcomeText() {
      bitField0_ = (bitField0_ & ~0x00000004);
      welcomeText_ = getDefaultInstance().getWelcomeText();
    }
    /**
     * <pre>
     * Server welcome text.
     * </pre>
     *
     * <code>optional string welcome_text = 3;</code>
     */
    private void setWelcomeTextBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      welcomeText_ = value.toStringUtf8();
    }

    public static final int PERMISSIONS_FIELD_NUMBER = 4;
    private long permissions_;
    /**
     * <pre>
     * Current user permissions in the root channel.
     * </pre>
     *
     * <code>optional uint64 permissions = 4;</code>
     */
    @java.lang.Override
    public boolean hasPermissions() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Current user permissions in the root channel.
     * </pre>
     *
     * <code>optional uint64 permissions = 4;</code>
     */
    @java.lang.Override
    public long getPermissions() {
      return permissions_;
    }
    /**
     * <pre>
     * Current user permissions in the root channel.
     * </pre>
     *
     * <code>optional uint64 permissions = 4;</code>
     */
    private void setPermissions(long value) {
      bitField0_ |= 0x00000008;
      permissions_ = value;
    }
    /**
     * <pre>
     * Current user permissions in the root channel.
     * </pre>
     *
     * <code>optional uint64 permissions = 4;</code>
     */
    private void clearPermissions() {
      bitField0_ = (bitField0_ & ~0x00000008);
      permissions_ = 0L;
    }

    public static MumbleProto.Mumble.ServerSync parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ServerSync parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ServerSync parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ServerSync parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ServerSync parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ServerSync parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ServerSync parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ServerSync parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.ServerSync parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ServerSync parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.ServerSync parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ServerSync parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.ServerSync prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * ServerSync message is sent by the server when it has authenticated the user
     * and finished synchronizing the server state.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.ServerSync}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.ServerSync, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.ServerSync)
        MumbleProto.Mumble.ServerSyncOrBuilder {
      // Construct using MumbleProto.Mumble.ServerSync.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The session of the current user.
       * </pre>
       *
       * <code>optional uint32 session = 1;</code>
       */
      @java.lang.Override
      public boolean hasSession() {
        return instance.hasSession();
      }
      /**
       * <pre>
       * The session of the current user.
       * </pre>
       *
       * <code>optional uint32 session = 1;</code>
       */
      @java.lang.Override
      public int getSession() {
        return instance.getSession();
      }
      /**
       * <pre>
       * The session of the current user.
       * </pre>
       *
       * <code>optional uint32 session = 1;</code>
       */
      public Builder setSession(int value) {
        copyOnWrite();
        instance.setSession(value);
        return this;
      }
      /**
       * <pre>
       * The session of the current user.
       * </pre>
       *
       * <code>optional uint32 session = 1;</code>
       */
      public Builder clearSession() {
        copyOnWrite();
        instance.clearSession();
        return this;
      }

      /**
       * <pre>
       * Maximum bandwidth that the user should use.
       * </pre>
       *
       * <code>optional uint32 max_bandwidth = 2;</code>
       */
      @java.lang.Override
      public boolean hasMaxBandwidth() {
        return instance.hasMaxBandwidth();
      }
      /**
       * <pre>
       * Maximum bandwidth that the user should use.
       * </pre>
       *
       * <code>optional uint32 max_bandwidth = 2;</code>
       */
      @java.lang.Override
      public int getMaxBandwidth() {
        return instance.getMaxBandwidth();
      }
      /**
       * <pre>
       * Maximum bandwidth that the user should use.
       * </pre>
       *
       * <code>optional uint32 max_bandwidth = 2;</code>
       */
      public Builder setMaxBandwidth(int value) {
        copyOnWrite();
        instance.setMaxBandwidth(value);
        return this;
      }
      /**
       * <pre>
       * Maximum bandwidth that the user should use.
       * </pre>
       *
       * <code>optional uint32 max_bandwidth = 2;</code>
       */
      public Builder clearMaxBandwidth() {
        copyOnWrite();
        instance.clearMaxBandwidth();
        return this;
      }

      /**
       * <pre>
       * Server welcome text.
       * </pre>
       *
       * <code>optional string welcome_text = 3;</code>
       */
      @java.lang.Override
      public boolean hasWelcomeText() {
        return instance.hasWelcomeText();
      }
      /**
       * <pre>
       * Server welcome text.
       * </pre>
       *
       * <code>optional string welcome_text = 3;</code>
       */
      @java.lang.Override
      public java.lang.String getWelcomeText() {
        return instance.getWelcomeText();
      }
      /**
       * <pre>
       * Server welcome text.
       * </pre>
       *
       * <code>optional string welcome_text = 3;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getWelcomeTextBytes() {
        return instance.getWelcomeTextBytes();
      }
      /**
       * <pre>
       * Server welcome text.
       * </pre>
       *
       * <code>optional string welcome_text = 3;</code>
       */
      public Builder setWelcomeText(
          java.lang.String value) {
        copyOnWrite();
        instance.setWelcomeText(value);
        return this;
      }
      /**
       * <pre>
       * Server welcome text.
       * </pre>
       *
       * <code>optional string welcome_text = 3;</code>
       */
      public Builder clearWelcomeText() {
        copyOnWrite();
        instance.clearWelcomeText();
        return this;
      }
      /**
       * <pre>
       * Server welcome text.
       * </pre>
       *
       * <code>optional string welcome_text = 3;</code>
       */
      public Builder setWelcomeTextBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setWelcomeTextBytes(value);
        return this;
      }

      /**
       * <pre>
       * Current user permissions in the root channel.
       * </pre>
       *
       * <code>optional uint64 permissions = 4;</code>
       */
      @java.lang.Override
      public boolean hasPermissions() {
        return instance.hasPermissions();
      }
      /**
       * <pre>
       * Current user permissions in the root channel.
       * </pre>
       *
       * <code>optional uint64 permissions = 4;</code>
       */
      @java.lang.Override
      public long getPermissions() {
        return instance.getPermissions();
      }
      /**
       * <pre>
       * Current user permissions in the root channel.
       * </pre>
       *
       * <code>optional uint64 permissions = 4;</code>
       */
      public Builder setPermissions(long value) {
        copyOnWrite();
        instance.setPermissions(value);
        return this;
      }
      /**
       * <pre>
       * Current user permissions in the root channel.
       * </pre>
       *
       * <code>optional uint64 permissions = 4;</code>
       */
      public Builder clearPermissions() {
        copyOnWrite();
        instance.clearPermissions();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.ServerSync)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.ServerSync();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "session_",
              "maxBandwidth_",
              "welcomeText_",
              "permissions_",
            };
            java.lang.String info =
                "\u0001\u0004\u0000\u0001\u0001\u0004\u0004\u0000\u0000\u0000\u0001\u000b\u0000\u0002" +
                "\u000b\u0001\u0003\b\u0002\u0004\u0003\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.ServerSync> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.ServerSync.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.ServerSync)
    private static final MumbleProto.Mumble.ServerSync DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new ServerSync();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ServerSync.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.ServerSync getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ServerSync> PARSER;

    public static com.google.protobuf.Parser<ServerSync> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ChannelRemoveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.ChannelRemove)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 channel_id = 1;</code>
     */
    boolean hasChannelId();
    /**
     * <code>required uint32 channel_id = 1;</code>
     */
    int getChannelId();
  }
  /**
   * <pre>
   * Sent by the client when it wants a channel removed. Sent by the server when
   * a channel has been removed and clients should be notified.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.ChannelRemove}
   */
  public  static final class ChannelRemove extends
      com.google.protobuf.GeneratedMessageLite<
          ChannelRemove, ChannelRemove.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.ChannelRemove)
      ChannelRemoveOrBuilder {
    private ChannelRemove() {
    }
    private int bitField0_;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private int channelId_;
    /**
     * <code>required uint32 channel_id = 1;</code>
     */
    @java.lang.Override
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required uint32 channel_id = 1;</code>
     */
    @java.lang.Override
    public int getChannelId() {
      return channelId_;
    }
    /**
     * <code>required uint32 channel_id = 1;</code>
     */
    private void setChannelId(int value) {
      bitField0_ |= 0x00000001;
      channelId_ = value;
    }
    /**
     * <code>required uint32 channel_id = 1;</code>
     */
    private void clearChannelId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      channelId_ = 0;
    }

    public static MumbleProto.Mumble.ChannelRemove parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ChannelRemove parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ChannelRemove parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ChannelRemove parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ChannelRemove parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ChannelRemove parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ChannelRemove parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ChannelRemove parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.ChannelRemove parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ChannelRemove parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.ChannelRemove parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ChannelRemove parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.ChannelRemove prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Sent by the client when it wants a channel removed. Sent by the server when
     * a channel has been removed and clients should be notified.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.ChannelRemove}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.ChannelRemove, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.ChannelRemove)
        MumbleProto.Mumble.ChannelRemoveOrBuilder {
      // Construct using MumbleProto.Mumble.ChannelRemove.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 channel_id = 1;</code>
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return instance.hasChannelId();
      }
      /**
       * <code>required uint32 channel_id = 1;</code>
       */
      @java.lang.Override
      public int getChannelId() {
        return instance.getChannelId();
      }
      /**
       * <code>required uint32 channel_id = 1;</code>
       */
      public Builder setChannelId(int value) {
        copyOnWrite();
        instance.setChannelId(value);
        return this;
      }
      /**
       * <code>required uint32 channel_id = 1;</code>
       */
      public Builder clearChannelId() {
        copyOnWrite();
        instance.clearChannelId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.ChannelRemove)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.ChannelRemove();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "channelId_",
            };
            java.lang.String info =
                "\u0001\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0001\u0001\u050b\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.ChannelRemove> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.ChannelRemove.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.ChannelRemove)
    private static final MumbleProto.Mumble.ChannelRemove DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new ChannelRemove();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ChannelRemove.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.ChannelRemove getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ChannelRemove> PARSER;

    public static com.google.protobuf.Parser<ChannelRemove> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ChannelStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.ChannelState)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Unique ID for the channel within the server.
     * </pre>
     *
     * <code>optional uint32 channel_id = 1;</code>
     */
    boolean hasChannelId();
    /**
     * <pre>
     * Unique ID for the channel within the server.
     * </pre>
     *
     * <code>optional uint32 channel_id = 1;</code>
     */
    int getChannelId();

    /**
     * <pre>
     * channel_id of the parent channel.
     * </pre>
     *
     * <code>optional uint32 parent = 2;</code>
     */
    boolean hasParent();
    /**
     * <pre>
     * channel_id of the parent channel.
     * </pre>
     *
     * <code>optional uint32 parent = 2;</code>
     */
    int getParent();

    /**
     * <pre>
     * UTF-8 encoded channel name.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    boolean hasName();
    /**
     * <pre>
     * UTF-8 encoded channel name.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * UTF-8 encoded channel name.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * A collection of channel id values of the linked channels. Absent during
     * the first channel listing.
     * </pre>
     *
     * <code>repeated uint32 links = 4;</code>
     */
    java.util.List<java.lang.Integer> getLinksList();
    /**
     * <pre>
     * A collection of channel id values of the linked channels. Absent during
     * the first channel listing.
     * </pre>
     *
     * <code>repeated uint32 links = 4;</code>
     */
    int getLinksCount();
    /**
     * <pre>
     * A collection of channel id values of the linked channels. Absent during
     * the first channel listing.
     * </pre>
     *
     * <code>repeated uint32 links = 4;</code>
     */
    int getLinks(int index);

    /**
     * <pre>
     * UTF-8 encoded channel description. Only if the description is less than
     * 128 bytes
     * </pre>
     *
     * <code>optional string description = 5;</code>
     */
    boolean hasDescription();
    /**
     * <pre>
     * UTF-8 encoded channel description. Only if the description is less than
     * 128 bytes
     * </pre>
     *
     * <code>optional string description = 5;</code>
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * UTF-8 encoded channel description. Only if the description is less than
     * 128 bytes
     * </pre>
     *
     * <code>optional string description = 5;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * A collection of channel_id values that should be added to links.
     * </pre>
     *
     * <code>repeated uint32 links_add = 6;</code>
     */
    java.util.List<java.lang.Integer> getLinksAddList();
    /**
     * <pre>
     * A collection of channel_id values that should be added to links.
     * </pre>
     *
     * <code>repeated uint32 links_add = 6;</code>
     */
    int getLinksAddCount();
    /**
     * <pre>
     * A collection of channel_id values that should be added to links.
     * </pre>
     *
     * <code>repeated uint32 links_add = 6;</code>
     */
    int getLinksAdd(int index);

    /**
     * <pre>
     * A collection of channel_id values that should be removed from links.
     * </pre>
     *
     * <code>repeated uint32 links_remove = 7;</code>
     */
    java.util.List<java.lang.Integer> getLinksRemoveList();
    /**
     * <pre>
     * A collection of channel_id values that should be removed from links.
     * </pre>
     *
     * <code>repeated uint32 links_remove = 7;</code>
     */
    int getLinksRemoveCount();
    /**
     * <pre>
     * A collection of channel_id values that should be removed from links.
     * </pre>
     *
     * <code>repeated uint32 links_remove = 7;</code>
     */
    int getLinksRemove(int index);

    /**
     * <pre>
     * True if the channel is temporary.
     * </pre>
     *
     * <code>optional bool temporary = 8 [default = false];</code>
     */
    boolean hasTemporary();
    /**
     * <pre>
     * True if the channel is temporary.
     * </pre>
     *
     * <code>optional bool temporary = 8 [default = false];</code>
     */
    boolean getTemporary();

    /**
     * <pre>
     * Position weight to tweak the channel position in the channel list.
     * </pre>
     *
     * <code>optional int32 position = 9 [default = 0];</code>
     */
    boolean hasPosition();
    /**
     * <pre>
     * Position weight to tweak the channel position in the channel list.
     * </pre>
     *
     * <code>optional int32 position = 9 [default = 0];</code>
     */
    int getPosition();

    /**
     * <pre>
     * SHA1 hash of the description if the description is 128 bytes or more.
     * </pre>
     *
     * <code>optional bytes description_hash = 10;</code>
     */
    boolean hasDescriptionHash();
    /**
     * <pre>
     * SHA1 hash of the description if the description is 128 bytes or more.
     * </pre>
     *
     * <code>optional bytes description_hash = 10;</code>
     */
    com.google.protobuf.ByteString getDescriptionHash();

    /**
     * <pre>
     * Maximum number of users allowed in the channel. If this value is zero,
     * the maximum number of users allowed in the channel is given by the
     * server's "usersperchannel" setting.
     * </pre>
     *
     * <code>optional uint32 max_users = 11;</code>
     */
    boolean hasMaxUsers();
    /**
     * <pre>
     * Maximum number of users allowed in the channel. If this value is zero,
     * the maximum number of users allowed in the channel is given by the
     * server's "usersperchannel" setting.
     * </pre>
     *
     * <code>optional uint32 max_users = 11;</code>
     */
    int getMaxUsers();
  }
  /**
   * <pre>
   * Used to communicate channel properties between the client and the server.
   * Sent by the server during the login process or when channel properties are
   * updated. Client may use this message to update said channel properties.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.ChannelState}
   */
  public  static final class ChannelState extends
      com.google.protobuf.GeneratedMessageLite<
          ChannelState, ChannelState.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.ChannelState)
      ChannelStateOrBuilder {
    private ChannelState() {
      name_ = "";
      links_ = emptyIntList();
      description_ = "";
      linksAdd_ = emptyIntList();
      linksRemove_ = emptyIntList();
      descriptionHash_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private int channelId_;
    /**
     * <pre>
     * Unique ID for the channel within the server.
     * </pre>
     *
     * <code>optional uint32 channel_id = 1;</code>
     */
    @java.lang.Override
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Unique ID for the channel within the server.
     * </pre>
     *
     * <code>optional uint32 channel_id = 1;</code>
     */
    @java.lang.Override
    public int getChannelId() {
      return channelId_;
    }
    /**
     * <pre>
     * Unique ID for the channel within the server.
     * </pre>
     *
     * <code>optional uint32 channel_id = 1;</code>
     */
    private void setChannelId(int value) {
      bitField0_ |= 0x00000001;
      channelId_ = value;
    }
    /**
     * <pre>
     * Unique ID for the channel within the server.
     * </pre>
     *
     * <code>optional uint32 channel_id = 1;</code>
     */
    private void clearChannelId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      channelId_ = 0;
    }

    public static final int PARENT_FIELD_NUMBER = 2;
    private int parent_;
    /**
     * <pre>
     * channel_id of the parent channel.
     * </pre>
     *
     * <code>optional uint32 parent = 2;</code>
     */
    @java.lang.Override
    public boolean hasParent() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * channel_id of the parent channel.
     * </pre>
     *
     * <code>optional uint32 parent = 2;</code>
     */
    @java.lang.Override
    public int getParent() {
      return parent_;
    }
    /**
     * <pre>
     * channel_id of the parent channel.
     * </pre>
     *
     * <code>optional uint32 parent = 2;</code>
     */
    private void setParent(int value) {
      bitField0_ |= 0x00000002;
      parent_ = value;
    }
    /**
     * <pre>
     * channel_id of the parent channel.
     * </pre>
     *
     * <code>optional uint32 parent = 2;</code>
     */
    private void clearParent() {
      bitField0_ = (bitField0_ & ~0x00000002);
      parent_ = 0;
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.String name_;
    /**
     * <pre>
     * UTF-8 encoded channel name.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * UTF-8 encoded channel name.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    @java.lang.Override
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <pre>
     * UTF-8 encoded channel name.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <pre>
     * UTF-8 encoded channel name.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      name_ = value;
    }
    /**
     * <pre>
     * UTF-8 encoded channel name.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    private void clearName() {
      bitField0_ = (bitField0_ & ~0x00000004);
      name_ = getDefaultInstance().getName();
    }
    /**
     * <pre>
     * UTF-8 encoded channel name.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      name_ = value.toStringUtf8();
    }

    public static final int LINKS_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList links_;
    /**
     * <pre>
     * A collection of channel id values of the linked channels. Absent during
     * the first channel listing.
     * </pre>
     *
     * <code>repeated uint32 links = 4;</code>
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getLinksList() {
      return links_;
    }
    /**
     * <pre>
     * A collection of channel id values of the linked channels. Absent during
     * the first channel listing.
     * </pre>
     *
     * <code>repeated uint32 links = 4;</code>
     */
    @java.lang.Override
    public int getLinksCount() {
      return links_.size();
    }
    /**
     * <pre>
     * A collection of channel id values of the linked channels. Absent during
     * the first channel listing.
     * </pre>
     *
     * <code>repeated uint32 links = 4;</code>
     */
    @java.lang.Override
    public int getLinks(int index) {
      return links_.getInt(index);
    }
    private void ensureLinksIsMutable() {
      if (!links_.isModifiable()) {
        links_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(links_);
       }
    }
    /**
     * <pre>
     * A collection of channel id values of the linked channels. Absent during
     * the first channel listing.
     * </pre>
     *
     * <code>repeated uint32 links = 4;</code>
     */
    private void setLinks(
        int index, int value) {
      ensureLinksIsMutable();
      links_.setInt(index, value);
    }
    /**
     * <pre>
     * A collection of channel id values of the linked channels. Absent during
     * the first channel listing.
     * </pre>
     *
     * <code>repeated uint32 links = 4;</code>
     */
    private void addLinks(int value) {
      ensureLinksIsMutable();
      links_.addInt(value);
    }
    /**
     * <pre>
     * A collection of channel id values of the linked channels. Absent during
     * the first channel listing.
     * </pre>
     *
     * <code>repeated uint32 links = 4;</code>
     */
    private void addAllLinks(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureLinksIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, links_);
    }
    /**
     * <pre>
     * A collection of channel id values of the linked channels. Absent during
     * the first channel listing.
     * </pre>
     *
     * <code>repeated uint32 links = 4;</code>
     */
    private void clearLinks() {
      links_ = emptyIntList();
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 5;
    private java.lang.String description_;
    /**
     * <pre>
     * UTF-8 encoded channel description. Only if the description is less than
     * 128 bytes
     * </pre>
     *
     * <code>optional string description = 5;</code>
     */
    @java.lang.Override
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * UTF-8 encoded channel description. Only if the description is less than
     * 128 bytes
     * </pre>
     *
     * <code>optional string description = 5;</code>
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      return description_;
    }
    /**
     * <pre>
     * UTF-8 encoded channel description. Only if the description is less than
     * 128 bytes
     * </pre>
     *
     * <code>optional string description = 5;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(description_);
    }
    /**
     * <pre>
     * UTF-8 encoded channel description. Only if the description is less than
     * 128 bytes
     * </pre>
     *
     * <code>optional string description = 5;</code>
     */
    private void setDescription(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      description_ = value;
    }
    /**
     * <pre>
     * UTF-8 encoded channel description. Only if the description is less than
     * 128 bytes
     * </pre>
     *
     * <code>optional string description = 5;</code>
     */
    private void clearDescription() {
      bitField0_ = (bitField0_ & ~0x00000008);
      description_ = getDefaultInstance().getDescription();
    }
    /**
     * <pre>
     * UTF-8 encoded channel description. Only if the description is less than
     * 128 bytes
     * </pre>
     *
     * <code>optional string description = 5;</code>
     */
    private void setDescriptionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      description_ = value.toStringUtf8();
    }

    public static final int LINKS_ADD_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.IntList linksAdd_;
    /**
     * <pre>
     * A collection of channel_id values that should be added to links.
     * </pre>
     *
     * <code>repeated uint32 links_add = 6;</code>
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getLinksAddList() {
      return linksAdd_;
    }
    /**
     * <pre>
     * A collection of channel_id values that should be added to links.
     * </pre>
     *
     * <code>repeated uint32 links_add = 6;</code>
     */
    @java.lang.Override
    public int getLinksAddCount() {
      return linksAdd_.size();
    }
    /**
     * <pre>
     * A collection of channel_id values that should be added to links.
     * </pre>
     *
     * <code>repeated uint32 links_add = 6;</code>
     */
    @java.lang.Override
    public int getLinksAdd(int index) {
      return linksAdd_.getInt(index);
    }
    private void ensureLinksAddIsMutable() {
      if (!linksAdd_.isModifiable()) {
        linksAdd_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(linksAdd_);
       }
    }
    /**
     * <pre>
     * A collection of channel_id values that should be added to links.
     * </pre>
     *
     * <code>repeated uint32 links_add = 6;</code>
     */
    private void setLinksAdd(
        int index, int value) {
      ensureLinksAddIsMutable();
      linksAdd_.setInt(index, value);
    }
    /**
     * <pre>
     * A collection of channel_id values that should be added to links.
     * </pre>
     *
     * <code>repeated uint32 links_add = 6;</code>
     */
    private void addLinksAdd(int value) {
      ensureLinksAddIsMutable();
      linksAdd_.addInt(value);
    }
    /**
     * <pre>
     * A collection of channel_id values that should be added to links.
     * </pre>
     *
     * <code>repeated uint32 links_add = 6;</code>
     */
    private void addAllLinksAdd(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureLinksAddIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, linksAdd_);
    }
    /**
     * <pre>
     * A collection of channel_id values that should be added to links.
     * </pre>
     *
     * <code>repeated uint32 links_add = 6;</code>
     */
    private void clearLinksAdd() {
      linksAdd_ = emptyIntList();
    }

    public static final int LINKS_REMOVE_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.IntList linksRemove_;
    /**
     * <pre>
     * A collection of channel_id values that should be removed from links.
     * </pre>
     *
     * <code>repeated uint32 links_remove = 7;</code>
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getLinksRemoveList() {
      return linksRemove_;
    }
    /**
     * <pre>
     * A collection of channel_id values that should be removed from links.
     * </pre>
     *
     * <code>repeated uint32 links_remove = 7;</code>
     */
    @java.lang.Override
    public int getLinksRemoveCount() {
      return linksRemove_.size();
    }
    /**
     * <pre>
     * A collection of channel_id values that should be removed from links.
     * </pre>
     *
     * <code>repeated uint32 links_remove = 7;</code>
     */
    @java.lang.Override
    public int getLinksRemove(int index) {
      return linksRemove_.getInt(index);
    }
    private void ensureLinksRemoveIsMutable() {
      if (!linksRemove_.isModifiable()) {
        linksRemove_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(linksRemove_);
       }
    }
    /**
     * <pre>
     * A collection of channel_id values that should be removed from links.
     * </pre>
     *
     * <code>repeated uint32 links_remove = 7;</code>
     */
    private void setLinksRemove(
        int index, int value) {
      ensureLinksRemoveIsMutable();
      linksRemove_.setInt(index, value);
    }
    /**
     * <pre>
     * A collection of channel_id values that should be removed from links.
     * </pre>
     *
     * <code>repeated uint32 links_remove = 7;</code>
     */
    private void addLinksRemove(int value) {
      ensureLinksRemoveIsMutable();
      linksRemove_.addInt(value);
    }
    /**
     * <pre>
     * A collection of channel_id values that should be removed from links.
     * </pre>
     *
     * <code>repeated uint32 links_remove = 7;</code>
     */
    private void addAllLinksRemove(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureLinksRemoveIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, linksRemove_);
    }
    /**
     * <pre>
     * A collection of channel_id values that should be removed from links.
     * </pre>
     *
     * <code>repeated uint32 links_remove = 7;</code>
     */
    private void clearLinksRemove() {
      linksRemove_ = emptyIntList();
    }

    public static final int TEMPORARY_FIELD_NUMBER = 8;
    private boolean temporary_;
    /**
     * <pre>
     * True if the channel is temporary.
     * </pre>
     *
     * <code>optional bool temporary = 8 [default = false];</code>
     */
    @java.lang.Override
    public boolean hasTemporary() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * True if the channel is temporary.
     * </pre>
     *
     * <code>optional bool temporary = 8 [default = false];</code>
     */
    @java.lang.Override
    public boolean getTemporary() {
      return temporary_;
    }
    /**
     * <pre>
     * True if the channel is temporary.
     * </pre>
     *
     * <code>optional bool temporary = 8 [default = false];</code>
     */
    private void setTemporary(boolean value) {
      bitField0_ |= 0x00000010;
      temporary_ = value;
    }
    /**
     * <pre>
     * True if the channel is temporary.
     * </pre>
     *
     * <code>optional bool temporary = 8 [default = false];</code>
     */
    private void clearTemporary() {
      bitField0_ = (bitField0_ & ~0x00000010);
      temporary_ = false;
    }

    public static final int POSITION_FIELD_NUMBER = 9;
    private int position_;
    /**
     * <pre>
     * Position weight to tweak the channel position in the channel list.
     * </pre>
     *
     * <code>optional int32 position = 9 [default = 0];</code>
     */
    @java.lang.Override
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Position weight to tweak the channel position in the channel list.
     * </pre>
     *
     * <code>optional int32 position = 9 [default = 0];</code>
     */
    @java.lang.Override
    public int getPosition() {
      return position_;
    }
    /**
     * <pre>
     * Position weight to tweak the channel position in the channel list.
     * </pre>
     *
     * <code>optional int32 position = 9 [default = 0];</code>
     */
    private void setPosition(int value) {
      bitField0_ |= 0x00000020;
      position_ = value;
    }
    /**
     * <pre>
     * Position weight to tweak the channel position in the channel list.
     * </pre>
     *
     * <code>optional int32 position = 9 [default = 0];</code>
     */
    private void clearPosition() {
      bitField0_ = (bitField0_ & ~0x00000020);
      position_ = 0;
    }

    public static final int DESCRIPTION_HASH_FIELD_NUMBER = 10;
    private com.google.protobuf.ByteString descriptionHash_;
    /**
     * <pre>
     * SHA1 hash of the description if the description is 128 bytes or more.
     * </pre>
     *
     * <code>optional bytes description_hash = 10;</code>
     */
    @java.lang.Override
    public boolean hasDescriptionHash() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * SHA1 hash of the description if the description is 128 bytes or more.
     * </pre>
     *
     * <code>optional bytes description_hash = 10;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDescriptionHash() {
      return descriptionHash_;
    }
    /**
     * <pre>
     * SHA1 hash of the description if the description is 128 bytes or more.
     * </pre>
     *
     * <code>optional bytes description_hash = 10;</code>
     */
    private void setDescriptionHash(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
      descriptionHash_ = value;
    }
    /**
     * <pre>
     * SHA1 hash of the description if the description is 128 bytes or more.
     * </pre>
     *
     * <code>optional bytes description_hash = 10;</code>
     */
    private void clearDescriptionHash() {
      bitField0_ = (bitField0_ & ~0x00000040);
      descriptionHash_ = getDefaultInstance().getDescriptionHash();
    }

    public static final int MAX_USERS_FIELD_NUMBER = 11;
    private int maxUsers_;
    /**
     * <pre>
     * Maximum number of users allowed in the channel. If this value is zero,
     * the maximum number of users allowed in the channel is given by the
     * server's "usersperchannel" setting.
     * </pre>
     *
     * <code>optional uint32 max_users = 11;</code>
     */
    @java.lang.Override
    public boolean hasMaxUsers() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Maximum number of users allowed in the channel. If this value is zero,
     * the maximum number of users allowed in the channel is given by the
     * server's "usersperchannel" setting.
     * </pre>
     *
     * <code>optional uint32 max_users = 11;</code>
     */
    @java.lang.Override
    public int getMaxUsers() {
      return maxUsers_;
    }
    /**
     * <pre>
     * Maximum number of users allowed in the channel. If this value is zero,
     * the maximum number of users allowed in the channel is given by the
     * server's "usersperchannel" setting.
     * </pre>
     *
     * <code>optional uint32 max_users = 11;</code>
     */
    private void setMaxUsers(int value) {
      bitField0_ |= 0x00000080;
      maxUsers_ = value;
    }
    /**
     * <pre>
     * Maximum number of users allowed in the channel. If this value is zero,
     * the maximum number of users allowed in the channel is given by the
     * server's "usersperchannel" setting.
     * </pre>
     *
     * <code>optional uint32 max_users = 11;</code>
     */
    private void clearMaxUsers() {
      bitField0_ = (bitField0_ & ~0x00000080);
      maxUsers_ = 0;
    }

    public static MumbleProto.Mumble.ChannelState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ChannelState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ChannelState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ChannelState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ChannelState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ChannelState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ChannelState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ChannelState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.ChannelState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ChannelState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.ChannelState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ChannelState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.ChannelState prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Used to communicate channel properties between the client and the server.
     * Sent by the server during the login process or when channel properties are
     * updated. Client may use this message to update said channel properties.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.ChannelState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.ChannelState, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.ChannelState)
        MumbleProto.Mumble.ChannelStateOrBuilder {
      // Construct using MumbleProto.Mumble.ChannelState.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Unique ID for the channel within the server.
       * </pre>
       *
       * <code>optional uint32 channel_id = 1;</code>
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return instance.hasChannelId();
      }
      /**
       * <pre>
       * Unique ID for the channel within the server.
       * </pre>
       *
       * <code>optional uint32 channel_id = 1;</code>
       */
      @java.lang.Override
      public int getChannelId() {
        return instance.getChannelId();
      }
      /**
       * <pre>
       * Unique ID for the channel within the server.
       * </pre>
       *
       * <code>optional uint32 channel_id = 1;</code>
       */
      public Builder setChannelId(int value) {
        copyOnWrite();
        instance.setChannelId(value);
        return this;
      }
      /**
       * <pre>
       * Unique ID for the channel within the server.
       * </pre>
       *
       * <code>optional uint32 channel_id = 1;</code>
       */
      public Builder clearChannelId() {
        copyOnWrite();
        instance.clearChannelId();
        return this;
      }

      /**
       * <pre>
       * channel_id of the parent channel.
       * </pre>
       *
       * <code>optional uint32 parent = 2;</code>
       */
      @java.lang.Override
      public boolean hasParent() {
        return instance.hasParent();
      }
      /**
       * <pre>
       * channel_id of the parent channel.
       * </pre>
       *
       * <code>optional uint32 parent = 2;</code>
       */
      @java.lang.Override
      public int getParent() {
        return instance.getParent();
      }
      /**
       * <pre>
       * channel_id of the parent channel.
       * </pre>
       *
       * <code>optional uint32 parent = 2;</code>
       */
      public Builder setParent(int value) {
        copyOnWrite();
        instance.setParent(value);
        return this;
      }
      /**
       * <pre>
       * channel_id of the parent channel.
       * </pre>
       *
       * <code>optional uint32 parent = 2;</code>
       */
      public Builder clearParent() {
        copyOnWrite();
        instance.clearParent();
        return this;
      }

      /**
       * <pre>
       * UTF-8 encoded channel name.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      @java.lang.Override
      public boolean hasName() {
        return instance.hasName();
      }
      /**
       * <pre>
       * UTF-8 encoded channel name.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      @java.lang.Override
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <pre>
       * UTF-8 encoded channel name.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <pre>
       * UTF-8 encoded channel name.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <pre>
       * UTF-8 encoded channel name.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <pre>
       * UTF-8 encoded channel name.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * A collection of channel id values of the linked channels. Absent during
       * the first channel listing.
       * </pre>
       *
       * <code>repeated uint32 links = 4;</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getLinksList() {
        return java.util.Collections.unmodifiableList(
            instance.getLinksList());
      }
      /**
       * <pre>
       * A collection of channel id values of the linked channels. Absent during
       * the first channel listing.
       * </pre>
       *
       * <code>repeated uint32 links = 4;</code>
       */
      @java.lang.Override
      public int getLinksCount() {
        return instance.getLinksCount();
      }
      /**
       * <pre>
       * A collection of channel id values of the linked channels. Absent during
       * the first channel listing.
       * </pre>
       *
       * <code>repeated uint32 links = 4;</code>
       */
      @java.lang.Override
      public int getLinks(int index) {
        return instance.getLinks(index);
      }
      /**
       * <pre>
       * A collection of channel id values of the linked channels. Absent during
       * the first channel listing.
       * </pre>
       *
       * <code>repeated uint32 links = 4;</code>
       */
      public Builder setLinks(
          int index, int value) {
        copyOnWrite();
        instance.setLinks(index, value);
        return this;
      }
      /**
       * <pre>
       * A collection of channel id values of the linked channels. Absent during
       * the first channel listing.
       * </pre>
       *
       * <code>repeated uint32 links = 4;</code>
       */
      public Builder addLinks(int value) {
        copyOnWrite();
        instance.addLinks(value);
        return this;
      }
      /**
       * <pre>
       * A collection of channel id values of the linked channels. Absent during
       * the first channel listing.
       * </pre>
       *
       * <code>repeated uint32 links = 4;</code>
       */
      public Builder addAllLinks(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllLinks(values);
        return this;
      }
      /**
       * <pre>
       * A collection of channel id values of the linked channels. Absent during
       * the first channel listing.
       * </pre>
       *
       * <code>repeated uint32 links = 4;</code>
       */
      public Builder clearLinks() {
        copyOnWrite();
        instance.clearLinks();
        return this;
      }

      /**
       * <pre>
       * UTF-8 encoded channel description. Only if the description is less than
       * 128 bytes
       * </pre>
       *
       * <code>optional string description = 5;</code>
       */
      @java.lang.Override
      public boolean hasDescription() {
        return instance.hasDescription();
      }
      /**
       * <pre>
       * UTF-8 encoded channel description. Only if the description is less than
       * 128 bytes
       * </pre>
       *
       * <code>optional string description = 5;</code>
       */
      @java.lang.Override
      public java.lang.String getDescription() {
        return instance.getDescription();
      }
      /**
       * <pre>
       * UTF-8 encoded channel description. Only if the description is less than
       * 128 bytes
       * </pre>
       *
       * <code>optional string description = 5;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        return instance.getDescriptionBytes();
      }
      /**
       * <pre>
       * UTF-8 encoded channel description. Only if the description is less than
       * 128 bytes
       * </pre>
       *
       * <code>optional string description = 5;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        copyOnWrite();
        instance.setDescription(value);
        return this;
      }
      /**
       * <pre>
       * UTF-8 encoded channel description. Only if the description is less than
       * 128 bytes
       * </pre>
       *
       * <code>optional string description = 5;</code>
       */
      public Builder clearDescription() {
        copyOnWrite();
        instance.clearDescription();
        return this;
      }
      /**
       * <pre>
       * UTF-8 encoded channel description. Only if the description is less than
       * 128 bytes
       * </pre>
       *
       * <code>optional string description = 5;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDescriptionBytes(value);
        return this;
      }

      /**
       * <pre>
       * A collection of channel_id values that should be added to links.
       * </pre>
       *
       * <code>repeated uint32 links_add = 6;</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getLinksAddList() {
        return java.util.Collections.unmodifiableList(
            instance.getLinksAddList());
      }
      /**
       * <pre>
       * A collection of channel_id values that should be added to links.
       * </pre>
       *
       * <code>repeated uint32 links_add = 6;</code>
       */
      @java.lang.Override
      public int getLinksAddCount() {
        return instance.getLinksAddCount();
      }
      /**
       * <pre>
       * A collection of channel_id values that should be added to links.
       * </pre>
       *
       * <code>repeated uint32 links_add = 6;</code>
       */
      @java.lang.Override
      public int getLinksAdd(int index) {
        return instance.getLinksAdd(index);
      }
      /**
       * <pre>
       * A collection of channel_id values that should be added to links.
       * </pre>
       *
       * <code>repeated uint32 links_add = 6;</code>
       */
      public Builder setLinksAdd(
          int index, int value) {
        copyOnWrite();
        instance.setLinksAdd(index, value);
        return this;
      }
      /**
       * <pre>
       * A collection of channel_id values that should be added to links.
       * </pre>
       *
       * <code>repeated uint32 links_add = 6;</code>
       */
      public Builder addLinksAdd(int value) {
        copyOnWrite();
        instance.addLinksAdd(value);
        return this;
      }
      /**
       * <pre>
       * A collection of channel_id values that should be added to links.
       * </pre>
       *
       * <code>repeated uint32 links_add = 6;</code>
       */
      public Builder addAllLinksAdd(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllLinksAdd(values);
        return this;
      }
      /**
       * <pre>
       * A collection of channel_id values that should be added to links.
       * </pre>
       *
       * <code>repeated uint32 links_add = 6;</code>
       */
      public Builder clearLinksAdd() {
        copyOnWrite();
        instance.clearLinksAdd();
        return this;
      }

      /**
       * <pre>
       * A collection of channel_id values that should be removed from links.
       * </pre>
       *
       * <code>repeated uint32 links_remove = 7;</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getLinksRemoveList() {
        return java.util.Collections.unmodifiableList(
            instance.getLinksRemoveList());
      }
      /**
       * <pre>
       * A collection of channel_id values that should be removed from links.
       * </pre>
       *
       * <code>repeated uint32 links_remove = 7;</code>
       */
      @java.lang.Override
      public int getLinksRemoveCount() {
        return instance.getLinksRemoveCount();
      }
      /**
       * <pre>
       * A collection of channel_id values that should be removed from links.
       * </pre>
       *
       * <code>repeated uint32 links_remove = 7;</code>
       */
      @java.lang.Override
      public int getLinksRemove(int index) {
        return instance.getLinksRemove(index);
      }
      /**
       * <pre>
       * A collection of channel_id values that should be removed from links.
       * </pre>
       *
       * <code>repeated uint32 links_remove = 7;</code>
       */
      public Builder setLinksRemove(
          int index, int value) {
        copyOnWrite();
        instance.setLinksRemove(index, value);
        return this;
      }
      /**
       * <pre>
       * A collection of channel_id values that should be removed from links.
       * </pre>
       *
       * <code>repeated uint32 links_remove = 7;</code>
       */
      public Builder addLinksRemove(int value) {
        copyOnWrite();
        instance.addLinksRemove(value);
        return this;
      }
      /**
       * <pre>
       * A collection of channel_id values that should be removed from links.
       * </pre>
       *
       * <code>repeated uint32 links_remove = 7;</code>
       */
      public Builder addAllLinksRemove(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllLinksRemove(values);
        return this;
      }
      /**
       * <pre>
       * A collection of channel_id values that should be removed from links.
       * </pre>
       *
       * <code>repeated uint32 links_remove = 7;</code>
       */
      public Builder clearLinksRemove() {
        copyOnWrite();
        instance.clearLinksRemove();
        return this;
      }

      /**
       * <pre>
       * True if the channel is temporary.
       * </pre>
       *
       * <code>optional bool temporary = 8 [default = false];</code>
       */
      @java.lang.Override
      public boolean hasTemporary() {
        return instance.hasTemporary();
      }
      /**
       * <pre>
       * True if the channel is temporary.
       * </pre>
       *
       * <code>optional bool temporary = 8 [default = false];</code>
       */
      @java.lang.Override
      public boolean getTemporary() {
        return instance.getTemporary();
      }
      /**
       * <pre>
       * True if the channel is temporary.
       * </pre>
       *
       * <code>optional bool temporary = 8 [default = false];</code>
       */
      public Builder setTemporary(boolean value) {
        copyOnWrite();
        instance.setTemporary(value);
        return this;
      }
      /**
       * <pre>
       * True if the channel is temporary.
       * </pre>
       *
       * <code>optional bool temporary = 8 [default = false];</code>
       */
      public Builder clearTemporary() {
        copyOnWrite();
        instance.clearTemporary();
        return this;
      }

      /**
       * <pre>
       * Position weight to tweak the channel position in the channel list.
       * </pre>
       *
       * <code>optional int32 position = 9 [default = 0];</code>
       */
      @java.lang.Override
      public boolean hasPosition() {
        return instance.hasPosition();
      }
      /**
       * <pre>
       * Position weight to tweak the channel position in the channel list.
       * </pre>
       *
       * <code>optional int32 position = 9 [default = 0];</code>
       */
      @java.lang.Override
      public int getPosition() {
        return instance.getPosition();
      }
      /**
       * <pre>
       * Position weight to tweak the channel position in the channel list.
       * </pre>
       *
       * <code>optional int32 position = 9 [default = 0];</code>
       */
      public Builder setPosition(int value) {
        copyOnWrite();
        instance.setPosition(value);
        return this;
      }
      /**
       * <pre>
       * Position weight to tweak the channel position in the channel list.
       * </pre>
       *
       * <code>optional int32 position = 9 [default = 0];</code>
       */
      public Builder clearPosition() {
        copyOnWrite();
        instance.clearPosition();
        return this;
      }

      /**
       * <pre>
       * SHA1 hash of the description if the description is 128 bytes or more.
       * </pre>
       *
       * <code>optional bytes description_hash = 10;</code>
       */
      @java.lang.Override
      public boolean hasDescriptionHash() {
        return instance.hasDescriptionHash();
      }
      /**
       * <pre>
       * SHA1 hash of the description if the description is 128 bytes or more.
       * </pre>
       *
       * <code>optional bytes description_hash = 10;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getDescriptionHash() {
        return instance.getDescriptionHash();
      }
      /**
       * <pre>
       * SHA1 hash of the description if the description is 128 bytes or more.
       * </pre>
       *
       * <code>optional bytes description_hash = 10;</code>
       */
      public Builder setDescriptionHash(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDescriptionHash(value);
        return this;
      }
      /**
       * <pre>
       * SHA1 hash of the description if the description is 128 bytes or more.
       * </pre>
       *
       * <code>optional bytes description_hash = 10;</code>
       */
      public Builder clearDescriptionHash() {
        copyOnWrite();
        instance.clearDescriptionHash();
        return this;
      }

      /**
       * <pre>
       * Maximum number of users allowed in the channel. If this value is zero,
       * the maximum number of users allowed in the channel is given by the
       * server's "usersperchannel" setting.
       * </pre>
       *
       * <code>optional uint32 max_users = 11;</code>
       */
      @java.lang.Override
      public boolean hasMaxUsers() {
        return instance.hasMaxUsers();
      }
      /**
       * <pre>
       * Maximum number of users allowed in the channel. If this value is zero,
       * the maximum number of users allowed in the channel is given by the
       * server's "usersperchannel" setting.
       * </pre>
       *
       * <code>optional uint32 max_users = 11;</code>
       */
      @java.lang.Override
      public int getMaxUsers() {
        return instance.getMaxUsers();
      }
      /**
       * <pre>
       * Maximum number of users allowed in the channel. If this value is zero,
       * the maximum number of users allowed in the channel is given by the
       * server's "usersperchannel" setting.
       * </pre>
       *
       * <code>optional uint32 max_users = 11;</code>
       */
      public Builder setMaxUsers(int value) {
        copyOnWrite();
        instance.setMaxUsers(value);
        return this;
      }
      /**
       * <pre>
       * Maximum number of users allowed in the channel. If this value is zero,
       * the maximum number of users allowed in the channel is given by the
       * server's "usersperchannel" setting.
       * </pre>
       *
       * <code>optional uint32 max_users = 11;</code>
       */
      public Builder clearMaxUsers() {
        copyOnWrite();
        instance.clearMaxUsers();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.ChannelState)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.ChannelState();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "channelId_",
              "parent_",
              "name_",
              "links_",
              "description_",
              "linksAdd_",
              "linksRemove_",
              "temporary_",
              "position_",
              "descriptionHash_",
              "maxUsers_",
            };
            java.lang.String info =
                "\u0001\u000b\u0000\u0001\u0001\u000b\u000b\u0000\u0003\u0000\u0001\u000b\u0000\u0002" +
                "\u000b\u0001\u0003\b\u0002\u0004\u001d\u0005\b\u0003\u0006\u001d\u0007\u001d\b\u0007" +
                "\u0004\t\u0004\u0005\n\n\u0006\u000b\u000b\u0007";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.ChannelState> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.ChannelState.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.ChannelState)
    private static final MumbleProto.Mumble.ChannelState DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new ChannelState();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ChannelState.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.ChannelState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ChannelState> PARSER;

    public static com.google.protobuf.Parser<ChannelState> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface UserRemoveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.UserRemove)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The user who is being kicked, identified by their session, not present
     * when no one is being kicked.
     * </pre>
     *
     * <code>required uint32 session = 1;</code>
     */
    boolean hasSession();
    /**
     * <pre>
     * The user who is being kicked, identified by their session, not present
     * when no one is being kicked.
     * </pre>
     *
     * <code>required uint32 session = 1;</code>
     */
    int getSession();

    /**
     * <pre>
     * The user who initiated the removal. Either the user who performs the kick
     * or the user who is currently leaving.
     * </pre>
     *
     * <code>optional uint32 actor = 2;</code>
     */
    boolean hasActor();
    /**
     * <pre>
     * The user who initiated the removal. Either the user who performs the kick
     * or the user who is currently leaving.
     * </pre>
     *
     * <code>optional uint32 actor = 2;</code>
     */
    int getActor();

    /**
     * <pre>
     * Reason for the kick, stored as the ban reason if the user is banned.
     * </pre>
     *
     * <code>optional string reason = 3;</code>
     */
    boolean hasReason();
    /**
     * <pre>
     * Reason for the kick, stored as the ban reason if the user is banned.
     * </pre>
     *
     * <code>optional string reason = 3;</code>
     */
    java.lang.String getReason();
    /**
     * <pre>
     * Reason for the kick, stored as the ban reason if the user is banned.
     * </pre>
     *
     * <code>optional string reason = 3;</code>
     */
    com.google.protobuf.ByteString
        getReasonBytes();

    /**
     * <pre>
     * True if the kick should result in a ban.
     * </pre>
     *
     * <code>optional bool ban = 4;</code>
     */
    boolean hasBan();
    /**
     * <pre>
     * True if the kick should result in a ban.
     * </pre>
     *
     * <code>optional bool ban = 4;</code>
     */
    boolean getBan();
  }
  /**
   * <pre>
   * Used to communicate user leaving or being kicked. May be sent by the client
   * when it attempts to kick a user. Sent by the server when it informs the
   * clients that a user is not present anymore.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.UserRemove}
   */
  public  static final class UserRemove extends
      com.google.protobuf.GeneratedMessageLite<
          UserRemove, UserRemove.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.UserRemove)
      UserRemoveOrBuilder {
    private UserRemove() {
      reason_ = "";
    }
    private int bitField0_;
    public static final int SESSION_FIELD_NUMBER = 1;
    private int session_;
    /**
     * <pre>
     * The user who is being kicked, identified by their session, not present
     * when no one is being kicked.
     * </pre>
     *
     * <code>required uint32 session = 1;</code>
     */
    @java.lang.Override
    public boolean hasSession() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The user who is being kicked, identified by their session, not present
     * when no one is being kicked.
     * </pre>
     *
     * <code>required uint32 session = 1;</code>
     */
    @java.lang.Override
    public int getSession() {
      return session_;
    }
    /**
     * <pre>
     * The user who is being kicked, identified by their session, not present
     * when no one is being kicked.
     * </pre>
     *
     * <code>required uint32 session = 1;</code>
     */
    private void setSession(int value) {
      bitField0_ |= 0x00000001;
      session_ = value;
    }
    /**
     * <pre>
     * The user who is being kicked, identified by their session, not present
     * when no one is being kicked.
     * </pre>
     *
     * <code>required uint32 session = 1;</code>
     */
    private void clearSession() {
      bitField0_ = (bitField0_ & ~0x00000001);
      session_ = 0;
    }

    public static final int ACTOR_FIELD_NUMBER = 2;
    private int actor_;
    /**
     * <pre>
     * The user who initiated the removal. Either the user who performs the kick
     * or the user who is currently leaving.
     * </pre>
     *
     * <code>optional uint32 actor = 2;</code>
     */
    @java.lang.Override
    public boolean hasActor() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The user who initiated the removal. Either the user who performs the kick
     * or the user who is currently leaving.
     * </pre>
     *
     * <code>optional uint32 actor = 2;</code>
     */
    @java.lang.Override
    public int getActor() {
      return actor_;
    }
    /**
     * <pre>
     * The user who initiated the removal. Either the user who performs the kick
     * or the user who is currently leaving.
     * </pre>
     *
     * <code>optional uint32 actor = 2;</code>
     */
    private void setActor(int value) {
      bitField0_ |= 0x00000002;
      actor_ = value;
    }
    /**
     * <pre>
     * The user who initiated the removal. Either the user who performs the kick
     * or the user who is currently leaving.
     * </pre>
     *
     * <code>optional uint32 actor = 2;</code>
     */
    private void clearActor() {
      bitField0_ = (bitField0_ & ~0x00000002);
      actor_ = 0;
    }

    public static final int REASON_FIELD_NUMBER = 3;
    private java.lang.String reason_;
    /**
     * <pre>
     * Reason for the kick, stored as the ban reason if the user is banned.
     * </pre>
     *
     * <code>optional string reason = 3;</code>
     */
    @java.lang.Override
    public boolean hasReason() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Reason for the kick, stored as the ban reason if the user is banned.
     * </pre>
     *
     * <code>optional string reason = 3;</code>
     */
    @java.lang.Override
    public java.lang.String getReason() {
      return reason_;
    }
    /**
     * <pre>
     * Reason for the kick, stored as the ban reason if the user is banned.
     * </pre>
     *
     * <code>optional string reason = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getReasonBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(reason_);
    }
    /**
     * <pre>
     * Reason for the kick, stored as the ban reason if the user is banned.
     * </pre>
     *
     * <code>optional string reason = 3;</code>
     */
    private void setReason(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      reason_ = value;
    }
    /**
     * <pre>
     * Reason for the kick, stored as the ban reason if the user is banned.
     * </pre>
     *
     * <code>optional string reason = 3;</code>
     */
    private void clearReason() {
      bitField0_ = (bitField0_ & ~0x00000004);
      reason_ = getDefaultInstance().getReason();
    }
    /**
     * <pre>
     * Reason for the kick, stored as the ban reason if the user is banned.
     * </pre>
     *
     * <code>optional string reason = 3;</code>
     */
    private void setReasonBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      reason_ = value.toStringUtf8();
    }

    public static final int BAN_FIELD_NUMBER = 4;
    private boolean ban_;
    /**
     * <pre>
     * True if the kick should result in a ban.
     * </pre>
     *
     * <code>optional bool ban = 4;</code>
     */
    @java.lang.Override
    public boolean hasBan() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * True if the kick should result in a ban.
     * </pre>
     *
     * <code>optional bool ban = 4;</code>
     */
    @java.lang.Override
    public boolean getBan() {
      return ban_;
    }
    /**
     * <pre>
     * True if the kick should result in a ban.
     * </pre>
     *
     * <code>optional bool ban = 4;</code>
     */
    private void setBan(boolean value) {
      bitField0_ |= 0x00000008;
      ban_ = value;
    }
    /**
     * <pre>
     * True if the kick should result in a ban.
     * </pre>
     *
     * <code>optional bool ban = 4;</code>
     */
    private void clearBan() {
      bitField0_ = (bitField0_ & ~0x00000008);
      ban_ = false;
    }

    public static MumbleProto.Mumble.UserRemove parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.UserRemove parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.UserRemove parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.UserRemove parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.UserRemove parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.UserRemove parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.UserRemove parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.UserRemove parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.UserRemove parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.UserRemove parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.UserRemove parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.UserRemove parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.UserRemove prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Used to communicate user leaving or being kicked. May be sent by the client
     * when it attempts to kick a user. Sent by the server when it informs the
     * clients that a user is not present anymore.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.UserRemove}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.UserRemove, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.UserRemove)
        MumbleProto.Mumble.UserRemoveOrBuilder {
      // Construct using MumbleProto.Mumble.UserRemove.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The user who is being kicked, identified by their session, not present
       * when no one is being kicked.
       * </pre>
       *
       * <code>required uint32 session = 1;</code>
       */
      @java.lang.Override
      public boolean hasSession() {
        return instance.hasSession();
      }
      /**
       * <pre>
       * The user who is being kicked, identified by their session, not present
       * when no one is being kicked.
       * </pre>
       *
       * <code>required uint32 session = 1;</code>
       */
      @java.lang.Override
      public int getSession() {
        return instance.getSession();
      }
      /**
       * <pre>
       * The user who is being kicked, identified by their session, not present
       * when no one is being kicked.
       * </pre>
       *
       * <code>required uint32 session = 1;</code>
       */
      public Builder setSession(int value) {
        copyOnWrite();
        instance.setSession(value);
        return this;
      }
      /**
       * <pre>
       * The user who is being kicked, identified by their session, not present
       * when no one is being kicked.
       * </pre>
       *
       * <code>required uint32 session = 1;</code>
       */
      public Builder clearSession() {
        copyOnWrite();
        instance.clearSession();
        return this;
      }

      /**
       * <pre>
       * The user who initiated the removal. Either the user who performs the kick
       * or the user who is currently leaving.
       * </pre>
       *
       * <code>optional uint32 actor = 2;</code>
       */
      @java.lang.Override
      public boolean hasActor() {
        return instance.hasActor();
      }
      /**
       * <pre>
       * The user who initiated the removal. Either the user who performs the kick
       * or the user who is currently leaving.
       * </pre>
       *
       * <code>optional uint32 actor = 2;</code>
       */
      @java.lang.Override
      public int getActor() {
        return instance.getActor();
      }
      /**
       * <pre>
       * The user who initiated the removal. Either the user who performs the kick
       * or the user who is currently leaving.
       * </pre>
       *
       * <code>optional uint32 actor = 2;</code>
       */
      public Builder setActor(int value) {
        copyOnWrite();
        instance.setActor(value);
        return this;
      }
      /**
       * <pre>
       * The user who initiated the removal. Either the user who performs the kick
       * or the user who is currently leaving.
       * </pre>
       *
       * <code>optional uint32 actor = 2;</code>
       */
      public Builder clearActor() {
        copyOnWrite();
        instance.clearActor();
        return this;
      }

      /**
       * <pre>
       * Reason for the kick, stored as the ban reason if the user is banned.
       * </pre>
       *
       * <code>optional string reason = 3;</code>
       */
      @java.lang.Override
      public boolean hasReason() {
        return instance.hasReason();
      }
      /**
       * <pre>
       * Reason for the kick, stored as the ban reason if the user is banned.
       * </pre>
       *
       * <code>optional string reason = 3;</code>
       */
      @java.lang.Override
      public java.lang.String getReason() {
        return instance.getReason();
      }
      /**
       * <pre>
       * Reason for the kick, stored as the ban reason if the user is banned.
       * </pre>
       *
       * <code>optional string reason = 3;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getReasonBytes() {
        return instance.getReasonBytes();
      }
      /**
       * <pre>
       * Reason for the kick, stored as the ban reason if the user is banned.
       * </pre>
       *
       * <code>optional string reason = 3;</code>
       */
      public Builder setReason(
          java.lang.String value) {
        copyOnWrite();
        instance.setReason(value);
        return this;
      }
      /**
       * <pre>
       * Reason for the kick, stored as the ban reason if the user is banned.
       * </pre>
       *
       * <code>optional string reason = 3;</code>
       */
      public Builder clearReason() {
        copyOnWrite();
        instance.clearReason();
        return this;
      }
      /**
       * <pre>
       * Reason for the kick, stored as the ban reason if the user is banned.
       * </pre>
       *
       * <code>optional string reason = 3;</code>
       */
      public Builder setReasonBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setReasonBytes(value);
        return this;
      }

      /**
       * <pre>
       * True if the kick should result in a ban.
       * </pre>
       *
       * <code>optional bool ban = 4;</code>
       */
      @java.lang.Override
      public boolean hasBan() {
        return instance.hasBan();
      }
      /**
       * <pre>
       * True if the kick should result in a ban.
       * </pre>
       *
       * <code>optional bool ban = 4;</code>
       */
      @java.lang.Override
      public boolean getBan() {
        return instance.getBan();
      }
      /**
       * <pre>
       * True if the kick should result in a ban.
       * </pre>
       *
       * <code>optional bool ban = 4;</code>
       */
      public Builder setBan(boolean value) {
        copyOnWrite();
        instance.setBan(value);
        return this;
      }
      /**
       * <pre>
       * True if the kick should result in a ban.
       * </pre>
       *
       * <code>optional bool ban = 4;</code>
       */
      public Builder clearBan() {
        copyOnWrite();
        instance.clearBan();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.UserRemove)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.UserRemove();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "session_",
              "actor_",
              "reason_",
              "ban_",
            };
            java.lang.String info =
                "\u0001\u0004\u0000\u0001\u0001\u0004\u0004\u0000\u0000\u0001\u0001\u050b\u0000\u0002" +
                "\u000b\u0001\u0003\b\u0002\u0004\u0007\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.UserRemove> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.UserRemove.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.UserRemove)
    private static final MumbleProto.Mumble.UserRemove DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new UserRemove();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        UserRemove.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.UserRemove getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<UserRemove> PARSER;

    public static com.google.protobuf.Parser<UserRemove> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface UserStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.UserState)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Unique user session ID of the user whose state this is, may change on
     * reconnect.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    boolean hasSession();
    /**
     * <pre>
     * Unique user session ID of the user whose state this is, may change on
     * reconnect.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    int getSession();

    /**
     * <pre>
     * The session of the user who is updating this user.
     * </pre>
     *
     * <code>optional uint32 actor = 2;</code>
     */
    boolean hasActor();
    /**
     * <pre>
     * The session of the user who is updating this user.
     * </pre>
     *
     * <code>optional uint32 actor = 2;</code>
     */
    int getActor();

    /**
     * <pre>
     * User name, UTF-8 encoded.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    boolean hasName();
    /**
     * <pre>
     * User name, UTF-8 encoded.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * User name, UTF-8 encoded.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Registered user ID if the user is registered.
     * </pre>
     *
     * <code>optional uint32 user_id = 4;</code>
     */
    boolean hasUserId();
    /**
     * <pre>
     * Registered user ID if the user is registered.
     * </pre>
     *
     * <code>optional uint32 user_id = 4;</code>
     */
    int getUserId();

    /**
     * <pre>
     * Channel on which the user is.
     * </pre>
     *
     * <code>optional uint32 channel_id = 5;</code>
     */
    boolean hasChannelId();
    /**
     * <pre>
     * Channel on which the user is.
     * </pre>
     *
     * <code>optional uint32 channel_id = 5;</code>
     */
    int getChannelId();

    /**
     * <pre>
     * True if the user is muted by admin.
     * </pre>
     *
     * <code>optional bool mute = 6;</code>
     */
    boolean hasMute();
    /**
     * <pre>
     * True if the user is muted by admin.
     * </pre>
     *
     * <code>optional bool mute = 6;</code>
     */
    boolean getMute();

    /**
     * <pre>
     * True if the user is deafened by admin.
     * </pre>
     *
     * <code>optional bool deaf = 7;</code>
     */
    boolean hasDeaf();
    /**
     * <pre>
     * True if the user is deafened by admin.
     * </pre>
     *
     * <code>optional bool deaf = 7;</code>
     */
    boolean getDeaf();

    /**
     * <pre>
     * True if the user has been suppressed from talking by a reason other than
     * being muted.
     * </pre>
     *
     * <code>optional bool suppress = 8;</code>
     */
    boolean hasSuppress();
    /**
     * <pre>
     * True if the user has been suppressed from talking by a reason other than
     * being muted.
     * </pre>
     *
     * <code>optional bool suppress = 8;</code>
     */
    boolean getSuppress();

    /**
     * <pre>
     * True if the user has muted self.
     * </pre>
     *
     * <code>optional bool self_mute = 9;</code>
     */
    boolean hasSelfMute();
    /**
     * <pre>
     * True if the user has muted self.
     * </pre>
     *
     * <code>optional bool self_mute = 9;</code>
     */
    boolean getSelfMute();

    /**
     * <pre>
     * True if the user has deafened self.
     * </pre>
     *
     * <code>optional bool self_deaf = 10;</code>
     */
    boolean hasSelfDeaf();
    /**
     * <pre>
     * True if the user has deafened self.
     * </pre>
     *
     * <code>optional bool self_deaf = 10;</code>
     */
    boolean getSelfDeaf();

    /**
     * <pre>
     * User image if it is less than 128 bytes.
     * </pre>
     *
     * <code>optional bytes texture = 11;</code>
     */
    boolean hasTexture();
    /**
     * <pre>
     * User image if it is less than 128 bytes.
     * </pre>
     *
     * <code>optional bytes texture = 11;</code>
     */
    com.google.protobuf.ByteString getTexture();

    /**
     * <pre>
     * The positional audio plugin identifier.
     * Positional audio information is only sent to users who share
     * identical plugin contexts.
     * This value is not trasmitted to clients.
     * </pre>
     *
     * <code>optional bytes plugin_context = 12;</code>
     */
    boolean hasPluginContext();
    /**
     * <pre>
     * The positional audio plugin identifier.
     * Positional audio information is only sent to users who share
     * identical plugin contexts.
     * This value is not trasmitted to clients.
     * </pre>
     *
     * <code>optional bytes plugin_context = 12;</code>
     */
    com.google.protobuf.ByteString getPluginContext();

    /**
     * <pre>
     * The user's plugin-specific identity.
     * This value is not transmitted to clients.
     * </pre>
     *
     * <code>optional string plugin_identity = 13;</code>
     */
    boolean hasPluginIdentity();
    /**
     * <pre>
     * The user's plugin-specific identity.
     * This value is not transmitted to clients.
     * </pre>
     *
     * <code>optional string plugin_identity = 13;</code>
     */
    java.lang.String getPluginIdentity();
    /**
     * <pre>
     * The user's plugin-specific identity.
     * This value is not transmitted to clients.
     * </pre>
     *
     * <code>optional string plugin_identity = 13;</code>
     */
    com.google.protobuf.ByteString
        getPluginIdentityBytes();

    /**
     * <pre>
     * User comment if it is less than 128 bytes.
     * </pre>
     *
     * <code>optional string comment = 14;</code>
     */
    boolean hasComment();
    /**
     * <pre>
     * User comment if it is less than 128 bytes.
     * </pre>
     *
     * <code>optional string comment = 14;</code>
     */
    java.lang.String getComment();
    /**
     * <pre>
     * User comment if it is less than 128 bytes.
     * </pre>
     *
     * <code>optional string comment = 14;</code>
     */
    com.google.protobuf.ByteString
        getCommentBytes();

    /**
     * <pre>
     * The hash of the user certificate.
     * </pre>
     *
     * <code>optional string hash = 15;</code>
     */
    boolean hasHash();
    /**
     * <pre>
     * The hash of the user certificate.
     * </pre>
     *
     * <code>optional string hash = 15;</code>
     */
    java.lang.String getHash();
    /**
     * <pre>
     * The hash of the user certificate.
     * </pre>
     *
     * <code>optional string hash = 15;</code>
     */
    com.google.protobuf.ByteString
        getHashBytes();

    /**
     * <pre>
     * SHA1 hash of the user comment if it 128 bytes or more.
     * </pre>
     *
     * <code>optional bytes comment_hash = 16;</code>
     */
    boolean hasCommentHash();
    /**
     * <pre>
     * SHA1 hash of the user comment if it 128 bytes or more.
     * </pre>
     *
     * <code>optional bytes comment_hash = 16;</code>
     */
    com.google.protobuf.ByteString getCommentHash();

    /**
     * <pre>
     * SHA1 hash of the user picture if it 128 bytes or more.
     * </pre>
     *
     * <code>optional bytes texture_hash = 17;</code>
     */
    boolean hasTextureHash();
    /**
     * <pre>
     * SHA1 hash of the user picture if it 128 bytes or more.
     * </pre>
     *
     * <code>optional bytes texture_hash = 17;</code>
     */
    com.google.protobuf.ByteString getTextureHash();

    /**
     * <pre>
     * True if the user is a priority speaker.
     * </pre>
     *
     * <code>optional bool priority_speaker = 18;</code>
     */
    boolean hasPrioritySpeaker();
    /**
     * <pre>
     * True if the user is a priority speaker.
     * </pre>
     *
     * <code>optional bool priority_speaker = 18;</code>
     */
    boolean getPrioritySpeaker();

    /**
     * <pre>
     * True if the user is currently recording.
     * </pre>
     *
     * <code>optional bool recording = 19;</code>
     */
    boolean hasRecording();
    /**
     * <pre>
     * True if the user is currently recording.
     * </pre>
     *
     * <code>optional bool recording = 19;</code>
     */
    boolean getRecording();
  }
  /**
   * <pre>
   * Sent by the server when it communicates new and changed users to client.
   * First seen during login procedure. May be sent by the client when it wishes
   * to alter its state.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.UserState}
   */
  public  static final class UserState extends
      com.google.protobuf.GeneratedMessageLite<
          UserState, UserState.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.UserState)
      UserStateOrBuilder {
    private UserState() {
      name_ = "";
      texture_ = com.google.protobuf.ByteString.EMPTY;
      pluginContext_ = com.google.protobuf.ByteString.EMPTY;
      pluginIdentity_ = "";
      comment_ = "";
      hash_ = "";
      commentHash_ = com.google.protobuf.ByteString.EMPTY;
      textureHash_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int SESSION_FIELD_NUMBER = 1;
    private int session_;
    /**
     * <pre>
     * Unique user session ID of the user whose state this is, may change on
     * reconnect.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    @java.lang.Override
    public boolean hasSession() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Unique user session ID of the user whose state this is, may change on
     * reconnect.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    @java.lang.Override
    public int getSession() {
      return session_;
    }
    /**
     * <pre>
     * Unique user session ID of the user whose state this is, may change on
     * reconnect.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    private void setSession(int value) {
      bitField0_ |= 0x00000001;
      session_ = value;
    }
    /**
     * <pre>
     * Unique user session ID of the user whose state this is, may change on
     * reconnect.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    private void clearSession() {
      bitField0_ = (bitField0_ & ~0x00000001);
      session_ = 0;
    }

    public static final int ACTOR_FIELD_NUMBER = 2;
    private int actor_;
    /**
     * <pre>
     * The session of the user who is updating this user.
     * </pre>
     *
     * <code>optional uint32 actor = 2;</code>
     */
    @java.lang.Override
    public boolean hasActor() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The session of the user who is updating this user.
     * </pre>
     *
     * <code>optional uint32 actor = 2;</code>
     */
    @java.lang.Override
    public int getActor() {
      return actor_;
    }
    /**
     * <pre>
     * The session of the user who is updating this user.
     * </pre>
     *
     * <code>optional uint32 actor = 2;</code>
     */
    private void setActor(int value) {
      bitField0_ |= 0x00000002;
      actor_ = value;
    }
    /**
     * <pre>
     * The session of the user who is updating this user.
     * </pre>
     *
     * <code>optional uint32 actor = 2;</code>
     */
    private void clearActor() {
      bitField0_ = (bitField0_ & ~0x00000002);
      actor_ = 0;
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.String name_;
    /**
     * <pre>
     * User name, UTF-8 encoded.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * User name, UTF-8 encoded.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    @java.lang.Override
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <pre>
     * User name, UTF-8 encoded.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <pre>
     * User name, UTF-8 encoded.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      name_ = value;
    }
    /**
     * <pre>
     * User name, UTF-8 encoded.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    private void clearName() {
      bitField0_ = (bitField0_ & ~0x00000004);
      name_ = getDefaultInstance().getName();
    }
    /**
     * <pre>
     * User name, UTF-8 encoded.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      name_ = value.toStringUtf8();
    }

    public static final int USER_ID_FIELD_NUMBER = 4;
    private int userId_;
    /**
     * <pre>
     * Registered user ID if the user is registered.
     * </pre>
     *
     * <code>optional uint32 user_id = 4;</code>
     */
    @java.lang.Override
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Registered user ID if the user is registered.
     * </pre>
     *
     * <code>optional uint32 user_id = 4;</code>
     */
    @java.lang.Override
    public int getUserId() {
      return userId_;
    }
    /**
     * <pre>
     * Registered user ID if the user is registered.
     * </pre>
     *
     * <code>optional uint32 user_id = 4;</code>
     */
    private void setUserId(int value) {
      bitField0_ |= 0x00000008;
      userId_ = value;
    }
    /**
     * <pre>
     * Registered user ID if the user is registered.
     * </pre>
     *
     * <code>optional uint32 user_id = 4;</code>
     */
    private void clearUserId() {
      bitField0_ = (bitField0_ & ~0x00000008);
      userId_ = 0;
    }

    public static final int CHANNEL_ID_FIELD_NUMBER = 5;
    private int channelId_;
    /**
     * <pre>
     * Channel on which the user is.
     * </pre>
     *
     * <code>optional uint32 channel_id = 5;</code>
     */
    @java.lang.Override
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Channel on which the user is.
     * </pre>
     *
     * <code>optional uint32 channel_id = 5;</code>
     */
    @java.lang.Override
    public int getChannelId() {
      return channelId_;
    }
    /**
     * <pre>
     * Channel on which the user is.
     * </pre>
     *
     * <code>optional uint32 channel_id = 5;</code>
     */
    private void setChannelId(int value) {
      bitField0_ |= 0x00000010;
      channelId_ = value;
    }
    /**
     * <pre>
     * Channel on which the user is.
     * </pre>
     *
     * <code>optional uint32 channel_id = 5;</code>
     */
    private void clearChannelId() {
      bitField0_ = (bitField0_ & ~0x00000010);
      channelId_ = 0;
    }

    public static final int MUTE_FIELD_NUMBER = 6;
    private boolean mute_;
    /**
     * <pre>
     * True if the user is muted by admin.
     * </pre>
     *
     * <code>optional bool mute = 6;</code>
     */
    @java.lang.Override
    public boolean hasMute() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * True if the user is muted by admin.
     * </pre>
     *
     * <code>optional bool mute = 6;</code>
     */
    @java.lang.Override
    public boolean getMute() {
      return mute_;
    }
    /**
     * <pre>
     * True if the user is muted by admin.
     * </pre>
     *
     * <code>optional bool mute = 6;</code>
     */
    private void setMute(boolean value) {
      bitField0_ |= 0x00000020;
      mute_ = value;
    }
    /**
     * <pre>
     * True if the user is muted by admin.
     * </pre>
     *
     * <code>optional bool mute = 6;</code>
     */
    private void clearMute() {
      bitField0_ = (bitField0_ & ~0x00000020);
      mute_ = false;
    }

    public static final int DEAF_FIELD_NUMBER = 7;
    private boolean deaf_;
    /**
     * <pre>
     * True if the user is deafened by admin.
     * </pre>
     *
     * <code>optional bool deaf = 7;</code>
     */
    @java.lang.Override
    public boolean hasDeaf() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * True if the user is deafened by admin.
     * </pre>
     *
     * <code>optional bool deaf = 7;</code>
     */
    @java.lang.Override
    public boolean getDeaf() {
      return deaf_;
    }
    /**
     * <pre>
     * True if the user is deafened by admin.
     * </pre>
     *
     * <code>optional bool deaf = 7;</code>
     */
    private void setDeaf(boolean value) {
      bitField0_ |= 0x00000040;
      deaf_ = value;
    }
    /**
     * <pre>
     * True if the user is deafened by admin.
     * </pre>
     *
     * <code>optional bool deaf = 7;</code>
     */
    private void clearDeaf() {
      bitField0_ = (bitField0_ & ~0x00000040);
      deaf_ = false;
    }

    public static final int SUPPRESS_FIELD_NUMBER = 8;
    private boolean suppress_;
    /**
     * <pre>
     * True if the user has been suppressed from talking by a reason other than
     * being muted.
     * </pre>
     *
     * <code>optional bool suppress = 8;</code>
     */
    @java.lang.Override
    public boolean hasSuppress() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * True if the user has been suppressed from talking by a reason other than
     * being muted.
     * </pre>
     *
     * <code>optional bool suppress = 8;</code>
     */
    @java.lang.Override
    public boolean getSuppress() {
      return suppress_;
    }
    /**
     * <pre>
     * True if the user has been suppressed from talking by a reason other than
     * being muted.
     * </pre>
     *
     * <code>optional bool suppress = 8;</code>
     */
    private void setSuppress(boolean value) {
      bitField0_ |= 0x00000080;
      suppress_ = value;
    }
    /**
     * <pre>
     * True if the user has been suppressed from talking by a reason other than
     * being muted.
     * </pre>
     *
     * <code>optional bool suppress = 8;</code>
     */
    private void clearSuppress() {
      bitField0_ = (bitField0_ & ~0x00000080);
      suppress_ = false;
    }

    public static final int SELF_MUTE_FIELD_NUMBER = 9;
    private boolean selfMute_;
    /**
     * <pre>
     * True if the user has muted self.
     * </pre>
     *
     * <code>optional bool self_mute = 9;</code>
     */
    @java.lang.Override
    public boolean hasSelfMute() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * True if the user has muted self.
     * </pre>
     *
     * <code>optional bool self_mute = 9;</code>
     */
    @java.lang.Override
    public boolean getSelfMute() {
      return selfMute_;
    }
    /**
     * <pre>
     * True if the user has muted self.
     * </pre>
     *
     * <code>optional bool self_mute = 9;</code>
     */
    private void setSelfMute(boolean value) {
      bitField0_ |= 0x00000100;
      selfMute_ = value;
    }
    /**
     * <pre>
     * True if the user has muted self.
     * </pre>
     *
     * <code>optional bool self_mute = 9;</code>
     */
    private void clearSelfMute() {
      bitField0_ = (bitField0_ & ~0x00000100);
      selfMute_ = false;
    }

    public static final int SELF_DEAF_FIELD_NUMBER = 10;
    private boolean selfDeaf_;
    /**
     * <pre>
     * True if the user has deafened self.
     * </pre>
     *
     * <code>optional bool self_deaf = 10;</code>
     */
    @java.lang.Override
    public boolean hasSelfDeaf() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * True if the user has deafened self.
     * </pre>
     *
     * <code>optional bool self_deaf = 10;</code>
     */
    @java.lang.Override
    public boolean getSelfDeaf() {
      return selfDeaf_;
    }
    /**
     * <pre>
     * True if the user has deafened self.
     * </pre>
     *
     * <code>optional bool self_deaf = 10;</code>
     */
    private void setSelfDeaf(boolean value) {
      bitField0_ |= 0x00000200;
      selfDeaf_ = value;
    }
    /**
     * <pre>
     * True if the user has deafened self.
     * </pre>
     *
     * <code>optional bool self_deaf = 10;</code>
     */
    private void clearSelfDeaf() {
      bitField0_ = (bitField0_ & ~0x00000200);
      selfDeaf_ = false;
    }

    public static final int TEXTURE_FIELD_NUMBER = 11;
    private com.google.protobuf.ByteString texture_;
    /**
     * <pre>
     * User image if it is less than 128 bytes.
     * </pre>
     *
     * <code>optional bytes texture = 11;</code>
     */
    @java.lang.Override
    public boolean hasTexture() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * User image if it is less than 128 bytes.
     * </pre>
     *
     * <code>optional bytes texture = 11;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTexture() {
      return texture_;
    }
    /**
     * <pre>
     * User image if it is less than 128 bytes.
     * </pre>
     *
     * <code>optional bytes texture = 11;</code>
     */
    private void setTexture(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
      texture_ = value;
    }
    /**
     * <pre>
     * User image if it is less than 128 bytes.
     * </pre>
     *
     * <code>optional bytes texture = 11;</code>
     */
    private void clearTexture() {
      bitField0_ = (bitField0_ & ~0x00000400);
      texture_ = getDefaultInstance().getTexture();
    }

    public static final int PLUGIN_CONTEXT_FIELD_NUMBER = 12;
    private com.google.protobuf.ByteString pluginContext_;
    /**
     * <pre>
     * The positional audio plugin identifier.
     * Positional audio information is only sent to users who share
     * identical plugin contexts.
     * This value is not trasmitted to clients.
     * </pre>
     *
     * <code>optional bytes plugin_context = 12;</code>
     */
    @java.lang.Override
    public boolean hasPluginContext() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * The positional audio plugin identifier.
     * Positional audio information is only sent to users who share
     * identical plugin contexts.
     * This value is not trasmitted to clients.
     * </pre>
     *
     * <code>optional bytes plugin_context = 12;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPluginContext() {
      return pluginContext_;
    }
    /**
     * <pre>
     * The positional audio plugin identifier.
     * Positional audio information is only sent to users who share
     * identical plugin contexts.
     * This value is not trasmitted to clients.
     * </pre>
     *
     * <code>optional bytes plugin_context = 12;</code>
     */
    private void setPluginContext(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
      pluginContext_ = value;
    }
    /**
     * <pre>
     * The positional audio plugin identifier.
     * Positional audio information is only sent to users who share
     * identical plugin contexts.
     * This value is not trasmitted to clients.
     * </pre>
     *
     * <code>optional bytes plugin_context = 12;</code>
     */
    private void clearPluginContext() {
      bitField0_ = (bitField0_ & ~0x00000800);
      pluginContext_ = getDefaultInstance().getPluginContext();
    }

    public static final int PLUGIN_IDENTITY_FIELD_NUMBER = 13;
    private java.lang.String pluginIdentity_;
    /**
     * <pre>
     * The user's plugin-specific identity.
     * This value is not transmitted to clients.
     * </pre>
     *
     * <code>optional string plugin_identity = 13;</code>
     */
    @java.lang.Override
    public boolean hasPluginIdentity() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * The user's plugin-specific identity.
     * This value is not transmitted to clients.
     * </pre>
     *
     * <code>optional string plugin_identity = 13;</code>
     */
    @java.lang.Override
    public java.lang.String getPluginIdentity() {
      return pluginIdentity_;
    }
    /**
     * <pre>
     * The user's plugin-specific identity.
     * This value is not transmitted to clients.
     * </pre>
     *
     * <code>optional string plugin_identity = 13;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPluginIdentityBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(pluginIdentity_);
    }
    /**
     * <pre>
     * The user's plugin-specific identity.
     * This value is not transmitted to clients.
     * </pre>
     *
     * <code>optional string plugin_identity = 13;</code>
     */
    private void setPluginIdentity(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
      pluginIdentity_ = value;
    }
    /**
     * <pre>
     * The user's plugin-specific identity.
     * This value is not transmitted to clients.
     * </pre>
     *
     * <code>optional string plugin_identity = 13;</code>
     */
    private void clearPluginIdentity() {
      bitField0_ = (bitField0_ & ~0x00001000);
      pluginIdentity_ = getDefaultInstance().getPluginIdentity();
    }
    /**
     * <pre>
     * The user's plugin-specific identity.
     * This value is not transmitted to clients.
     * </pre>
     *
     * <code>optional string plugin_identity = 13;</code>
     */
    private void setPluginIdentityBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
      pluginIdentity_ = value.toStringUtf8();
    }

    public static final int COMMENT_FIELD_NUMBER = 14;
    private java.lang.String comment_;
    /**
     * <pre>
     * User comment if it is less than 128 bytes.
     * </pre>
     *
     * <code>optional string comment = 14;</code>
     */
    @java.lang.Override
    public boolean hasComment() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     * User comment if it is less than 128 bytes.
     * </pre>
     *
     * <code>optional string comment = 14;</code>
     */
    @java.lang.Override
    public java.lang.String getComment() {
      return comment_;
    }
    /**
     * <pre>
     * User comment if it is less than 128 bytes.
     * </pre>
     *
     * <code>optional string comment = 14;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCommentBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(comment_);
    }
    /**
     * <pre>
     * User comment if it is less than 128 bytes.
     * </pre>
     *
     * <code>optional string comment = 14;</code>
     */
    private void setComment(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
      comment_ = value;
    }
    /**
     * <pre>
     * User comment if it is less than 128 bytes.
     * </pre>
     *
     * <code>optional string comment = 14;</code>
     */
    private void clearComment() {
      bitField0_ = (bitField0_ & ~0x00002000);
      comment_ = getDefaultInstance().getComment();
    }
    /**
     * <pre>
     * User comment if it is less than 128 bytes.
     * </pre>
     *
     * <code>optional string comment = 14;</code>
     */
    private void setCommentBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
      comment_ = value.toStringUtf8();
    }

    public static final int HASH_FIELD_NUMBER = 15;
    private java.lang.String hash_;
    /**
     * <pre>
     * The hash of the user certificate.
     * </pre>
     *
     * <code>optional string hash = 15;</code>
     */
    @java.lang.Override
    public boolean hasHash() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <pre>
     * The hash of the user certificate.
     * </pre>
     *
     * <code>optional string hash = 15;</code>
     */
    @java.lang.Override
    public java.lang.String getHash() {
      return hash_;
    }
    /**
     * <pre>
     * The hash of the user certificate.
     * </pre>
     *
     * <code>optional string hash = 15;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getHashBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(hash_);
    }
    /**
     * <pre>
     * The hash of the user certificate.
     * </pre>
     *
     * <code>optional string hash = 15;</code>
     */
    private void setHash(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
      hash_ = value;
    }
    /**
     * <pre>
     * The hash of the user certificate.
     * </pre>
     *
     * <code>optional string hash = 15;</code>
     */
    private void clearHash() {
      bitField0_ = (bitField0_ & ~0x00004000);
      hash_ = getDefaultInstance().getHash();
    }
    /**
     * <pre>
     * The hash of the user certificate.
     * </pre>
     *
     * <code>optional string hash = 15;</code>
     */
    private void setHashBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
      hash_ = value.toStringUtf8();
    }

    public static final int COMMENT_HASH_FIELD_NUMBER = 16;
    private com.google.protobuf.ByteString commentHash_;
    /**
     * <pre>
     * SHA1 hash of the user comment if it 128 bytes or more.
     * </pre>
     *
     * <code>optional bytes comment_hash = 16;</code>
     */
    @java.lang.Override
    public boolean hasCommentHash() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <pre>
     * SHA1 hash of the user comment if it 128 bytes or more.
     * </pre>
     *
     * <code>optional bytes comment_hash = 16;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCommentHash() {
      return commentHash_;
    }
    /**
     * <pre>
     * SHA1 hash of the user comment if it 128 bytes or more.
     * </pre>
     *
     * <code>optional bytes comment_hash = 16;</code>
     */
    private void setCommentHash(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
      commentHash_ = value;
    }
    /**
     * <pre>
     * SHA1 hash of the user comment if it 128 bytes or more.
     * </pre>
     *
     * <code>optional bytes comment_hash = 16;</code>
     */
    private void clearCommentHash() {
      bitField0_ = (bitField0_ & ~0x00008000);
      commentHash_ = getDefaultInstance().getCommentHash();
    }

    public static final int TEXTURE_HASH_FIELD_NUMBER = 17;
    private com.google.protobuf.ByteString textureHash_;
    /**
     * <pre>
     * SHA1 hash of the user picture if it 128 bytes or more.
     * </pre>
     *
     * <code>optional bytes texture_hash = 17;</code>
     */
    @java.lang.Override
    public boolean hasTextureHash() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <pre>
     * SHA1 hash of the user picture if it 128 bytes or more.
     * </pre>
     *
     * <code>optional bytes texture_hash = 17;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTextureHash() {
      return textureHash_;
    }
    /**
     * <pre>
     * SHA1 hash of the user picture if it 128 bytes or more.
     * </pre>
     *
     * <code>optional bytes texture_hash = 17;</code>
     */
    private void setTextureHash(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
      textureHash_ = value;
    }
    /**
     * <pre>
     * SHA1 hash of the user picture if it 128 bytes or more.
     * </pre>
     *
     * <code>optional bytes texture_hash = 17;</code>
     */
    private void clearTextureHash() {
      bitField0_ = (bitField0_ & ~0x00010000);
      textureHash_ = getDefaultInstance().getTextureHash();
    }

    public static final int PRIORITY_SPEAKER_FIELD_NUMBER = 18;
    private boolean prioritySpeaker_;
    /**
     * <pre>
     * True if the user is a priority speaker.
     * </pre>
     *
     * <code>optional bool priority_speaker = 18;</code>
     */
    @java.lang.Override
    public boolean hasPrioritySpeaker() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <pre>
     * True if the user is a priority speaker.
     * </pre>
     *
     * <code>optional bool priority_speaker = 18;</code>
     */
    @java.lang.Override
    public boolean getPrioritySpeaker() {
      return prioritySpeaker_;
    }
    /**
     * <pre>
     * True if the user is a priority speaker.
     * </pre>
     *
     * <code>optional bool priority_speaker = 18;</code>
     */
    private void setPrioritySpeaker(boolean value) {
      bitField0_ |= 0x00020000;
      prioritySpeaker_ = value;
    }
    /**
     * <pre>
     * True if the user is a priority speaker.
     * </pre>
     *
     * <code>optional bool priority_speaker = 18;</code>
     */
    private void clearPrioritySpeaker() {
      bitField0_ = (bitField0_ & ~0x00020000);
      prioritySpeaker_ = false;
    }

    public static final int RECORDING_FIELD_NUMBER = 19;
    private boolean recording_;
    /**
     * <pre>
     * True if the user is currently recording.
     * </pre>
     *
     * <code>optional bool recording = 19;</code>
     */
    @java.lang.Override
    public boolean hasRecording() {
      return ((bitField0_ & 0x00040000) != 0);
    }
    /**
     * <pre>
     * True if the user is currently recording.
     * </pre>
     *
     * <code>optional bool recording = 19;</code>
     */
    @java.lang.Override
    public boolean getRecording() {
      return recording_;
    }
    /**
     * <pre>
     * True if the user is currently recording.
     * </pre>
     *
     * <code>optional bool recording = 19;</code>
     */
    private void setRecording(boolean value) {
      bitField0_ |= 0x00040000;
      recording_ = value;
    }
    /**
     * <pre>
     * True if the user is currently recording.
     * </pre>
     *
     * <code>optional bool recording = 19;</code>
     */
    private void clearRecording() {
      bitField0_ = (bitField0_ & ~0x00040000);
      recording_ = false;
    }

    public static MumbleProto.Mumble.UserState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.UserState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.UserState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.UserState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.UserState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.UserState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.UserState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.UserState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.UserState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.UserState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.UserState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.UserState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.UserState prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Sent by the server when it communicates new and changed users to client.
     * First seen during login procedure. May be sent by the client when it wishes
     * to alter its state.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.UserState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.UserState, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.UserState)
        MumbleProto.Mumble.UserStateOrBuilder {
      // Construct using MumbleProto.Mumble.UserState.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Unique user session ID of the user whose state this is, may change on
       * reconnect.
       * </pre>
       *
       * <code>optional uint32 session = 1;</code>
       */
      @java.lang.Override
      public boolean hasSession() {
        return instance.hasSession();
      }
      /**
       * <pre>
       * Unique user session ID of the user whose state this is, may change on
       * reconnect.
       * </pre>
       *
       * <code>optional uint32 session = 1;</code>
       */
      @java.lang.Override
      public int getSession() {
        return instance.getSession();
      }
      /**
       * <pre>
       * Unique user session ID of the user whose state this is, may change on
       * reconnect.
       * </pre>
       *
       * <code>optional uint32 session = 1;</code>
       */
      public Builder setSession(int value) {
        copyOnWrite();
        instance.setSession(value);
        return this;
      }
      /**
       * <pre>
       * Unique user session ID of the user whose state this is, may change on
       * reconnect.
       * </pre>
       *
       * <code>optional uint32 session = 1;</code>
       */
      public Builder clearSession() {
        copyOnWrite();
        instance.clearSession();
        return this;
      }

      /**
       * <pre>
       * The session of the user who is updating this user.
       * </pre>
       *
       * <code>optional uint32 actor = 2;</code>
       */
      @java.lang.Override
      public boolean hasActor() {
        return instance.hasActor();
      }
      /**
       * <pre>
       * The session of the user who is updating this user.
       * </pre>
       *
       * <code>optional uint32 actor = 2;</code>
       */
      @java.lang.Override
      public int getActor() {
        return instance.getActor();
      }
      /**
       * <pre>
       * The session of the user who is updating this user.
       * </pre>
       *
       * <code>optional uint32 actor = 2;</code>
       */
      public Builder setActor(int value) {
        copyOnWrite();
        instance.setActor(value);
        return this;
      }
      /**
       * <pre>
       * The session of the user who is updating this user.
       * </pre>
       *
       * <code>optional uint32 actor = 2;</code>
       */
      public Builder clearActor() {
        copyOnWrite();
        instance.clearActor();
        return this;
      }

      /**
       * <pre>
       * User name, UTF-8 encoded.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      @java.lang.Override
      public boolean hasName() {
        return instance.hasName();
      }
      /**
       * <pre>
       * User name, UTF-8 encoded.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      @java.lang.Override
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <pre>
       * User name, UTF-8 encoded.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <pre>
       * User name, UTF-8 encoded.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <pre>
       * User name, UTF-8 encoded.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <pre>
       * User name, UTF-8 encoded.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * Registered user ID if the user is registered.
       * </pre>
       *
       * <code>optional uint32 user_id = 4;</code>
       */
      @java.lang.Override
      public boolean hasUserId() {
        return instance.hasUserId();
      }
      /**
       * <pre>
       * Registered user ID if the user is registered.
       * </pre>
       *
       * <code>optional uint32 user_id = 4;</code>
       */
      @java.lang.Override
      public int getUserId() {
        return instance.getUserId();
      }
      /**
       * <pre>
       * Registered user ID if the user is registered.
       * </pre>
       *
       * <code>optional uint32 user_id = 4;</code>
       */
      public Builder setUserId(int value) {
        copyOnWrite();
        instance.setUserId(value);
        return this;
      }
      /**
       * <pre>
       * Registered user ID if the user is registered.
       * </pre>
       *
       * <code>optional uint32 user_id = 4;</code>
       */
      public Builder clearUserId() {
        copyOnWrite();
        instance.clearUserId();
        return this;
      }

      /**
       * <pre>
       * Channel on which the user is.
       * </pre>
       *
       * <code>optional uint32 channel_id = 5;</code>
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return instance.hasChannelId();
      }
      /**
       * <pre>
       * Channel on which the user is.
       * </pre>
       *
       * <code>optional uint32 channel_id = 5;</code>
       */
      @java.lang.Override
      public int getChannelId() {
        return instance.getChannelId();
      }
      /**
       * <pre>
       * Channel on which the user is.
       * </pre>
       *
       * <code>optional uint32 channel_id = 5;</code>
       */
      public Builder setChannelId(int value) {
        copyOnWrite();
        instance.setChannelId(value);
        return this;
      }
      /**
       * <pre>
       * Channel on which the user is.
       * </pre>
       *
       * <code>optional uint32 channel_id = 5;</code>
       */
      public Builder clearChannelId() {
        copyOnWrite();
        instance.clearChannelId();
        return this;
      }

      /**
       * <pre>
       * True if the user is muted by admin.
       * </pre>
       *
       * <code>optional bool mute = 6;</code>
       */
      @java.lang.Override
      public boolean hasMute() {
        return instance.hasMute();
      }
      /**
       * <pre>
       * True if the user is muted by admin.
       * </pre>
       *
       * <code>optional bool mute = 6;</code>
       */
      @java.lang.Override
      public boolean getMute() {
        return instance.getMute();
      }
      /**
       * <pre>
       * True if the user is muted by admin.
       * </pre>
       *
       * <code>optional bool mute = 6;</code>
       */
      public Builder setMute(boolean value) {
        copyOnWrite();
        instance.setMute(value);
        return this;
      }
      /**
       * <pre>
       * True if the user is muted by admin.
       * </pre>
       *
       * <code>optional bool mute = 6;</code>
       */
      public Builder clearMute() {
        copyOnWrite();
        instance.clearMute();
        return this;
      }

      /**
       * <pre>
       * True if the user is deafened by admin.
       * </pre>
       *
       * <code>optional bool deaf = 7;</code>
       */
      @java.lang.Override
      public boolean hasDeaf() {
        return instance.hasDeaf();
      }
      /**
       * <pre>
       * True if the user is deafened by admin.
       * </pre>
       *
       * <code>optional bool deaf = 7;</code>
       */
      @java.lang.Override
      public boolean getDeaf() {
        return instance.getDeaf();
      }
      /**
       * <pre>
       * True if the user is deafened by admin.
       * </pre>
       *
       * <code>optional bool deaf = 7;</code>
       */
      public Builder setDeaf(boolean value) {
        copyOnWrite();
        instance.setDeaf(value);
        return this;
      }
      /**
       * <pre>
       * True if the user is deafened by admin.
       * </pre>
       *
       * <code>optional bool deaf = 7;</code>
       */
      public Builder clearDeaf() {
        copyOnWrite();
        instance.clearDeaf();
        return this;
      }

      /**
       * <pre>
       * True if the user has been suppressed from talking by a reason other than
       * being muted.
       * </pre>
       *
       * <code>optional bool suppress = 8;</code>
       */
      @java.lang.Override
      public boolean hasSuppress() {
        return instance.hasSuppress();
      }
      /**
       * <pre>
       * True if the user has been suppressed from talking by a reason other than
       * being muted.
       * </pre>
       *
       * <code>optional bool suppress = 8;</code>
       */
      @java.lang.Override
      public boolean getSuppress() {
        return instance.getSuppress();
      }
      /**
       * <pre>
       * True if the user has been suppressed from talking by a reason other than
       * being muted.
       * </pre>
       *
       * <code>optional bool suppress = 8;</code>
       */
      public Builder setSuppress(boolean value) {
        copyOnWrite();
        instance.setSuppress(value);
        return this;
      }
      /**
       * <pre>
       * True if the user has been suppressed from talking by a reason other than
       * being muted.
       * </pre>
       *
       * <code>optional bool suppress = 8;</code>
       */
      public Builder clearSuppress() {
        copyOnWrite();
        instance.clearSuppress();
        return this;
      }

      /**
       * <pre>
       * True if the user has muted self.
       * </pre>
       *
       * <code>optional bool self_mute = 9;</code>
       */
      @java.lang.Override
      public boolean hasSelfMute() {
        return instance.hasSelfMute();
      }
      /**
       * <pre>
       * True if the user has muted self.
       * </pre>
       *
       * <code>optional bool self_mute = 9;</code>
       */
      @java.lang.Override
      public boolean getSelfMute() {
        return instance.getSelfMute();
      }
      /**
       * <pre>
       * True if the user has muted self.
       * </pre>
       *
       * <code>optional bool self_mute = 9;</code>
       */
      public Builder setSelfMute(boolean value) {
        copyOnWrite();
        instance.setSelfMute(value);
        return this;
      }
      /**
       * <pre>
       * True if the user has muted self.
       * </pre>
       *
       * <code>optional bool self_mute = 9;</code>
       */
      public Builder clearSelfMute() {
        copyOnWrite();
        instance.clearSelfMute();
        return this;
      }

      /**
       * <pre>
       * True if the user has deafened self.
       * </pre>
       *
       * <code>optional bool self_deaf = 10;</code>
       */
      @java.lang.Override
      public boolean hasSelfDeaf() {
        return instance.hasSelfDeaf();
      }
      /**
       * <pre>
       * True if the user has deafened self.
       * </pre>
       *
       * <code>optional bool self_deaf = 10;</code>
       */
      @java.lang.Override
      public boolean getSelfDeaf() {
        return instance.getSelfDeaf();
      }
      /**
       * <pre>
       * True if the user has deafened self.
       * </pre>
       *
       * <code>optional bool self_deaf = 10;</code>
       */
      public Builder setSelfDeaf(boolean value) {
        copyOnWrite();
        instance.setSelfDeaf(value);
        return this;
      }
      /**
       * <pre>
       * True if the user has deafened self.
       * </pre>
       *
       * <code>optional bool self_deaf = 10;</code>
       */
      public Builder clearSelfDeaf() {
        copyOnWrite();
        instance.clearSelfDeaf();
        return this;
      }

      /**
       * <pre>
       * User image if it is less than 128 bytes.
       * </pre>
       *
       * <code>optional bytes texture = 11;</code>
       */
      @java.lang.Override
      public boolean hasTexture() {
        return instance.hasTexture();
      }
      /**
       * <pre>
       * User image if it is less than 128 bytes.
       * </pre>
       *
       * <code>optional bytes texture = 11;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getTexture() {
        return instance.getTexture();
      }
      /**
       * <pre>
       * User image if it is less than 128 bytes.
       * </pre>
       *
       * <code>optional bytes texture = 11;</code>
       */
      public Builder setTexture(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTexture(value);
        return this;
      }
      /**
       * <pre>
       * User image if it is less than 128 bytes.
       * </pre>
       *
       * <code>optional bytes texture = 11;</code>
       */
      public Builder clearTexture() {
        copyOnWrite();
        instance.clearTexture();
        return this;
      }

      /**
       * <pre>
       * The positional audio plugin identifier.
       * Positional audio information is only sent to users who share
       * identical plugin contexts.
       * This value is not trasmitted to clients.
       * </pre>
       *
       * <code>optional bytes plugin_context = 12;</code>
       */
      @java.lang.Override
      public boolean hasPluginContext() {
        return instance.hasPluginContext();
      }
      /**
       * <pre>
       * The positional audio plugin identifier.
       * Positional audio information is only sent to users who share
       * identical plugin contexts.
       * This value is not trasmitted to clients.
       * </pre>
       *
       * <code>optional bytes plugin_context = 12;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPluginContext() {
        return instance.getPluginContext();
      }
      /**
       * <pre>
       * The positional audio plugin identifier.
       * Positional audio information is only sent to users who share
       * identical plugin contexts.
       * This value is not trasmitted to clients.
       * </pre>
       *
       * <code>optional bytes plugin_context = 12;</code>
       */
      public Builder setPluginContext(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPluginContext(value);
        return this;
      }
      /**
       * <pre>
       * The positional audio plugin identifier.
       * Positional audio information is only sent to users who share
       * identical plugin contexts.
       * This value is not trasmitted to clients.
       * </pre>
       *
       * <code>optional bytes plugin_context = 12;</code>
       */
      public Builder clearPluginContext() {
        copyOnWrite();
        instance.clearPluginContext();
        return this;
      }

      /**
       * <pre>
       * The user's plugin-specific identity.
       * This value is not transmitted to clients.
       * </pre>
       *
       * <code>optional string plugin_identity = 13;</code>
       */
      @java.lang.Override
      public boolean hasPluginIdentity() {
        return instance.hasPluginIdentity();
      }
      /**
       * <pre>
       * The user's plugin-specific identity.
       * This value is not transmitted to clients.
       * </pre>
       *
       * <code>optional string plugin_identity = 13;</code>
       */
      @java.lang.Override
      public java.lang.String getPluginIdentity() {
        return instance.getPluginIdentity();
      }
      /**
       * <pre>
       * The user's plugin-specific identity.
       * This value is not transmitted to clients.
       * </pre>
       *
       * <code>optional string plugin_identity = 13;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getPluginIdentityBytes() {
        return instance.getPluginIdentityBytes();
      }
      /**
       * <pre>
       * The user's plugin-specific identity.
       * This value is not transmitted to clients.
       * </pre>
       *
       * <code>optional string plugin_identity = 13;</code>
       */
      public Builder setPluginIdentity(
          java.lang.String value) {
        copyOnWrite();
        instance.setPluginIdentity(value);
        return this;
      }
      /**
       * <pre>
       * The user's plugin-specific identity.
       * This value is not transmitted to clients.
       * </pre>
       *
       * <code>optional string plugin_identity = 13;</code>
       */
      public Builder clearPluginIdentity() {
        copyOnWrite();
        instance.clearPluginIdentity();
        return this;
      }
      /**
       * <pre>
       * The user's plugin-specific identity.
       * This value is not transmitted to clients.
       * </pre>
       *
       * <code>optional string plugin_identity = 13;</code>
       */
      public Builder setPluginIdentityBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPluginIdentityBytes(value);
        return this;
      }

      /**
       * <pre>
       * User comment if it is less than 128 bytes.
       * </pre>
       *
       * <code>optional string comment = 14;</code>
       */
      @java.lang.Override
      public boolean hasComment() {
        return instance.hasComment();
      }
      /**
       * <pre>
       * User comment if it is less than 128 bytes.
       * </pre>
       *
       * <code>optional string comment = 14;</code>
       */
      @java.lang.Override
      public java.lang.String getComment() {
        return instance.getComment();
      }
      /**
       * <pre>
       * User comment if it is less than 128 bytes.
       * </pre>
       *
       * <code>optional string comment = 14;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getCommentBytes() {
        return instance.getCommentBytes();
      }
      /**
       * <pre>
       * User comment if it is less than 128 bytes.
       * </pre>
       *
       * <code>optional string comment = 14;</code>
       */
      public Builder setComment(
          java.lang.String value) {
        copyOnWrite();
        instance.setComment(value);
        return this;
      }
      /**
       * <pre>
       * User comment if it is less than 128 bytes.
       * </pre>
       *
       * <code>optional string comment = 14;</code>
       */
      public Builder clearComment() {
        copyOnWrite();
        instance.clearComment();
        return this;
      }
      /**
       * <pre>
       * User comment if it is less than 128 bytes.
       * </pre>
       *
       * <code>optional string comment = 14;</code>
       */
      public Builder setCommentBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCommentBytes(value);
        return this;
      }

      /**
       * <pre>
       * The hash of the user certificate.
       * </pre>
       *
       * <code>optional string hash = 15;</code>
       */
      @java.lang.Override
      public boolean hasHash() {
        return instance.hasHash();
      }
      /**
       * <pre>
       * The hash of the user certificate.
       * </pre>
       *
       * <code>optional string hash = 15;</code>
       */
      @java.lang.Override
      public java.lang.String getHash() {
        return instance.getHash();
      }
      /**
       * <pre>
       * The hash of the user certificate.
       * </pre>
       *
       * <code>optional string hash = 15;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getHashBytes() {
        return instance.getHashBytes();
      }
      /**
       * <pre>
       * The hash of the user certificate.
       * </pre>
       *
       * <code>optional string hash = 15;</code>
       */
      public Builder setHash(
          java.lang.String value) {
        copyOnWrite();
        instance.setHash(value);
        return this;
      }
      /**
       * <pre>
       * The hash of the user certificate.
       * </pre>
       *
       * <code>optional string hash = 15;</code>
       */
      public Builder clearHash() {
        copyOnWrite();
        instance.clearHash();
        return this;
      }
      /**
       * <pre>
       * The hash of the user certificate.
       * </pre>
       *
       * <code>optional string hash = 15;</code>
       */
      public Builder setHashBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setHashBytes(value);
        return this;
      }

      /**
       * <pre>
       * SHA1 hash of the user comment if it 128 bytes or more.
       * </pre>
       *
       * <code>optional bytes comment_hash = 16;</code>
       */
      @java.lang.Override
      public boolean hasCommentHash() {
        return instance.hasCommentHash();
      }
      /**
       * <pre>
       * SHA1 hash of the user comment if it 128 bytes or more.
       * </pre>
       *
       * <code>optional bytes comment_hash = 16;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getCommentHash() {
        return instance.getCommentHash();
      }
      /**
       * <pre>
       * SHA1 hash of the user comment if it 128 bytes or more.
       * </pre>
       *
       * <code>optional bytes comment_hash = 16;</code>
       */
      public Builder setCommentHash(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCommentHash(value);
        return this;
      }
      /**
       * <pre>
       * SHA1 hash of the user comment if it 128 bytes or more.
       * </pre>
       *
       * <code>optional bytes comment_hash = 16;</code>
       */
      public Builder clearCommentHash() {
        copyOnWrite();
        instance.clearCommentHash();
        return this;
      }

      /**
       * <pre>
       * SHA1 hash of the user picture if it 128 bytes or more.
       * </pre>
       *
       * <code>optional bytes texture_hash = 17;</code>
       */
      @java.lang.Override
      public boolean hasTextureHash() {
        return instance.hasTextureHash();
      }
      /**
       * <pre>
       * SHA1 hash of the user picture if it 128 bytes or more.
       * </pre>
       *
       * <code>optional bytes texture_hash = 17;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getTextureHash() {
        return instance.getTextureHash();
      }
      /**
       * <pre>
       * SHA1 hash of the user picture if it 128 bytes or more.
       * </pre>
       *
       * <code>optional bytes texture_hash = 17;</code>
       */
      public Builder setTextureHash(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTextureHash(value);
        return this;
      }
      /**
       * <pre>
       * SHA1 hash of the user picture if it 128 bytes or more.
       * </pre>
       *
       * <code>optional bytes texture_hash = 17;</code>
       */
      public Builder clearTextureHash() {
        copyOnWrite();
        instance.clearTextureHash();
        return this;
      }

      /**
       * <pre>
       * True if the user is a priority speaker.
       * </pre>
       *
       * <code>optional bool priority_speaker = 18;</code>
       */
      @java.lang.Override
      public boolean hasPrioritySpeaker() {
        return instance.hasPrioritySpeaker();
      }
      /**
       * <pre>
       * True if the user is a priority speaker.
       * </pre>
       *
       * <code>optional bool priority_speaker = 18;</code>
       */
      @java.lang.Override
      public boolean getPrioritySpeaker() {
        return instance.getPrioritySpeaker();
      }
      /**
       * <pre>
       * True if the user is a priority speaker.
       * </pre>
       *
       * <code>optional bool priority_speaker = 18;</code>
       */
      public Builder setPrioritySpeaker(boolean value) {
        copyOnWrite();
        instance.setPrioritySpeaker(value);
        return this;
      }
      /**
       * <pre>
       * True if the user is a priority speaker.
       * </pre>
       *
       * <code>optional bool priority_speaker = 18;</code>
       */
      public Builder clearPrioritySpeaker() {
        copyOnWrite();
        instance.clearPrioritySpeaker();
        return this;
      }

      /**
       * <pre>
       * True if the user is currently recording.
       * </pre>
       *
       * <code>optional bool recording = 19;</code>
       */
      @java.lang.Override
      public boolean hasRecording() {
        return instance.hasRecording();
      }
      /**
       * <pre>
       * True if the user is currently recording.
       * </pre>
       *
       * <code>optional bool recording = 19;</code>
       */
      @java.lang.Override
      public boolean getRecording() {
        return instance.getRecording();
      }
      /**
       * <pre>
       * True if the user is currently recording.
       * </pre>
       *
       * <code>optional bool recording = 19;</code>
       */
      public Builder setRecording(boolean value) {
        copyOnWrite();
        instance.setRecording(value);
        return this;
      }
      /**
       * <pre>
       * True if the user is currently recording.
       * </pre>
       *
       * <code>optional bool recording = 19;</code>
       */
      public Builder clearRecording() {
        copyOnWrite();
        instance.clearRecording();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.UserState)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.UserState();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "session_",
              "actor_",
              "name_",
              "userId_",
              "channelId_",
              "mute_",
              "deaf_",
              "suppress_",
              "selfMute_",
              "selfDeaf_",
              "texture_",
              "pluginContext_",
              "pluginIdentity_",
              "comment_",
              "hash_",
              "commentHash_",
              "textureHash_",
              "prioritySpeaker_",
              "recording_",
            };
            java.lang.String info =
                "\u0001\u0013\u0000\u0001\u0001\u0013\u0013\u0000\u0000\u0000\u0001\u000b\u0000\u0002" +
                "\u000b\u0001\u0003\b\u0002\u0004\u000b\u0003\u0005\u000b\u0004\u0006\u0007\u0005" +
                "\u0007\u0007\u0006\b\u0007\u0007\t\u0007\b\n\u0007\t\u000b\n\n\f\n\u000b\r\b\f\u000e" +
                "\b\r\u000f\b\u000e\u0010\n\u000f\u0011\n\u0010\u0012\u0007\u0011\u0013\u0007\u0012" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.UserState> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.UserState.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.UserState)
    private static final MumbleProto.Mumble.UserState DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new UserState();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        UserState.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.UserState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<UserState> PARSER;

    public static com.google.protobuf.Parser<UserState> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BanListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.BanList)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * List of ban entries currently in place.
     * </pre>
     *
     * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
     */
    java.util.List<MumbleProto.Mumble.BanList.BanEntry> 
        getBansList();
    /**
     * <pre>
     * List of ban entries currently in place.
     * </pre>
     *
     * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
     */
    MumbleProto.Mumble.BanList.BanEntry getBans(int index);
    /**
     * <pre>
     * List of ban entries currently in place.
     * </pre>
     *
     * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
     */
    int getBansCount();

    /**
     * <pre>
     * True if the server should return the list, false if it should replace old
     * ban list with the one provided.
     * </pre>
     *
     * <code>optional bool query = 2 [default = false];</code>
     */
    boolean hasQuery();
    /**
     * <pre>
     * True if the server should return the list, false if it should replace old
     * ban list with the one provided.
     * </pre>
     *
     * <code>optional bool query = 2 [default = false];</code>
     */
    boolean getQuery();
  }
  /**
   * <pre>
   * Relays information on the bans. The client may send the BanList message to
   * either modify the list of bans or query them from the server. The server
   * sends this list only after a client queries for it.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.BanList}
   */
  public  static final class BanList extends
      com.google.protobuf.GeneratedMessageLite<
          BanList, BanList.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.BanList)
      BanListOrBuilder {
    private BanList() {
      bans_ = emptyProtobufList();
    }
    public interface BanEntryOrBuilder extends
        // @@protoc_insertion_point(interface_extends:MumbleProto.BanList.BanEntry)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * Banned IP address.
       * </pre>
       *
       * <code>required bytes address = 1;</code>
       */
      boolean hasAddress();
      /**
       * <pre>
       * Banned IP address.
       * </pre>
       *
       * <code>required bytes address = 1;</code>
       */
      com.google.protobuf.ByteString getAddress();

      /**
       * <pre>
       * The length of the subnet mask for the ban.
       * </pre>
       *
       * <code>required uint32 mask = 2;</code>
       */
      boolean hasMask();
      /**
       * <pre>
       * The length of the subnet mask for the ban.
       * </pre>
       *
       * <code>required uint32 mask = 2;</code>
       */
      int getMask();

      /**
       * <pre>
       * User name for identification purposes (does not affect the ban).
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      boolean hasName();
      /**
       * <pre>
       * User name for identification purposes (does not affect the ban).
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      java.lang.String getName();
      /**
       * <pre>
       * User name for identification purposes (does not affect the ban).
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       * The certificate hash of the banned user.
       * </pre>
       *
       * <code>optional string hash = 4;</code>
       */
      boolean hasHash();
      /**
       * <pre>
       * The certificate hash of the banned user.
       * </pre>
       *
       * <code>optional string hash = 4;</code>
       */
      java.lang.String getHash();
      /**
       * <pre>
       * The certificate hash of the banned user.
       * </pre>
       *
       * <code>optional string hash = 4;</code>
       */
      com.google.protobuf.ByteString
          getHashBytes();

      /**
       * <pre>
       * Reason for the ban (does not affect the ban).
       * </pre>
       *
       * <code>optional string reason = 5;</code>
       */
      boolean hasReason();
      /**
       * <pre>
       * Reason for the ban (does not affect the ban).
       * </pre>
       *
       * <code>optional string reason = 5;</code>
       */
      java.lang.String getReason();
      /**
       * <pre>
       * Reason for the ban (does not affect the ban).
       * </pre>
       *
       * <code>optional string reason = 5;</code>
       */
      com.google.protobuf.ByteString
          getReasonBytes();

      /**
       * <pre>
       * Ban start time.
       * </pre>
       *
       * <code>optional string start = 6;</code>
       */
      boolean hasStart();
      /**
       * <pre>
       * Ban start time.
       * </pre>
       *
       * <code>optional string start = 6;</code>
       */
      java.lang.String getStart();
      /**
       * <pre>
       * Ban start time.
       * </pre>
       *
       * <code>optional string start = 6;</code>
       */
      com.google.protobuf.ByteString
          getStartBytes();

      /**
       * <pre>
       * Ban duration in seconds.
       * </pre>
       *
       * <code>optional uint32 duration = 7;</code>
       */
      boolean hasDuration();
      /**
       * <pre>
       * Ban duration in seconds.
       * </pre>
       *
       * <code>optional uint32 duration = 7;</code>
       */
      int getDuration();
    }
    /**
     * Protobuf type {@code MumbleProto.BanList.BanEntry}
     */
    public  static final class BanEntry extends
        com.google.protobuf.GeneratedMessageLite<
            BanEntry, BanEntry.Builder> implements
        // @@protoc_insertion_point(message_implements:MumbleProto.BanList.BanEntry)
        BanEntryOrBuilder {
      private BanEntry() {
        address_ = com.google.protobuf.ByteString.EMPTY;
        name_ = "";
        hash_ = "";
        reason_ = "";
        start_ = "";
      }
      private int bitField0_;
      public static final int ADDRESS_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString address_;
      /**
       * <pre>
       * Banned IP address.
       * </pre>
       *
       * <code>required bytes address = 1;</code>
       */
      @java.lang.Override
      public boolean hasAddress() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Banned IP address.
       * </pre>
       *
       * <code>required bytes address = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getAddress() {
        return address_;
      }
      /**
       * <pre>
       * Banned IP address.
       * </pre>
       *
       * <code>required bytes address = 1;</code>
       */
      private void setAddress(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        address_ = value;
      }
      /**
       * <pre>
       * Banned IP address.
       * </pre>
       *
       * <code>required bytes address = 1;</code>
       */
      private void clearAddress() {
        bitField0_ = (bitField0_ & ~0x00000001);
        address_ = getDefaultInstance().getAddress();
      }

      public static final int MASK_FIELD_NUMBER = 2;
      private int mask_;
      /**
       * <pre>
       * The length of the subnet mask for the ban.
       * </pre>
       *
       * <code>required uint32 mask = 2;</code>
       */
      @java.lang.Override
      public boolean hasMask() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The length of the subnet mask for the ban.
       * </pre>
       *
       * <code>required uint32 mask = 2;</code>
       */
      @java.lang.Override
      public int getMask() {
        return mask_;
      }
      /**
       * <pre>
       * The length of the subnet mask for the ban.
       * </pre>
       *
       * <code>required uint32 mask = 2;</code>
       */
      private void setMask(int value) {
        bitField0_ |= 0x00000002;
        mask_ = value;
      }
      /**
       * <pre>
       * The length of the subnet mask for the ban.
       * </pre>
       *
       * <code>required uint32 mask = 2;</code>
       */
      private void clearMask() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mask_ = 0;
      }

      public static final int NAME_FIELD_NUMBER = 3;
      private java.lang.String name_;
      /**
       * <pre>
       * User name for identification purposes (does not affect the ban).
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * User name for identification purposes (does not affect the ban).
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      @java.lang.Override
      public java.lang.String getName() {
        return name_;
      }
      /**
       * <pre>
       * User name for identification purposes (does not affect the ban).
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(name_);
      }
      /**
       * <pre>
       * User name for identification purposes (does not affect the ban).
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      private void setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
      }
      /**
       * <pre>
       * User name for identification purposes (does not affect the ban).
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      private void clearName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = getDefaultInstance().getName();
      }
      /**
       * <pre>
       * User name for identification purposes (does not affect the ban).
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      private void setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value.toStringUtf8();
      }

      public static final int HASH_FIELD_NUMBER = 4;
      private java.lang.String hash_;
      /**
       * <pre>
       * The certificate hash of the banned user.
       * </pre>
       *
       * <code>optional string hash = 4;</code>
       */
      @java.lang.Override
      public boolean hasHash() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The certificate hash of the banned user.
       * </pre>
       *
       * <code>optional string hash = 4;</code>
       */
      @java.lang.Override
      public java.lang.String getHash() {
        return hash_;
      }
      /**
       * <pre>
       * The certificate hash of the banned user.
       * </pre>
       *
       * <code>optional string hash = 4;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getHashBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(hash_);
      }
      /**
       * <pre>
       * The certificate hash of the banned user.
       * </pre>
       *
       * <code>optional string hash = 4;</code>
       */
      private void setHash(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        hash_ = value;
      }
      /**
       * <pre>
       * The certificate hash of the banned user.
       * </pre>
       *
       * <code>optional string hash = 4;</code>
       */
      private void clearHash() {
        bitField0_ = (bitField0_ & ~0x00000008);
        hash_ = getDefaultInstance().getHash();
      }
      /**
       * <pre>
       * The certificate hash of the banned user.
       * </pre>
       *
       * <code>optional string hash = 4;</code>
       */
      private void setHashBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        hash_ = value.toStringUtf8();
      }

      public static final int REASON_FIELD_NUMBER = 5;
      private java.lang.String reason_;
      /**
       * <pre>
       * Reason for the ban (does not affect the ban).
       * </pre>
       *
       * <code>optional string reason = 5;</code>
       */
      @java.lang.Override
      public boolean hasReason() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Reason for the ban (does not affect the ban).
       * </pre>
       *
       * <code>optional string reason = 5;</code>
       */
      @java.lang.Override
      public java.lang.String getReason() {
        return reason_;
      }
      /**
       * <pre>
       * Reason for the ban (does not affect the ban).
       * </pre>
       *
       * <code>optional string reason = 5;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getReasonBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(reason_);
      }
      /**
       * <pre>
       * Reason for the ban (does not affect the ban).
       * </pre>
       *
       * <code>optional string reason = 5;</code>
       */
      private void setReason(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        reason_ = value;
      }
      /**
       * <pre>
       * Reason for the ban (does not affect the ban).
       * </pre>
       *
       * <code>optional string reason = 5;</code>
       */
      private void clearReason() {
        bitField0_ = (bitField0_ & ~0x00000010);
        reason_ = getDefaultInstance().getReason();
      }
      /**
       * <pre>
       * Reason for the ban (does not affect the ban).
       * </pre>
       *
       * <code>optional string reason = 5;</code>
       */
      private void setReasonBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        reason_ = value.toStringUtf8();
      }

      public static final int START_FIELD_NUMBER = 6;
      private java.lang.String start_;
      /**
       * <pre>
       * Ban start time.
       * </pre>
       *
       * <code>optional string start = 6;</code>
       */
      @java.lang.Override
      public boolean hasStart() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Ban start time.
       * </pre>
       *
       * <code>optional string start = 6;</code>
       */
      @java.lang.Override
      public java.lang.String getStart() {
        return start_;
      }
      /**
       * <pre>
       * Ban start time.
       * </pre>
       *
       * <code>optional string start = 6;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getStartBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(start_);
      }
      /**
       * <pre>
       * Ban start time.
       * </pre>
       *
       * <code>optional string start = 6;</code>
       */
      private void setStart(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        start_ = value;
      }
      /**
       * <pre>
       * Ban start time.
       * </pre>
       *
       * <code>optional string start = 6;</code>
       */
      private void clearStart() {
        bitField0_ = (bitField0_ & ~0x00000020);
        start_ = getDefaultInstance().getStart();
      }
      /**
       * <pre>
       * Ban start time.
       * </pre>
       *
       * <code>optional string start = 6;</code>
       */
      private void setStartBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        start_ = value.toStringUtf8();
      }

      public static final int DURATION_FIELD_NUMBER = 7;
      private int duration_;
      /**
       * <pre>
       * Ban duration in seconds.
       * </pre>
       *
       * <code>optional uint32 duration = 7;</code>
       */
      @java.lang.Override
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Ban duration in seconds.
       * </pre>
       *
       * <code>optional uint32 duration = 7;</code>
       */
      @java.lang.Override
      public int getDuration() {
        return duration_;
      }
      /**
       * <pre>
       * Ban duration in seconds.
       * </pre>
       *
       * <code>optional uint32 duration = 7;</code>
       */
      private void setDuration(int value) {
        bitField0_ |= 0x00000040;
        duration_ = value;
      }
      /**
       * <pre>
       * Ban duration in seconds.
       * </pre>
       *
       * <code>optional uint32 duration = 7;</code>
       */
      private void clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000040);
        duration_ = 0;
      }

      public static MumbleProto.Mumble.BanList.BanEntry parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static MumbleProto.Mumble.BanList.BanEntry parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static MumbleProto.Mumble.BanList.BanEntry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static MumbleProto.Mumble.BanList.BanEntry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static MumbleProto.Mumble.BanList.BanEntry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static MumbleProto.Mumble.BanList.BanEntry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static MumbleProto.Mumble.BanList.BanEntry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static MumbleProto.Mumble.BanList.BanEntry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static MumbleProto.Mumble.BanList.BanEntry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static MumbleProto.Mumble.BanList.BanEntry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static MumbleProto.Mumble.BanList.BanEntry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static MumbleProto.Mumble.BanList.BanEntry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(MumbleProto.Mumble.BanList.BanEntry prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * Protobuf type {@code MumbleProto.BanList.BanEntry}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            MumbleProto.Mumble.BanList.BanEntry, Builder> implements
          // @@protoc_insertion_point(builder_implements:MumbleProto.BanList.BanEntry)
          MumbleProto.Mumble.BanList.BanEntryOrBuilder {
        // Construct using MumbleProto.Mumble.BanList.BanEntry.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * Banned IP address.
         * </pre>
         *
         * <code>required bytes address = 1;</code>
         */
        @java.lang.Override
        public boolean hasAddress() {
          return instance.hasAddress();
        }
        /**
         * <pre>
         * Banned IP address.
         * </pre>
         *
         * <code>required bytes address = 1;</code>
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getAddress() {
          return instance.getAddress();
        }
        /**
         * <pre>
         * Banned IP address.
         * </pre>
         *
         * <code>required bytes address = 1;</code>
         */
        public Builder setAddress(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setAddress(value);
          return this;
        }
        /**
         * <pre>
         * Banned IP address.
         * </pre>
         *
         * <code>required bytes address = 1;</code>
         */
        public Builder clearAddress() {
          copyOnWrite();
          instance.clearAddress();
          return this;
        }

        /**
         * <pre>
         * The length of the subnet mask for the ban.
         * </pre>
         *
         * <code>required uint32 mask = 2;</code>
         */
        @java.lang.Override
        public boolean hasMask() {
          return instance.hasMask();
        }
        /**
         * <pre>
         * The length of the subnet mask for the ban.
         * </pre>
         *
         * <code>required uint32 mask = 2;</code>
         */
        @java.lang.Override
        public int getMask() {
          return instance.getMask();
        }
        /**
         * <pre>
         * The length of the subnet mask for the ban.
         * </pre>
         *
         * <code>required uint32 mask = 2;</code>
         */
        public Builder setMask(int value) {
          copyOnWrite();
          instance.setMask(value);
          return this;
        }
        /**
         * <pre>
         * The length of the subnet mask for the ban.
         * </pre>
         *
         * <code>required uint32 mask = 2;</code>
         */
        public Builder clearMask() {
          copyOnWrite();
          instance.clearMask();
          return this;
        }

        /**
         * <pre>
         * User name for identification purposes (does not affect the ban).
         * </pre>
         *
         * <code>optional string name = 3;</code>
         */
        @java.lang.Override
        public boolean hasName() {
          return instance.hasName();
        }
        /**
         * <pre>
         * User name for identification purposes (does not affect the ban).
         * </pre>
         *
         * <code>optional string name = 3;</code>
         */
        @java.lang.Override
        public java.lang.String getName() {
          return instance.getName();
        }
        /**
         * <pre>
         * User name for identification purposes (does not affect the ban).
         * </pre>
         *
         * <code>optional string name = 3;</code>
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getNameBytes() {
          return instance.getNameBytes();
        }
        /**
         * <pre>
         * User name for identification purposes (does not affect the ban).
         * </pre>
         *
         * <code>optional string name = 3;</code>
         */
        public Builder setName(
            java.lang.String value) {
          copyOnWrite();
          instance.setName(value);
          return this;
        }
        /**
         * <pre>
         * User name for identification purposes (does not affect the ban).
         * </pre>
         *
         * <code>optional string name = 3;</code>
         */
        public Builder clearName() {
          copyOnWrite();
          instance.clearName();
          return this;
        }
        /**
         * <pre>
         * User name for identification purposes (does not affect the ban).
         * </pre>
         *
         * <code>optional string name = 3;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setNameBytes(value);
          return this;
        }

        /**
         * <pre>
         * The certificate hash of the banned user.
         * </pre>
         *
         * <code>optional string hash = 4;</code>
         */
        @java.lang.Override
        public boolean hasHash() {
          return instance.hasHash();
        }
        /**
         * <pre>
         * The certificate hash of the banned user.
         * </pre>
         *
         * <code>optional string hash = 4;</code>
         */
        @java.lang.Override
        public java.lang.String getHash() {
          return instance.getHash();
        }
        /**
         * <pre>
         * The certificate hash of the banned user.
         * </pre>
         *
         * <code>optional string hash = 4;</code>
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getHashBytes() {
          return instance.getHashBytes();
        }
        /**
         * <pre>
         * The certificate hash of the banned user.
         * </pre>
         *
         * <code>optional string hash = 4;</code>
         */
        public Builder setHash(
            java.lang.String value) {
          copyOnWrite();
          instance.setHash(value);
          return this;
        }
        /**
         * <pre>
         * The certificate hash of the banned user.
         * </pre>
         *
         * <code>optional string hash = 4;</code>
         */
        public Builder clearHash() {
          copyOnWrite();
          instance.clearHash();
          return this;
        }
        /**
         * <pre>
         * The certificate hash of the banned user.
         * </pre>
         *
         * <code>optional string hash = 4;</code>
         */
        public Builder setHashBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setHashBytes(value);
          return this;
        }

        /**
         * <pre>
         * Reason for the ban (does not affect the ban).
         * </pre>
         *
         * <code>optional string reason = 5;</code>
         */
        @java.lang.Override
        public boolean hasReason() {
          return instance.hasReason();
        }
        /**
         * <pre>
         * Reason for the ban (does not affect the ban).
         * </pre>
         *
         * <code>optional string reason = 5;</code>
         */
        @java.lang.Override
        public java.lang.String getReason() {
          return instance.getReason();
        }
        /**
         * <pre>
         * Reason for the ban (does not affect the ban).
         * </pre>
         *
         * <code>optional string reason = 5;</code>
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getReasonBytes() {
          return instance.getReasonBytes();
        }
        /**
         * <pre>
         * Reason for the ban (does not affect the ban).
         * </pre>
         *
         * <code>optional string reason = 5;</code>
         */
        public Builder setReason(
            java.lang.String value) {
          copyOnWrite();
          instance.setReason(value);
          return this;
        }
        /**
         * <pre>
         * Reason for the ban (does not affect the ban).
         * </pre>
         *
         * <code>optional string reason = 5;</code>
         */
        public Builder clearReason() {
          copyOnWrite();
          instance.clearReason();
          return this;
        }
        /**
         * <pre>
         * Reason for the ban (does not affect the ban).
         * </pre>
         *
         * <code>optional string reason = 5;</code>
         */
        public Builder setReasonBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setReasonBytes(value);
          return this;
        }

        /**
         * <pre>
         * Ban start time.
         * </pre>
         *
         * <code>optional string start = 6;</code>
         */
        @java.lang.Override
        public boolean hasStart() {
          return instance.hasStart();
        }
        /**
         * <pre>
         * Ban start time.
         * </pre>
         *
         * <code>optional string start = 6;</code>
         */
        @java.lang.Override
        public java.lang.String getStart() {
          return instance.getStart();
        }
        /**
         * <pre>
         * Ban start time.
         * </pre>
         *
         * <code>optional string start = 6;</code>
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getStartBytes() {
          return instance.getStartBytes();
        }
        /**
         * <pre>
         * Ban start time.
         * </pre>
         *
         * <code>optional string start = 6;</code>
         */
        public Builder setStart(
            java.lang.String value) {
          copyOnWrite();
          instance.setStart(value);
          return this;
        }
        /**
         * <pre>
         * Ban start time.
         * </pre>
         *
         * <code>optional string start = 6;</code>
         */
        public Builder clearStart() {
          copyOnWrite();
          instance.clearStart();
          return this;
        }
        /**
         * <pre>
         * Ban start time.
         * </pre>
         *
         * <code>optional string start = 6;</code>
         */
        public Builder setStartBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setStartBytes(value);
          return this;
        }

        /**
         * <pre>
         * Ban duration in seconds.
         * </pre>
         *
         * <code>optional uint32 duration = 7;</code>
         */
        @java.lang.Override
        public boolean hasDuration() {
          return instance.hasDuration();
        }
        /**
         * <pre>
         * Ban duration in seconds.
         * </pre>
         *
         * <code>optional uint32 duration = 7;</code>
         */
        @java.lang.Override
        public int getDuration() {
          return instance.getDuration();
        }
        /**
         * <pre>
         * Ban duration in seconds.
         * </pre>
         *
         * <code>optional uint32 duration = 7;</code>
         */
        public Builder setDuration(int value) {
          copyOnWrite();
          instance.setDuration(value);
          return this;
        }
        /**
         * <pre>
         * Ban duration in seconds.
         * </pre>
         *
         * <code>optional uint32 duration = 7;</code>
         */
        public Builder clearDuration() {
          copyOnWrite();
          instance.clearDuration();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:MumbleProto.BanList.BanEntry)
      }
      private byte memoizedIsInitialized = 2;
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new MumbleProto.Mumble.BanList.BanEntry();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "bitField0_",
                "address_",
                "mask_",
                "name_",
                "hash_",
                "reason_",
                "start_",
                "duration_",
              };
              java.lang.String info =
                  "\u0001\u0007\u0000\u0001\u0001\u0007\u0007\u0000\u0000\u0002\u0001\u050a\u0000\u0002" +
                  "\u050b\u0001\u0003\b\u0002\u0004\b\u0003\u0005\b\u0004\u0006\b\u0005\u0007\u000b" +
                  "\u0006";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<MumbleProto.Mumble.BanList.BanEntry> parser = PARSER;
            if (parser == null) {
              synchronized (MumbleProto.Mumble.BanList.BanEntry.class) {
                parser = PARSER;
                if (parser == null) {
                  parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return memoizedIsInitialized;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:MumbleProto.BanList.BanEntry)
      private static final MumbleProto.Mumble.BanList.BanEntry DEFAULT_INSTANCE;
      static {
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = new BanEntry();
      }

      static {
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          BanEntry.class, DEFAULT_INSTANCE);
      }
      public static MumbleProto.Mumble.BanList.BanEntry getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<BanEntry> PARSER;

      public static com.google.protobuf.Parser<BanEntry> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int BANS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<MumbleProto.Mumble.BanList.BanEntry> bans_;
    /**
     * <pre>
     * List of ban entries currently in place.
     * </pre>
     *
     * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
     */
    @java.lang.Override
    public java.util.List<MumbleProto.Mumble.BanList.BanEntry> getBansList() {
      return bans_;
    }
    /**
     * <pre>
     * List of ban entries currently in place.
     * </pre>
     *
     * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
     */
    public java.util.List<? extends MumbleProto.Mumble.BanList.BanEntryOrBuilder> 
        getBansOrBuilderList() {
      return bans_;
    }
    /**
     * <pre>
     * List of ban entries currently in place.
     * </pre>
     *
     * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
     */
    @java.lang.Override
    public int getBansCount() {
      return bans_.size();
    }
    /**
     * <pre>
     * List of ban entries currently in place.
     * </pre>
     *
     * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
     */
    @java.lang.Override
    public MumbleProto.Mumble.BanList.BanEntry getBans(int index) {
      return bans_.get(index);
    }
    /**
     * <pre>
     * List of ban entries currently in place.
     * </pre>
     *
     * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
     */
    public MumbleProto.Mumble.BanList.BanEntryOrBuilder getBansOrBuilder(
        int index) {
      return bans_.get(index);
    }
    private void ensureBansIsMutable() {
      if (!bans_.isModifiable()) {
        bans_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(bans_);
       }
    }

    /**
     * <pre>
     * List of ban entries currently in place.
     * </pre>
     *
     * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
     */
    private void setBans(
        int index, MumbleProto.Mumble.BanList.BanEntry value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureBansIsMutable();
      bans_.set(index, value);
    }
    /**
     * <pre>
     * List of ban entries currently in place.
     * </pre>
     *
     * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
     */
    private void setBans(
        int index, MumbleProto.Mumble.BanList.BanEntry.Builder builderForValue) {
      ensureBansIsMutable();
      bans_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * List of ban entries currently in place.
     * </pre>
     *
     * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
     */
    private void addBans(MumbleProto.Mumble.BanList.BanEntry value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureBansIsMutable();
      bans_.add(value);
    }
    /**
     * <pre>
     * List of ban entries currently in place.
     * </pre>
     *
     * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
     */
    private void addBans(
        int index, MumbleProto.Mumble.BanList.BanEntry value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureBansIsMutable();
      bans_.add(index, value);
    }
    /**
     * <pre>
     * List of ban entries currently in place.
     * </pre>
     *
     * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
     */
    private void addBans(
        MumbleProto.Mumble.BanList.BanEntry.Builder builderForValue) {
      ensureBansIsMutable();
      bans_.add(builderForValue.build());
    }
    /**
     * <pre>
     * List of ban entries currently in place.
     * </pre>
     *
     * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
     */
    private void addBans(
        int index, MumbleProto.Mumble.BanList.BanEntry.Builder builderForValue) {
      ensureBansIsMutable();
      bans_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * List of ban entries currently in place.
     * </pre>
     *
     * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
     */
    private void addAllBans(
        java.lang.Iterable<? extends MumbleProto.Mumble.BanList.BanEntry> values) {
      ensureBansIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, bans_);
    }
    /**
     * <pre>
     * List of ban entries currently in place.
     * </pre>
     *
     * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
     */
    private void clearBans() {
      bans_ = emptyProtobufList();
    }
    /**
     * <pre>
     * List of ban entries currently in place.
     * </pre>
     *
     * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
     */
    private void removeBans(int index) {
      ensureBansIsMutable();
      bans_.remove(index);
    }

    public static final int QUERY_FIELD_NUMBER = 2;
    private boolean query_;
    /**
     * <pre>
     * True if the server should return the list, false if it should replace old
     * ban list with the one provided.
     * </pre>
     *
     * <code>optional bool query = 2 [default = false];</code>
     */
    @java.lang.Override
    public boolean hasQuery() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * True if the server should return the list, false if it should replace old
     * ban list with the one provided.
     * </pre>
     *
     * <code>optional bool query = 2 [default = false];</code>
     */
    @java.lang.Override
    public boolean getQuery() {
      return query_;
    }
    /**
     * <pre>
     * True if the server should return the list, false if it should replace old
     * ban list with the one provided.
     * </pre>
     *
     * <code>optional bool query = 2 [default = false];</code>
     */
    private void setQuery(boolean value) {
      bitField0_ |= 0x00000001;
      query_ = value;
    }
    /**
     * <pre>
     * True if the server should return the list, false if it should replace old
     * ban list with the one provided.
     * </pre>
     *
     * <code>optional bool query = 2 [default = false];</code>
     */
    private void clearQuery() {
      bitField0_ = (bitField0_ & ~0x00000001);
      query_ = false;
    }

    public static MumbleProto.Mumble.BanList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.BanList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.BanList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.BanList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.BanList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.BanList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.BanList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.BanList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.BanList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.BanList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.BanList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.BanList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.BanList prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Relays information on the bans. The client may send the BanList message to
     * either modify the list of bans or query them from the server. The server
     * sends this list only after a client queries for it.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.BanList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.BanList, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.BanList)
        MumbleProto.Mumble.BanListOrBuilder {
      // Construct using MumbleProto.Mumble.BanList.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * List of ban entries currently in place.
       * </pre>
       *
       * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
       */
      @java.lang.Override
      public java.util.List<MumbleProto.Mumble.BanList.BanEntry> getBansList() {
        return java.util.Collections.unmodifiableList(
            instance.getBansList());
      }
      /**
       * <pre>
       * List of ban entries currently in place.
       * </pre>
       *
       * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
       */
      @java.lang.Override
      public int getBansCount() {
        return instance.getBansCount();
      }/**
       * <pre>
       * List of ban entries currently in place.
       * </pre>
       *
       * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
       */
      @java.lang.Override
      public MumbleProto.Mumble.BanList.BanEntry getBans(int index) {
        return instance.getBans(index);
      }
      /**
       * <pre>
       * List of ban entries currently in place.
       * </pre>
       *
       * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
       */
      public Builder setBans(
          int index, MumbleProto.Mumble.BanList.BanEntry value) {
        copyOnWrite();
        instance.setBans(index, value);
        return this;
      }
      /**
       * <pre>
       * List of ban entries currently in place.
       * </pre>
       *
       * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
       */
      public Builder setBans(
          int index, MumbleProto.Mumble.BanList.BanEntry.Builder builderForValue) {
        copyOnWrite();
        instance.setBans(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * List of ban entries currently in place.
       * </pre>
       *
       * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
       */
      public Builder addBans(MumbleProto.Mumble.BanList.BanEntry value) {
        copyOnWrite();
        instance.addBans(value);
        return this;
      }
      /**
       * <pre>
       * List of ban entries currently in place.
       * </pre>
       *
       * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
       */
      public Builder addBans(
          int index, MumbleProto.Mumble.BanList.BanEntry value) {
        copyOnWrite();
        instance.addBans(index, value);
        return this;
      }
      /**
       * <pre>
       * List of ban entries currently in place.
       * </pre>
       *
       * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
       */
      public Builder addBans(
          MumbleProto.Mumble.BanList.BanEntry.Builder builderForValue) {
        copyOnWrite();
        instance.addBans(builderForValue);
        return this;
      }
      /**
       * <pre>
       * List of ban entries currently in place.
       * </pre>
       *
       * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
       */
      public Builder addBans(
          int index, MumbleProto.Mumble.BanList.BanEntry.Builder builderForValue) {
        copyOnWrite();
        instance.addBans(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * List of ban entries currently in place.
       * </pre>
       *
       * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
       */
      public Builder addAllBans(
          java.lang.Iterable<? extends MumbleProto.Mumble.BanList.BanEntry> values) {
        copyOnWrite();
        instance.addAllBans(values);
        return this;
      }
      /**
       * <pre>
       * List of ban entries currently in place.
       * </pre>
       *
       * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
       */
      public Builder clearBans() {
        copyOnWrite();
        instance.clearBans();
        return this;
      }
      /**
       * <pre>
       * List of ban entries currently in place.
       * </pre>
       *
       * <code>repeated .MumbleProto.BanList.BanEntry bans = 1;</code>
       */
      public Builder removeBans(int index) {
        copyOnWrite();
        instance.removeBans(index);
        return this;
      }

      /**
       * <pre>
       * True if the server should return the list, false if it should replace old
       * ban list with the one provided.
       * </pre>
       *
       * <code>optional bool query = 2 [default = false];</code>
       */
      @java.lang.Override
      public boolean hasQuery() {
        return instance.hasQuery();
      }
      /**
       * <pre>
       * True if the server should return the list, false if it should replace old
       * ban list with the one provided.
       * </pre>
       *
       * <code>optional bool query = 2 [default = false];</code>
       */
      @java.lang.Override
      public boolean getQuery() {
        return instance.getQuery();
      }
      /**
       * <pre>
       * True if the server should return the list, false if it should replace old
       * ban list with the one provided.
       * </pre>
       *
       * <code>optional bool query = 2 [default = false];</code>
       */
      public Builder setQuery(boolean value) {
        copyOnWrite();
        instance.setQuery(value);
        return this;
      }
      /**
       * <pre>
       * True if the server should return the list, false if it should replace old
       * ban list with the one provided.
       * </pre>
       *
       * <code>optional bool query = 2 [default = false];</code>
       */
      public Builder clearQuery() {
        copyOnWrite();
        instance.clearQuery();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.BanList)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.BanList();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "bans_",
              MumbleProto.Mumble.BanList.BanEntry.class,
              "query_",
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0001\u0001\u0001\u041b\u0002\u0007" +
                "\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.BanList> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.BanList.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.BanList)
    private static final MumbleProto.Mumble.BanList DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new BanList();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        BanList.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.BanList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BanList> PARSER;

    public static com.google.protobuf.Parser<BanList> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TextMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.TextMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The message sender, identified by its session.
     * </pre>
     *
     * <code>optional uint32 actor = 1;</code>
     */
    boolean hasActor();
    /**
     * <pre>
     * The message sender, identified by its session.
     * </pre>
     *
     * <code>optional uint32 actor = 1;</code>
     */
    int getActor();

    /**
     * <pre>
     * Target users for the message, identified by their session.
     * </pre>
     *
     * <code>repeated uint32 session = 2;</code>
     */
    java.util.List<java.lang.Integer> getSessionList();
    /**
     * <pre>
     * Target users for the message, identified by their session.
     * </pre>
     *
     * <code>repeated uint32 session = 2;</code>
     */
    int getSessionCount();
    /**
     * <pre>
     * Target users for the message, identified by their session.
     * </pre>
     *
     * <code>repeated uint32 session = 2;</code>
     */
    int getSession(int index);

    /**
     * <pre>
     * The channels to which the message is sent, identified by their
     * channel_ids.
     * </pre>
     *
     * <code>repeated uint32 channel_id = 3;</code>
     */
    java.util.List<java.lang.Integer> getChannelIdList();
    /**
     * <pre>
     * The channels to which the message is sent, identified by their
     * channel_ids.
     * </pre>
     *
     * <code>repeated uint32 channel_id = 3;</code>
     */
    int getChannelIdCount();
    /**
     * <pre>
     * The channels to which the message is sent, identified by their
     * channel_ids.
     * </pre>
     *
     * <code>repeated uint32 channel_id = 3;</code>
     */
    int getChannelId(int index);

    /**
     * <pre>
     * The root channels when sending message recursively to several channels,
     * identified by their channel_ids.
     * </pre>
     *
     * <code>repeated uint32 tree_id = 4;</code>
     */
    java.util.List<java.lang.Integer> getTreeIdList();
    /**
     * <pre>
     * The root channels when sending message recursively to several channels,
     * identified by their channel_ids.
     * </pre>
     *
     * <code>repeated uint32 tree_id = 4;</code>
     */
    int getTreeIdCount();
    /**
     * <pre>
     * The root channels when sending message recursively to several channels,
     * identified by their channel_ids.
     * </pre>
     *
     * <code>repeated uint32 tree_id = 4;</code>
     */
    int getTreeId(int index);

    /**
     * <pre>
     * The UTF-8 encoded message. May be HTML if the server allows.
     * </pre>
     *
     * <code>required string message = 5;</code>
     */
    boolean hasMessage();
    /**
     * <pre>
     * The UTF-8 encoded message. May be HTML if the server allows.
     * </pre>
     *
     * <code>required string message = 5;</code>
     */
    java.lang.String getMessage();
    /**
     * <pre>
     * The UTF-8 encoded message. May be HTML if the server allows.
     * </pre>
     *
     * <code>required string message = 5;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * <pre>
   * Used to send and broadcast text messages.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.TextMessage}
   */
  public  static final class TextMessage extends
      com.google.protobuf.GeneratedMessageLite<
          TextMessage, TextMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.TextMessage)
      TextMessageOrBuilder {
    private TextMessage() {
      session_ = emptyIntList();
      channelId_ = emptyIntList();
      treeId_ = emptyIntList();
      message_ = "";
    }
    private int bitField0_;
    public static final int ACTOR_FIELD_NUMBER = 1;
    private int actor_;
    /**
     * <pre>
     * The message sender, identified by its session.
     * </pre>
     *
     * <code>optional uint32 actor = 1;</code>
     */
    @java.lang.Override
    public boolean hasActor() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The message sender, identified by its session.
     * </pre>
     *
     * <code>optional uint32 actor = 1;</code>
     */
    @java.lang.Override
    public int getActor() {
      return actor_;
    }
    /**
     * <pre>
     * The message sender, identified by its session.
     * </pre>
     *
     * <code>optional uint32 actor = 1;</code>
     */
    private void setActor(int value) {
      bitField0_ |= 0x00000001;
      actor_ = value;
    }
    /**
     * <pre>
     * The message sender, identified by its session.
     * </pre>
     *
     * <code>optional uint32 actor = 1;</code>
     */
    private void clearActor() {
      bitField0_ = (bitField0_ & ~0x00000001);
      actor_ = 0;
    }

    public static final int SESSION_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList session_;
    /**
     * <pre>
     * Target users for the message, identified by their session.
     * </pre>
     *
     * <code>repeated uint32 session = 2;</code>
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getSessionList() {
      return session_;
    }
    /**
     * <pre>
     * Target users for the message, identified by their session.
     * </pre>
     *
     * <code>repeated uint32 session = 2;</code>
     */
    @java.lang.Override
    public int getSessionCount() {
      return session_.size();
    }
    /**
     * <pre>
     * Target users for the message, identified by their session.
     * </pre>
     *
     * <code>repeated uint32 session = 2;</code>
     */
    @java.lang.Override
    public int getSession(int index) {
      return session_.getInt(index);
    }
    private void ensureSessionIsMutable() {
      if (!session_.isModifiable()) {
        session_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(session_);
       }
    }
    /**
     * <pre>
     * Target users for the message, identified by their session.
     * </pre>
     *
     * <code>repeated uint32 session = 2;</code>
     */
    private void setSession(
        int index, int value) {
      ensureSessionIsMutable();
      session_.setInt(index, value);
    }
    /**
     * <pre>
     * Target users for the message, identified by their session.
     * </pre>
     *
     * <code>repeated uint32 session = 2;</code>
     */
    private void addSession(int value) {
      ensureSessionIsMutable();
      session_.addInt(value);
    }
    /**
     * <pre>
     * Target users for the message, identified by their session.
     * </pre>
     *
     * <code>repeated uint32 session = 2;</code>
     */
    private void addAllSession(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureSessionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, session_);
    }
    /**
     * <pre>
     * Target users for the message, identified by their session.
     * </pre>
     *
     * <code>repeated uint32 session = 2;</code>
     */
    private void clearSession() {
      session_ = emptyIntList();
    }

    public static final int CHANNEL_ID_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList channelId_;
    /**
     * <pre>
     * The channels to which the message is sent, identified by their
     * channel_ids.
     * </pre>
     *
     * <code>repeated uint32 channel_id = 3;</code>
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getChannelIdList() {
      return channelId_;
    }
    /**
     * <pre>
     * The channels to which the message is sent, identified by their
     * channel_ids.
     * </pre>
     *
     * <code>repeated uint32 channel_id = 3;</code>
     */
    @java.lang.Override
    public int getChannelIdCount() {
      return channelId_.size();
    }
    /**
     * <pre>
     * The channels to which the message is sent, identified by their
     * channel_ids.
     * </pre>
     *
     * <code>repeated uint32 channel_id = 3;</code>
     */
    @java.lang.Override
    public int getChannelId(int index) {
      return channelId_.getInt(index);
    }
    private void ensureChannelIdIsMutable() {
      if (!channelId_.isModifiable()) {
        channelId_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(channelId_);
       }
    }
    /**
     * <pre>
     * The channels to which the message is sent, identified by their
     * channel_ids.
     * </pre>
     *
     * <code>repeated uint32 channel_id = 3;</code>
     */
    private void setChannelId(
        int index, int value) {
      ensureChannelIdIsMutable();
      channelId_.setInt(index, value);
    }
    /**
     * <pre>
     * The channels to which the message is sent, identified by their
     * channel_ids.
     * </pre>
     *
     * <code>repeated uint32 channel_id = 3;</code>
     */
    private void addChannelId(int value) {
      ensureChannelIdIsMutable();
      channelId_.addInt(value);
    }
    /**
     * <pre>
     * The channels to which the message is sent, identified by their
     * channel_ids.
     * </pre>
     *
     * <code>repeated uint32 channel_id = 3;</code>
     */
    private void addAllChannelId(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureChannelIdIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, channelId_);
    }
    /**
     * <pre>
     * The channels to which the message is sent, identified by their
     * channel_ids.
     * </pre>
     *
     * <code>repeated uint32 channel_id = 3;</code>
     */
    private void clearChannelId() {
      channelId_ = emptyIntList();
    }

    public static final int TREE_ID_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList treeId_;
    /**
     * <pre>
     * The root channels when sending message recursively to several channels,
     * identified by their channel_ids.
     * </pre>
     *
     * <code>repeated uint32 tree_id = 4;</code>
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getTreeIdList() {
      return treeId_;
    }
    /**
     * <pre>
     * The root channels when sending message recursively to several channels,
     * identified by their channel_ids.
     * </pre>
     *
     * <code>repeated uint32 tree_id = 4;</code>
     */
    @java.lang.Override
    public int getTreeIdCount() {
      return treeId_.size();
    }
    /**
     * <pre>
     * The root channels when sending message recursively to several channels,
     * identified by their channel_ids.
     * </pre>
     *
     * <code>repeated uint32 tree_id = 4;</code>
     */
    @java.lang.Override
    public int getTreeId(int index) {
      return treeId_.getInt(index);
    }
    private void ensureTreeIdIsMutable() {
      if (!treeId_.isModifiable()) {
        treeId_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(treeId_);
       }
    }
    /**
     * <pre>
     * The root channels when sending message recursively to several channels,
     * identified by their channel_ids.
     * </pre>
     *
     * <code>repeated uint32 tree_id = 4;</code>
     */
    private void setTreeId(
        int index, int value) {
      ensureTreeIdIsMutable();
      treeId_.setInt(index, value);
    }
    /**
     * <pre>
     * The root channels when sending message recursively to several channels,
     * identified by their channel_ids.
     * </pre>
     *
     * <code>repeated uint32 tree_id = 4;</code>
     */
    private void addTreeId(int value) {
      ensureTreeIdIsMutable();
      treeId_.addInt(value);
    }
    /**
     * <pre>
     * The root channels when sending message recursively to several channels,
     * identified by their channel_ids.
     * </pre>
     *
     * <code>repeated uint32 tree_id = 4;</code>
     */
    private void addAllTreeId(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureTreeIdIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, treeId_);
    }
    /**
     * <pre>
     * The root channels when sending message recursively to several channels,
     * identified by their channel_ids.
     * </pre>
     *
     * <code>repeated uint32 tree_id = 4;</code>
     */
    private void clearTreeId() {
      treeId_ = emptyIntList();
    }

    public static final int MESSAGE_FIELD_NUMBER = 5;
    private java.lang.String message_;
    /**
     * <pre>
     * The UTF-8 encoded message. May be HTML if the server allows.
     * </pre>
     *
     * <code>required string message = 5;</code>
     */
    @java.lang.Override
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The UTF-8 encoded message. May be HTML if the server allows.
     * </pre>
     *
     * <code>required string message = 5;</code>
     */
    @java.lang.Override
    public java.lang.String getMessage() {
      return message_;
    }
    /**
     * <pre>
     * The UTF-8 encoded message. May be HTML if the server allows.
     * </pre>
     *
     * <code>required string message = 5;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMessageBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(message_);
    }
    /**
     * <pre>
     * The UTF-8 encoded message. May be HTML if the server allows.
     * </pre>
     *
     * <code>required string message = 5;</code>
     */
    private void setMessage(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      message_ = value;
    }
    /**
     * <pre>
     * The UTF-8 encoded message. May be HTML if the server allows.
     * </pre>
     *
     * <code>required string message = 5;</code>
     */
    private void clearMessage() {
      bitField0_ = (bitField0_ & ~0x00000002);
      message_ = getDefaultInstance().getMessage();
    }
    /**
     * <pre>
     * The UTF-8 encoded message. May be HTML if the server allows.
     * </pre>
     *
     * <code>required string message = 5;</code>
     */
    private void setMessageBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      message_ = value.toStringUtf8();
    }

    public static MumbleProto.Mumble.TextMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.TextMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.TextMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.TextMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.TextMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.TextMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.TextMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.TextMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.TextMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.TextMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.TextMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.TextMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.TextMessage prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Used to send and broadcast text messages.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.TextMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.TextMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.TextMessage)
        MumbleProto.Mumble.TextMessageOrBuilder {
      // Construct using MumbleProto.Mumble.TextMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The message sender, identified by its session.
       * </pre>
       *
       * <code>optional uint32 actor = 1;</code>
       */
      @java.lang.Override
      public boolean hasActor() {
        return instance.hasActor();
      }
      /**
       * <pre>
       * The message sender, identified by its session.
       * </pre>
       *
       * <code>optional uint32 actor = 1;</code>
       */
      @java.lang.Override
      public int getActor() {
        return instance.getActor();
      }
      /**
       * <pre>
       * The message sender, identified by its session.
       * </pre>
       *
       * <code>optional uint32 actor = 1;</code>
       */
      public Builder setActor(int value) {
        copyOnWrite();
        instance.setActor(value);
        return this;
      }
      /**
       * <pre>
       * The message sender, identified by its session.
       * </pre>
       *
       * <code>optional uint32 actor = 1;</code>
       */
      public Builder clearActor() {
        copyOnWrite();
        instance.clearActor();
        return this;
      }

      /**
       * <pre>
       * Target users for the message, identified by their session.
       * </pre>
       *
       * <code>repeated uint32 session = 2;</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getSessionList() {
        return java.util.Collections.unmodifiableList(
            instance.getSessionList());
      }
      /**
       * <pre>
       * Target users for the message, identified by their session.
       * </pre>
       *
       * <code>repeated uint32 session = 2;</code>
       */
      @java.lang.Override
      public int getSessionCount() {
        return instance.getSessionCount();
      }
      /**
       * <pre>
       * Target users for the message, identified by their session.
       * </pre>
       *
       * <code>repeated uint32 session = 2;</code>
       */
      @java.lang.Override
      public int getSession(int index) {
        return instance.getSession(index);
      }
      /**
       * <pre>
       * Target users for the message, identified by their session.
       * </pre>
       *
       * <code>repeated uint32 session = 2;</code>
       */
      public Builder setSession(
          int index, int value) {
        copyOnWrite();
        instance.setSession(index, value);
        return this;
      }
      /**
       * <pre>
       * Target users for the message, identified by their session.
       * </pre>
       *
       * <code>repeated uint32 session = 2;</code>
       */
      public Builder addSession(int value) {
        copyOnWrite();
        instance.addSession(value);
        return this;
      }
      /**
       * <pre>
       * Target users for the message, identified by their session.
       * </pre>
       *
       * <code>repeated uint32 session = 2;</code>
       */
      public Builder addAllSession(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllSession(values);
        return this;
      }
      /**
       * <pre>
       * Target users for the message, identified by their session.
       * </pre>
       *
       * <code>repeated uint32 session = 2;</code>
       */
      public Builder clearSession() {
        copyOnWrite();
        instance.clearSession();
        return this;
      }

      /**
       * <pre>
       * The channels to which the message is sent, identified by their
       * channel_ids.
       * </pre>
       *
       * <code>repeated uint32 channel_id = 3;</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getChannelIdList() {
        return java.util.Collections.unmodifiableList(
            instance.getChannelIdList());
      }
      /**
       * <pre>
       * The channels to which the message is sent, identified by their
       * channel_ids.
       * </pre>
       *
       * <code>repeated uint32 channel_id = 3;</code>
       */
      @java.lang.Override
      public int getChannelIdCount() {
        return instance.getChannelIdCount();
      }
      /**
       * <pre>
       * The channels to which the message is sent, identified by their
       * channel_ids.
       * </pre>
       *
       * <code>repeated uint32 channel_id = 3;</code>
       */
      @java.lang.Override
      public int getChannelId(int index) {
        return instance.getChannelId(index);
      }
      /**
       * <pre>
       * The channels to which the message is sent, identified by their
       * channel_ids.
       * </pre>
       *
       * <code>repeated uint32 channel_id = 3;</code>
       */
      public Builder setChannelId(
          int index, int value) {
        copyOnWrite();
        instance.setChannelId(index, value);
        return this;
      }
      /**
       * <pre>
       * The channels to which the message is sent, identified by their
       * channel_ids.
       * </pre>
       *
       * <code>repeated uint32 channel_id = 3;</code>
       */
      public Builder addChannelId(int value) {
        copyOnWrite();
        instance.addChannelId(value);
        return this;
      }
      /**
       * <pre>
       * The channels to which the message is sent, identified by their
       * channel_ids.
       * </pre>
       *
       * <code>repeated uint32 channel_id = 3;</code>
       */
      public Builder addAllChannelId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllChannelId(values);
        return this;
      }
      /**
       * <pre>
       * The channels to which the message is sent, identified by their
       * channel_ids.
       * </pre>
       *
       * <code>repeated uint32 channel_id = 3;</code>
       */
      public Builder clearChannelId() {
        copyOnWrite();
        instance.clearChannelId();
        return this;
      }

      /**
       * <pre>
       * The root channels when sending message recursively to several channels,
       * identified by their channel_ids.
       * </pre>
       *
       * <code>repeated uint32 tree_id = 4;</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getTreeIdList() {
        return java.util.Collections.unmodifiableList(
            instance.getTreeIdList());
      }
      /**
       * <pre>
       * The root channels when sending message recursively to several channels,
       * identified by their channel_ids.
       * </pre>
       *
       * <code>repeated uint32 tree_id = 4;</code>
       */
      @java.lang.Override
      public int getTreeIdCount() {
        return instance.getTreeIdCount();
      }
      /**
       * <pre>
       * The root channels when sending message recursively to several channels,
       * identified by their channel_ids.
       * </pre>
       *
       * <code>repeated uint32 tree_id = 4;</code>
       */
      @java.lang.Override
      public int getTreeId(int index) {
        return instance.getTreeId(index);
      }
      /**
       * <pre>
       * The root channels when sending message recursively to several channels,
       * identified by their channel_ids.
       * </pre>
       *
       * <code>repeated uint32 tree_id = 4;</code>
       */
      public Builder setTreeId(
          int index, int value) {
        copyOnWrite();
        instance.setTreeId(index, value);
        return this;
      }
      /**
       * <pre>
       * The root channels when sending message recursively to several channels,
       * identified by their channel_ids.
       * </pre>
       *
       * <code>repeated uint32 tree_id = 4;</code>
       */
      public Builder addTreeId(int value) {
        copyOnWrite();
        instance.addTreeId(value);
        return this;
      }
      /**
       * <pre>
       * The root channels when sending message recursively to several channels,
       * identified by their channel_ids.
       * </pre>
       *
       * <code>repeated uint32 tree_id = 4;</code>
       */
      public Builder addAllTreeId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllTreeId(values);
        return this;
      }
      /**
       * <pre>
       * The root channels when sending message recursively to several channels,
       * identified by their channel_ids.
       * </pre>
       *
       * <code>repeated uint32 tree_id = 4;</code>
       */
      public Builder clearTreeId() {
        copyOnWrite();
        instance.clearTreeId();
        return this;
      }

      /**
       * <pre>
       * The UTF-8 encoded message. May be HTML if the server allows.
       * </pre>
       *
       * <code>required string message = 5;</code>
       */
      @java.lang.Override
      public boolean hasMessage() {
        return instance.hasMessage();
      }
      /**
       * <pre>
       * The UTF-8 encoded message. May be HTML if the server allows.
       * </pre>
       *
       * <code>required string message = 5;</code>
       */
      @java.lang.Override
      public java.lang.String getMessage() {
        return instance.getMessage();
      }
      /**
       * <pre>
       * The UTF-8 encoded message. May be HTML if the server allows.
       * </pre>
       *
       * <code>required string message = 5;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getMessageBytes() {
        return instance.getMessageBytes();
      }
      /**
       * <pre>
       * The UTF-8 encoded message. May be HTML if the server allows.
       * </pre>
       *
       * <code>required string message = 5;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        copyOnWrite();
        instance.setMessage(value);
        return this;
      }
      /**
       * <pre>
       * The UTF-8 encoded message. May be HTML if the server allows.
       * </pre>
       *
       * <code>required string message = 5;</code>
       */
      public Builder clearMessage() {
        copyOnWrite();
        instance.clearMessage();
        return this;
      }
      /**
       * <pre>
       * The UTF-8 encoded message. May be HTML if the server allows.
       * </pre>
       *
       * <code>required string message = 5;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMessageBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.TextMessage)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.TextMessage();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "actor_",
              "session_",
              "channelId_",
              "treeId_",
              "message_",
            };
            java.lang.String info =
                "\u0001\u0005\u0000\u0001\u0001\u0005\u0005\u0000\u0003\u0001\u0001\u000b\u0000\u0002" +
                "\u001d\u0003\u001d\u0004\u001d\u0005\u0508\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.TextMessage> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.TextMessage.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.TextMessage)
    private static final MumbleProto.Mumble.TextMessage DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new TextMessage();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TextMessage.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.TextMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TextMessage> PARSER;

    public static com.google.protobuf.Parser<TextMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PermissionDeniedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.PermissionDenied)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The denied permission when type is Permission.
     * </pre>
     *
     * <code>optional uint32 permission = 1;</code>
     */
    boolean hasPermission();
    /**
     * <pre>
     * The denied permission when type is Permission.
     * </pre>
     *
     * <code>optional uint32 permission = 1;</code>
     */
    int getPermission();

    /**
     * <pre>
     * channel_id for the channel where the permission was denied when type is
     * Permission.
     * </pre>
     *
     * <code>optional uint32 channel_id = 2;</code>
     */
    boolean hasChannelId();
    /**
     * <pre>
     * channel_id for the channel where the permission was denied when type is
     * Permission.
     * </pre>
     *
     * <code>optional uint32 channel_id = 2;</code>
     */
    int getChannelId();

    /**
     * <pre>
     * The user who was denied permissions, identified by session.
     * </pre>
     *
     * <code>optional uint32 session = 3;</code>
     */
    boolean hasSession();
    /**
     * <pre>
     * The user who was denied permissions, identified by session.
     * </pre>
     *
     * <code>optional uint32 session = 3;</code>
     */
    int getSession();

    /**
     * <pre>
     * Textual reason for the denial.
     * </pre>
     *
     * <code>optional string reason = 4;</code>
     */
    boolean hasReason();
    /**
     * <pre>
     * Textual reason for the denial.
     * </pre>
     *
     * <code>optional string reason = 4;</code>
     */
    java.lang.String getReason();
    /**
     * <pre>
     * Textual reason for the denial.
     * </pre>
     *
     * <code>optional string reason = 4;</code>
     */
    com.google.protobuf.ByteString
        getReasonBytes();

    /**
     * <pre>
     * Type of the denial.
     * </pre>
     *
     * <code>optional .MumbleProto.PermissionDenied.DenyType type = 5;</code>
     */
    boolean hasType();
    /**
     * <pre>
     * Type of the denial.
     * </pre>
     *
     * <code>optional .MumbleProto.PermissionDenied.DenyType type = 5;</code>
     */
    MumbleProto.Mumble.PermissionDenied.DenyType getType();

    /**
     * <pre>
     * The name that is invalid when type is UserName.
     * </pre>
     *
     * <code>optional string name = 6;</code>
     */
    boolean hasName();
    /**
     * <pre>
     * The name that is invalid when type is UserName.
     * </pre>
     *
     * <code>optional string name = 6;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name that is invalid when type is UserName.
     * </pre>
     *
     * <code>optional string name = 6;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code MumbleProto.PermissionDenied}
   */
  public  static final class PermissionDenied extends
      com.google.protobuf.GeneratedMessageLite<
          PermissionDenied, PermissionDenied.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.PermissionDenied)
      PermissionDeniedOrBuilder {
    private PermissionDenied() {
      reason_ = "";
      name_ = "";
    }
    /**
     * Protobuf enum {@code MumbleProto.PermissionDenied.DenyType}
     */
    public enum DenyType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * Operation denied for other reason, see reason field.
       * </pre>
       *
       * <code>Text = 0;</code>
       */
      Text(0),
      /**
       * <pre>
       * Permissions were denied.
       * </pre>
       *
       * <code>Permission = 1;</code>
       */
      Permission(1),
      /**
       * <pre>
       * Cannot modify SuperUser.
       * </pre>
       *
       * <code>SuperUser = 2;</code>
       */
      SuperUser(2),
      /**
       * <pre>
       * Invalid channel name.
       * </pre>
       *
       * <code>ChannelName = 3;</code>
       */
      ChannelName(3),
      /**
       * <pre>
       * Text message too long.
       * </pre>
       *
       * <code>TextTooLong = 4;</code>
       */
      TextTooLong(4),
      /**
       * <pre>
       * The flux capacitor was spelled wrong.
       * </pre>
       *
       * <code>H9K = 5;</code>
       */
      H9K(5),
      /**
       * <pre>
       * Operation not permitted in temporary channel.
       * </pre>
       *
       * <code>TemporaryChannel = 6;</code>
       */
      TemporaryChannel(6),
      /**
       * <pre>
       * Operation requires certificate.
       * </pre>
       *
       * <code>MissingCertificate = 7;</code>
       */
      MissingCertificate(7),
      /**
       * <pre>
       * Invalid username.
       * </pre>
       *
       * <code>UserName = 8;</code>
       */
      UserName(8),
      /**
       * <pre>
       * Channel is full.
       * </pre>
       *
       * <code>ChannelFull = 9;</code>
       */
      ChannelFull(9),
      /**
       * <pre>
       * Channels are nested too deply.
       * </pre>
       *
       * <code>NestingLimit = 10;</code>
       */
      NestingLimit(10),
      /**
       * <pre>
       * Maximum channel count reached.
       * </pre>
       *
       * <code>ChannelCountLimit = 11;</code>
       */
      ChannelCountLimit(11),
      ;

      /**
       * <pre>
       * Operation denied for other reason, see reason field.
       * </pre>
       *
       * <code>Text = 0;</code>
       */
      public static final int Text_VALUE = 0;
      /**
       * <pre>
       * Permissions were denied.
       * </pre>
       *
       * <code>Permission = 1;</code>
       */
      public static final int Permission_VALUE = 1;
      /**
       * <pre>
       * Cannot modify SuperUser.
       * </pre>
       *
       * <code>SuperUser = 2;</code>
       */
      public static final int SuperUser_VALUE = 2;
      /**
       * <pre>
       * Invalid channel name.
       * </pre>
       *
       * <code>ChannelName = 3;</code>
       */
      public static final int ChannelName_VALUE = 3;
      /**
       * <pre>
       * Text message too long.
       * </pre>
       *
       * <code>TextTooLong = 4;</code>
       */
      public static final int TextTooLong_VALUE = 4;
      /**
       * <pre>
       * The flux capacitor was spelled wrong.
       * </pre>
       *
       * <code>H9K = 5;</code>
       */
      public static final int H9K_VALUE = 5;
      /**
       * <pre>
       * Operation not permitted in temporary channel.
       * </pre>
       *
       * <code>TemporaryChannel = 6;</code>
       */
      public static final int TemporaryChannel_VALUE = 6;
      /**
       * <pre>
       * Operation requires certificate.
       * </pre>
       *
       * <code>MissingCertificate = 7;</code>
       */
      public static final int MissingCertificate_VALUE = 7;
      /**
       * <pre>
       * Invalid username.
       * </pre>
       *
       * <code>UserName = 8;</code>
       */
      public static final int UserName_VALUE = 8;
      /**
       * <pre>
       * Channel is full.
       * </pre>
       *
       * <code>ChannelFull = 9;</code>
       */
      public static final int ChannelFull_VALUE = 9;
      /**
       * <pre>
       * Channels are nested too deply.
       * </pre>
       *
       * <code>NestingLimit = 10;</code>
       */
      public static final int NestingLimit_VALUE = 10;
      /**
       * <pre>
       * Maximum channel count reached.
       * </pre>
       *
       * <code>ChannelCountLimit = 11;</code>
       */
      public static final int ChannelCountLimit_VALUE = 11;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DenyType valueOf(int value) {
        return forNumber(value);
      }

      public static DenyType forNumber(int value) {
        switch (value) {
          case 0: return Text;
          case 1: return Permission;
          case 2: return SuperUser;
          case 3: return ChannelName;
          case 4: return TextTooLong;
          case 5: return H9K;
          case 6: return TemporaryChannel;
          case 7: return MissingCertificate;
          case 8: return UserName;
          case 9: return ChannelFull;
          case 10: return NestingLimit;
          case 11: return ChannelCountLimit;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DenyType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          DenyType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DenyType>() {
              @java.lang.Override
              public DenyType findValueByNumber(int number) {
                return DenyType.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return DenyTypeVerifier.INSTANCE;
      }

      private static final class DenyTypeVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new DenyTypeVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return DenyType.forNumber(number) != null;
              }
            };

      private final int value;

      private DenyType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:MumbleProto.PermissionDenied.DenyType)
    }

    private int bitField0_;
    public static final int PERMISSION_FIELD_NUMBER = 1;
    private int permission_;
    /**
     * <pre>
     * The denied permission when type is Permission.
     * </pre>
     *
     * <code>optional uint32 permission = 1;</code>
     */
    @java.lang.Override
    public boolean hasPermission() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The denied permission when type is Permission.
     * </pre>
     *
     * <code>optional uint32 permission = 1;</code>
     */
    @java.lang.Override
    public int getPermission() {
      return permission_;
    }
    /**
     * <pre>
     * The denied permission when type is Permission.
     * </pre>
     *
     * <code>optional uint32 permission = 1;</code>
     */
    private void setPermission(int value) {
      bitField0_ |= 0x00000001;
      permission_ = value;
    }
    /**
     * <pre>
     * The denied permission when type is Permission.
     * </pre>
     *
     * <code>optional uint32 permission = 1;</code>
     */
    private void clearPermission() {
      bitField0_ = (bitField0_ & ~0x00000001);
      permission_ = 0;
    }

    public static final int CHANNEL_ID_FIELD_NUMBER = 2;
    private int channelId_;
    /**
     * <pre>
     * channel_id for the channel where the permission was denied when type is
     * Permission.
     * </pre>
     *
     * <code>optional uint32 channel_id = 2;</code>
     */
    @java.lang.Override
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * channel_id for the channel where the permission was denied when type is
     * Permission.
     * </pre>
     *
     * <code>optional uint32 channel_id = 2;</code>
     */
    @java.lang.Override
    public int getChannelId() {
      return channelId_;
    }
    /**
     * <pre>
     * channel_id for the channel where the permission was denied when type is
     * Permission.
     * </pre>
     *
     * <code>optional uint32 channel_id = 2;</code>
     */
    private void setChannelId(int value) {
      bitField0_ |= 0x00000002;
      channelId_ = value;
    }
    /**
     * <pre>
     * channel_id for the channel where the permission was denied when type is
     * Permission.
     * </pre>
     *
     * <code>optional uint32 channel_id = 2;</code>
     */
    private void clearChannelId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      channelId_ = 0;
    }

    public static final int SESSION_FIELD_NUMBER = 3;
    private int session_;
    /**
     * <pre>
     * The user who was denied permissions, identified by session.
     * </pre>
     *
     * <code>optional uint32 session = 3;</code>
     */
    @java.lang.Override
    public boolean hasSession() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The user who was denied permissions, identified by session.
     * </pre>
     *
     * <code>optional uint32 session = 3;</code>
     */
    @java.lang.Override
    public int getSession() {
      return session_;
    }
    /**
     * <pre>
     * The user who was denied permissions, identified by session.
     * </pre>
     *
     * <code>optional uint32 session = 3;</code>
     */
    private void setSession(int value) {
      bitField0_ |= 0x00000004;
      session_ = value;
    }
    /**
     * <pre>
     * The user who was denied permissions, identified by session.
     * </pre>
     *
     * <code>optional uint32 session = 3;</code>
     */
    private void clearSession() {
      bitField0_ = (bitField0_ & ~0x00000004);
      session_ = 0;
    }

    public static final int REASON_FIELD_NUMBER = 4;
    private java.lang.String reason_;
    /**
     * <pre>
     * Textual reason for the denial.
     * </pre>
     *
     * <code>optional string reason = 4;</code>
     */
    @java.lang.Override
    public boolean hasReason() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Textual reason for the denial.
     * </pre>
     *
     * <code>optional string reason = 4;</code>
     */
    @java.lang.Override
    public java.lang.String getReason() {
      return reason_;
    }
    /**
     * <pre>
     * Textual reason for the denial.
     * </pre>
     *
     * <code>optional string reason = 4;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getReasonBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(reason_);
    }
    /**
     * <pre>
     * Textual reason for the denial.
     * </pre>
     *
     * <code>optional string reason = 4;</code>
     */
    private void setReason(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      reason_ = value;
    }
    /**
     * <pre>
     * Textual reason for the denial.
     * </pre>
     *
     * <code>optional string reason = 4;</code>
     */
    private void clearReason() {
      bitField0_ = (bitField0_ & ~0x00000008);
      reason_ = getDefaultInstance().getReason();
    }
    /**
     * <pre>
     * Textual reason for the denial.
     * </pre>
     *
     * <code>optional string reason = 4;</code>
     */
    private void setReasonBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      reason_ = value.toStringUtf8();
    }

    public static final int TYPE_FIELD_NUMBER = 5;
    private int type_;
    /**
     * <pre>
     * Type of the denial.
     * </pre>
     *
     * <code>optional .MumbleProto.PermissionDenied.DenyType type = 5;</code>
     */
    @java.lang.Override
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Type of the denial.
     * </pre>
     *
     * <code>optional .MumbleProto.PermissionDenied.DenyType type = 5;</code>
     */
    @java.lang.Override
    public MumbleProto.Mumble.PermissionDenied.DenyType getType() {
      MumbleProto.Mumble.PermissionDenied.DenyType result = MumbleProto.Mumble.PermissionDenied.DenyType.forNumber(type_);
      return result == null ? MumbleProto.Mumble.PermissionDenied.DenyType.Text : result;
    }
    /**
     * <pre>
     * Type of the denial.
     * </pre>
     *
     * <code>optional .MumbleProto.PermissionDenied.DenyType type = 5;</code>
     */
    private void setType(MumbleProto.Mumble.PermissionDenied.DenyType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000010;
      type_ = value.getNumber();
    }
    /**
     * <pre>
     * Type of the denial.
     * </pre>
     *
     * <code>optional .MumbleProto.PermissionDenied.DenyType type = 5;</code>
     */
    private void clearType() {
      bitField0_ = (bitField0_ & ~0x00000010);
      type_ = 0;
    }

    public static final int NAME_FIELD_NUMBER = 6;
    private java.lang.String name_;
    /**
     * <pre>
     * The name that is invalid when type is UserName.
     * </pre>
     *
     * <code>optional string name = 6;</code>
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The name that is invalid when type is UserName.
     * </pre>
     *
     * <code>optional string name = 6;</code>
     */
    @java.lang.Override
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <pre>
     * The name that is invalid when type is UserName.
     * </pre>
     *
     * <code>optional string name = 6;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <pre>
     * The name that is invalid when type is UserName.
     * </pre>
     *
     * <code>optional string name = 6;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      name_ = value;
    }
    /**
     * <pre>
     * The name that is invalid when type is UserName.
     * </pre>
     *
     * <code>optional string name = 6;</code>
     */
    private void clearName() {
      bitField0_ = (bitField0_ & ~0x00000020);
      name_ = getDefaultInstance().getName();
    }
    /**
     * <pre>
     * The name that is invalid when type is UserName.
     * </pre>
     *
     * <code>optional string name = 6;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      name_ = value.toStringUtf8();
    }

    public static MumbleProto.Mumble.PermissionDenied parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.PermissionDenied parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.PermissionDenied parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.PermissionDenied parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.PermissionDenied parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.PermissionDenied parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.PermissionDenied parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.PermissionDenied parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.PermissionDenied parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.PermissionDenied parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.PermissionDenied parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.PermissionDenied parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.PermissionDenied prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code MumbleProto.PermissionDenied}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.PermissionDenied, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.PermissionDenied)
        MumbleProto.Mumble.PermissionDeniedOrBuilder {
      // Construct using MumbleProto.Mumble.PermissionDenied.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The denied permission when type is Permission.
       * </pre>
       *
       * <code>optional uint32 permission = 1;</code>
       */
      @java.lang.Override
      public boolean hasPermission() {
        return instance.hasPermission();
      }
      /**
       * <pre>
       * The denied permission when type is Permission.
       * </pre>
       *
       * <code>optional uint32 permission = 1;</code>
       */
      @java.lang.Override
      public int getPermission() {
        return instance.getPermission();
      }
      /**
       * <pre>
       * The denied permission when type is Permission.
       * </pre>
       *
       * <code>optional uint32 permission = 1;</code>
       */
      public Builder setPermission(int value) {
        copyOnWrite();
        instance.setPermission(value);
        return this;
      }
      /**
       * <pre>
       * The denied permission when type is Permission.
       * </pre>
       *
       * <code>optional uint32 permission = 1;</code>
       */
      public Builder clearPermission() {
        copyOnWrite();
        instance.clearPermission();
        return this;
      }

      /**
       * <pre>
       * channel_id for the channel where the permission was denied when type is
       * Permission.
       * </pre>
       *
       * <code>optional uint32 channel_id = 2;</code>
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return instance.hasChannelId();
      }
      /**
       * <pre>
       * channel_id for the channel where the permission was denied when type is
       * Permission.
       * </pre>
       *
       * <code>optional uint32 channel_id = 2;</code>
       */
      @java.lang.Override
      public int getChannelId() {
        return instance.getChannelId();
      }
      /**
       * <pre>
       * channel_id for the channel where the permission was denied when type is
       * Permission.
       * </pre>
       *
       * <code>optional uint32 channel_id = 2;</code>
       */
      public Builder setChannelId(int value) {
        copyOnWrite();
        instance.setChannelId(value);
        return this;
      }
      /**
       * <pre>
       * channel_id for the channel where the permission was denied when type is
       * Permission.
       * </pre>
       *
       * <code>optional uint32 channel_id = 2;</code>
       */
      public Builder clearChannelId() {
        copyOnWrite();
        instance.clearChannelId();
        return this;
      }

      /**
       * <pre>
       * The user who was denied permissions, identified by session.
       * </pre>
       *
       * <code>optional uint32 session = 3;</code>
       */
      @java.lang.Override
      public boolean hasSession() {
        return instance.hasSession();
      }
      /**
       * <pre>
       * The user who was denied permissions, identified by session.
       * </pre>
       *
       * <code>optional uint32 session = 3;</code>
       */
      @java.lang.Override
      public int getSession() {
        return instance.getSession();
      }
      /**
       * <pre>
       * The user who was denied permissions, identified by session.
       * </pre>
       *
       * <code>optional uint32 session = 3;</code>
       */
      public Builder setSession(int value) {
        copyOnWrite();
        instance.setSession(value);
        return this;
      }
      /**
       * <pre>
       * The user who was denied permissions, identified by session.
       * </pre>
       *
       * <code>optional uint32 session = 3;</code>
       */
      public Builder clearSession() {
        copyOnWrite();
        instance.clearSession();
        return this;
      }

      /**
       * <pre>
       * Textual reason for the denial.
       * </pre>
       *
       * <code>optional string reason = 4;</code>
       */
      @java.lang.Override
      public boolean hasReason() {
        return instance.hasReason();
      }
      /**
       * <pre>
       * Textual reason for the denial.
       * </pre>
       *
       * <code>optional string reason = 4;</code>
       */
      @java.lang.Override
      public java.lang.String getReason() {
        return instance.getReason();
      }
      /**
       * <pre>
       * Textual reason for the denial.
       * </pre>
       *
       * <code>optional string reason = 4;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getReasonBytes() {
        return instance.getReasonBytes();
      }
      /**
       * <pre>
       * Textual reason for the denial.
       * </pre>
       *
       * <code>optional string reason = 4;</code>
       */
      public Builder setReason(
          java.lang.String value) {
        copyOnWrite();
        instance.setReason(value);
        return this;
      }
      /**
       * <pre>
       * Textual reason for the denial.
       * </pre>
       *
       * <code>optional string reason = 4;</code>
       */
      public Builder clearReason() {
        copyOnWrite();
        instance.clearReason();
        return this;
      }
      /**
       * <pre>
       * Textual reason for the denial.
       * </pre>
       *
       * <code>optional string reason = 4;</code>
       */
      public Builder setReasonBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setReasonBytes(value);
        return this;
      }

      /**
       * <pre>
       * Type of the denial.
       * </pre>
       *
       * <code>optional .MumbleProto.PermissionDenied.DenyType type = 5;</code>
       */
      @java.lang.Override
      public boolean hasType() {
        return instance.hasType();
      }
      /**
       * <pre>
       * Type of the denial.
       * </pre>
       *
       * <code>optional .MumbleProto.PermissionDenied.DenyType type = 5;</code>
       */
      @java.lang.Override
      public MumbleProto.Mumble.PermissionDenied.DenyType getType() {
        return instance.getType();
      }
      /**
       * <pre>
       * Type of the denial.
       * </pre>
       *
       * <code>optional .MumbleProto.PermissionDenied.DenyType type = 5;</code>
       */
      public Builder setType(MumbleProto.Mumble.PermissionDenied.DenyType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <pre>
       * Type of the denial.
       * </pre>
       *
       * <code>optional .MumbleProto.PermissionDenied.DenyType type = 5;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <pre>
       * The name that is invalid when type is UserName.
       * </pre>
       *
       * <code>optional string name = 6;</code>
       */
      @java.lang.Override
      public boolean hasName() {
        return instance.hasName();
      }
      /**
       * <pre>
       * The name that is invalid when type is UserName.
       * </pre>
       *
       * <code>optional string name = 6;</code>
       */
      @java.lang.Override
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <pre>
       * The name that is invalid when type is UserName.
       * </pre>
       *
       * <code>optional string name = 6;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <pre>
       * The name that is invalid when type is UserName.
       * </pre>
       *
       * <code>optional string name = 6;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <pre>
       * The name that is invalid when type is UserName.
       * </pre>
       *
       * <code>optional string name = 6;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <pre>
       * The name that is invalid when type is UserName.
       * </pre>
       *
       * <code>optional string name = 6;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.PermissionDenied)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.PermissionDenied();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "permission_",
              "channelId_",
              "session_",
              "reason_",
              "type_",
              MumbleProto.Mumble.PermissionDenied.DenyType.internalGetVerifier(),
              "name_",
            };
            java.lang.String info =
                "\u0001\u0006\u0000\u0001\u0001\u0006\u0006\u0000\u0000\u0000\u0001\u000b\u0000\u0002" +
                "\u000b\u0001\u0003\u000b\u0002\u0004\b\u0003\u0005\f\u0004\u0006\b\u0005";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.PermissionDenied> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.PermissionDenied.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.PermissionDenied)
    private static final MumbleProto.Mumble.PermissionDenied DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new PermissionDenied();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        PermissionDenied.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.PermissionDenied getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PermissionDenied> PARSER;

    public static com.google.protobuf.Parser<PermissionDenied> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ACLOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.ACL)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Channel ID of the channel this message affects.
     * </pre>
     *
     * <code>required uint32 channel_id = 1;</code>
     */
    boolean hasChannelId();
    /**
     * <pre>
     * Channel ID of the channel this message affects.
     * </pre>
     *
     * <code>required uint32 channel_id = 1;</code>
     */
    int getChannelId();

    /**
     * <pre>
     * True if the channel inherits its parent's ACLs.
     * </pre>
     *
     * <code>optional bool inherit_acls = 2 [default = true];</code>
     */
    boolean hasInheritAcls();
    /**
     * <pre>
     * True if the channel inherits its parent's ACLs.
     * </pre>
     *
     * <code>optional bool inherit_acls = 2 [default = true];</code>
     */
    boolean getInheritAcls();

    /**
     * <pre>
     * User group specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
     */
    java.util.List<MumbleProto.Mumble.ACL.ChanGroup> 
        getGroupsList();
    /**
     * <pre>
     * User group specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
     */
    MumbleProto.Mumble.ACL.ChanGroup getGroups(int index);
    /**
     * <pre>
     * User group specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
     */
    int getGroupsCount();

    /**
     * <pre>
     * ACL specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
     */
    java.util.List<MumbleProto.Mumble.ACL.ChanACL> 
        getAclsList();
    /**
     * <pre>
     * ACL specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
     */
    MumbleProto.Mumble.ACL.ChanACL getAcls(int index);
    /**
     * <pre>
     * ACL specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
     */
    int getAclsCount();

    /**
     * <pre>
     * True if the message is a query for ACLs instead of setting them.
     * </pre>
     *
     * <code>optional bool query = 5 [default = false];</code>
     */
    boolean hasQuery();
    /**
     * <pre>
     * True if the message is a query for ACLs instead of setting them.
     * </pre>
     *
     * <code>optional bool query = 5 [default = false];</code>
     */
    boolean getQuery();
  }
  /**
   * Protobuf type {@code MumbleProto.ACL}
   */
  public  static final class ACL extends
      com.google.protobuf.GeneratedMessageLite<
          ACL, ACL.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.ACL)
      ACLOrBuilder {
    private ACL() {
      inheritAcls_ = true;
      groups_ = emptyProtobufList();
      acls_ = emptyProtobufList();
    }
    public interface ChanGroupOrBuilder extends
        // @@protoc_insertion_point(interface_extends:MumbleProto.ACL.ChanGroup)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * Name of the channel group, UTF-8 encoded.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      boolean hasName();
      /**
       * <pre>
       * Name of the channel group, UTF-8 encoded.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      java.lang.String getName();
      /**
       * <pre>
       * Name of the channel group, UTF-8 encoded.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       * True if the group has been inherited from the parent (Read only).
       * </pre>
       *
       * <code>optional bool inherited = 2 [default = true];</code>
       */
      boolean hasInherited();
      /**
       * <pre>
       * True if the group has been inherited from the parent (Read only).
       * </pre>
       *
       * <code>optional bool inherited = 2 [default = true];</code>
       */
      boolean getInherited();

      /**
       * <pre>
       * True if the group members are inherited.
       * </pre>
       *
       * <code>optional bool inherit = 3 [default = true];</code>
       */
      boolean hasInherit();
      /**
       * <pre>
       * True if the group members are inherited.
       * </pre>
       *
       * <code>optional bool inherit = 3 [default = true];</code>
       */
      boolean getInherit();

      /**
       * <pre>
       * True if the group can be inherited by sub channels.
       * </pre>
       *
       * <code>optional bool inheritable = 4 [default = true];</code>
       */
      boolean hasInheritable();
      /**
       * <pre>
       * True if the group can be inherited by sub channels.
       * </pre>
       *
       * <code>optional bool inheritable = 4 [default = true];</code>
       */
      boolean getInheritable();

      /**
       * <pre>
       * Users explicitly included in this group, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 add = 5;</code>
       */
      java.util.List<java.lang.Integer> getAddList();
      /**
       * <pre>
       * Users explicitly included in this group, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 add = 5;</code>
       */
      int getAddCount();
      /**
       * <pre>
       * Users explicitly included in this group, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 add = 5;</code>
       */
      int getAdd(int index);

      /**
       * <pre>
       * Users explicitly removed from this group in this channel if the group
       * has been inherited, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 remove = 6;</code>
       */
      java.util.List<java.lang.Integer> getRemoveList();
      /**
       * <pre>
       * Users explicitly removed from this group in this channel if the group
       * has been inherited, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 remove = 6;</code>
       */
      int getRemoveCount();
      /**
       * <pre>
       * Users explicitly removed from this group in this channel if the group
       * has been inherited, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 remove = 6;</code>
       */
      int getRemove(int index);

      /**
       * <pre>
       * Users inherited, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 inherited_members = 7;</code>
       */
      java.util.List<java.lang.Integer> getInheritedMembersList();
      /**
       * <pre>
       * Users inherited, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 inherited_members = 7;</code>
       */
      int getInheritedMembersCount();
      /**
       * <pre>
       * Users inherited, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 inherited_members = 7;</code>
       */
      int getInheritedMembers(int index);
    }
    /**
     * Protobuf type {@code MumbleProto.ACL.ChanGroup}
     */
    public  static final class ChanGroup extends
        com.google.protobuf.GeneratedMessageLite<
            ChanGroup, ChanGroup.Builder> implements
        // @@protoc_insertion_point(message_implements:MumbleProto.ACL.ChanGroup)
        ChanGroupOrBuilder {
      private ChanGroup() {
        name_ = "";
        inherited_ = true;
        inherit_ = true;
        inheritable_ = true;
        add_ = emptyIntList();
        remove_ = emptyIntList();
        inheritedMembers_ = emptyIntList();
      }
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.String name_;
      /**
       * <pre>
       * Name of the channel group, UTF-8 encoded.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Name of the channel group, UTF-8 encoded.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      @java.lang.Override
      public java.lang.String getName() {
        return name_;
      }
      /**
       * <pre>
       * Name of the channel group, UTF-8 encoded.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(name_);
      }
      /**
       * <pre>
       * Name of the channel group, UTF-8 encoded.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      private void setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
      }
      /**
       * <pre>
       * Name of the channel group, UTF-8 encoded.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      private void clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
      }
      /**
       * <pre>
       * Name of the channel group, UTF-8 encoded.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      private void setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value.toStringUtf8();
      }

      public static final int INHERITED_FIELD_NUMBER = 2;
      private boolean inherited_;
      /**
       * <pre>
       * True if the group has been inherited from the parent (Read only).
       * </pre>
       *
       * <code>optional bool inherited = 2 [default = true];</code>
       */
      @java.lang.Override
      public boolean hasInherited() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * True if the group has been inherited from the parent (Read only).
       * </pre>
       *
       * <code>optional bool inherited = 2 [default = true];</code>
       */
      @java.lang.Override
      public boolean getInherited() {
        return inherited_;
      }
      /**
       * <pre>
       * True if the group has been inherited from the parent (Read only).
       * </pre>
       *
       * <code>optional bool inherited = 2 [default = true];</code>
       */
      private void setInherited(boolean value) {
        bitField0_ |= 0x00000002;
        inherited_ = value;
      }
      /**
       * <pre>
       * True if the group has been inherited from the parent (Read only).
       * </pre>
       *
       * <code>optional bool inherited = 2 [default = true];</code>
       */
      private void clearInherited() {
        bitField0_ = (bitField0_ & ~0x00000002);
        inherited_ = true;
      }

      public static final int INHERIT_FIELD_NUMBER = 3;
      private boolean inherit_;
      /**
       * <pre>
       * True if the group members are inherited.
       * </pre>
       *
       * <code>optional bool inherit = 3 [default = true];</code>
       */
      @java.lang.Override
      public boolean hasInherit() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * True if the group members are inherited.
       * </pre>
       *
       * <code>optional bool inherit = 3 [default = true];</code>
       */
      @java.lang.Override
      public boolean getInherit() {
        return inherit_;
      }
      /**
       * <pre>
       * True if the group members are inherited.
       * </pre>
       *
       * <code>optional bool inherit = 3 [default = true];</code>
       */
      private void setInherit(boolean value) {
        bitField0_ |= 0x00000004;
        inherit_ = value;
      }
      /**
       * <pre>
       * True if the group members are inherited.
       * </pre>
       *
       * <code>optional bool inherit = 3 [default = true];</code>
       */
      private void clearInherit() {
        bitField0_ = (bitField0_ & ~0x00000004);
        inherit_ = true;
      }

      public static final int INHERITABLE_FIELD_NUMBER = 4;
      private boolean inheritable_;
      /**
       * <pre>
       * True if the group can be inherited by sub channels.
       * </pre>
       *
       * <code>optional bool inheritable = 4 [default = true];</code>
       */
      @java.lang.Override
      public boolean hasInheritable() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * True if the group can be inherited by sub channels.
       * </pre>
       *
       * <code>optional bool inheritable = 4 [default = true];</code>
       */
      @java.lang.Override
      public boolean getInheritable() {
        return inheritable_;
      }
      /**
       * <pre>
       * True if the group can be inherited by sub channels.
       * </pre>
       *
       * <code>optional bool inheritable = 4 [default = true];</code>
       */
      private void setInheritable(boolean value) {
        bitField0_ |= 0x00000008;
        inheritable_ = value;
      }
      /**
       * <pre>
       * True if the group can be inherited by sub channels.
       * </pre>
       *
       * <code>optional bool inheritable = 4 [default = true];</code>
       */
      private void clearInheritable() {
        bitField0_ = (bitField0_ & ~0x00000008);
        inheritable_ = true;
      }

      public static final int ADD_FIELD_NUMBER = 5;
      private com.google.protobuf.Internal.IntList add_;
      /**
       * <pre>
       * Users explicitly included in this group, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 add = 5;</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getAddList() {
        return add_;
      }
      /**
       * <pre>
       * Users explicitly included in this group, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 add = 5;</code>
       */
      @java.lang.Override
      public int getAddCount() {
        return add_.size();
      }
      /**
       * <pre>
       * Users explicitly included in this group, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 add = 5;</code>
       */
      @java.lang.Override
      public int getAdd(int index) {
        return add_.getInt(index);
      }
      private void ensureAddIsMutable() {
        if (!add_.isModifiable()) {
          add_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(add_);
         }
      }
      /**
       * <pre>
       * Users explicitly included in this group, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 add = 5;</code>
       */
      private void setAdd(
          int index, int value) {
        ensureAddIsMutable();
        add_.setInt(index, value);
      }
      /**
       * <pre>
       * Users explicitly included in this group, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 add = 5;</code>
       */
      private void addAdd(int value) {
        ensureAddIsMutable();
        add_.addInt(value);
      }
      /**
       * <pre>
       * Users explicitly included in this group, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 add = 5;</code>
       */
      private void addAllAdd(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAddIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, add_);
      }
      /**
       * <pre>
       * Users explicitly included in this group, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 add = 5;</code>
       */
      private void clearAdd() {
        add_ = emptyIntList();
      }

      public static final int REMOVE_FIELD_NUMBER = 6;
      private com.google.protobuf.Internal.IntList remove_;
      /**
       * <pre>
       * Users explicitly removed from this group in this channel if the group
       * has been inherited, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 remove = 6;</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getRemoveList() {
        return remove_;
      }
      /**
       * <pre>
       * Users explicitly removed from this group in this channel if the group
       * has been inherited, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 remove = 6;</code>
       */
      @java.lang.Override
      public int getRemoveCount() {
        return remove_.size();
      }
      /**
       * <pre>
       * Users explicitly removed from this group in this channel if the group
       * has been inherited, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 remove = 6;</code>
       */
      @java.lang.Override
      public int getRemove(int index) {
        return remove_.getInt(index);
      }
      private void ensureRemoveIsMutable() {
        if (!remove_.isModifiable()) {
          remove_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(remove_);
         }
      }
      /**
       * <pre>
       * Users explicitly removed from this group in this channel if the group
       * has been inherited, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 remove = 6;</code>
       */
      private void setRemove(
          int index, int value) {
        ensureRemoveIsMutable();
        remove_.setInt(index, value);
      }
      /**
       * <pre>
       * Users explicitly removed from this group in this channel if the group
       * has been inherited, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 remove = 6;</code>
       */
      private void addRemove(int value) {
        ensureRemoveIsMutable();
        remove_.addInt(value);
      }
      /**
       * <pre>
       * Users explicitly removed from this group in this channel if the group
       * has been inherited, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 remove = 6;</code>
       */
      private void addAllRemove(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRemoveIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, remove_);
      }
      /**
       * <pre>
       * Users explicitly removed from this group in this channel if the group
       * has been inherited, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 remove = 6;</code>
       */
      private void clearRemove() {
        remove_ = emptyIntList();
      }

      public static final int INHERITED_MEMBERS_FIELD_NUMBER = 7;
      private com.google.protobuf.Internal.IntList inheritedMembers_;
      /**
       * <pre>
       * Users inherited, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 inherited_members = 7;</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getInheritedMembersList() {
        return inheritedMembers_;
      }
      /**
       * <pre>
       * Users inherited, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 inherited_members = 7;</code>
       */
      @java.lang.Override
      public int getInheritedMembersCount() {
        return inheritedMembers_.size();
      }
      /**
       * <pre>
       * Users inherited, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 inherited_members = 7;</code>
       */
      @java.lang.Override
      public int getInheritedMembers(int index) {
        return inheritedMembers_.getInt(index);
      }
      private void ensureInheritedMembersIsMutable() {
        if (!inheritedMembers_.isModifiable()) {
          inheritedMembers_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(inheritedMembers_);
         }
      }
      /**
       * <pre>
       * Users inherited, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 inherited_members = 7;</code>
       */
      private void setInheritedMembers(
          int index, int value) {
        ensureInheritedMembersIsMutable();
        inheritedMembers_.setInt(index, value);
      }
      /**
       * <pre>
       * Users inherited, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 inherited_members = 7;</code>
       */
      private void addInheritedMembers(int value) {
        ensureInheritedMembersIsMutable();
        inheritedMembers_.addInt(value);
      }
      /**
       * <pre>
       * Users inherited, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 inherited_members = 7;</code>
       */
      private void addAllInheritedMembers(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInheritedMembersIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, inheritedMembers_);
      }
      /**
       * <pre>
       * Users inherited, identified by user_id.
       * </pre>
       *
       * <code>repeated uint32 inherited_members = 7;</code>
       */
      private void clearInheritedMembers() {
        inheritedMembers_ = emptyIntList();
      }

      public static MumbleProto.Mumble.ACL.ChanGroup parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static MumbleProto.Mumble.ACL.ChanGroup parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static MumbleProto.Mumble.ACL.ChanGroup parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static MumbleProto.Mumble.ACL.ChanGroup parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static MumbleProto.Mumble.ACL.ChanGroup parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static MumbleProto.Mumble.ACL.ChanGroup parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static MumbleProto.Mumble.ACL.ChanGroup parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static MumbleProto.Mumble.ACL.ChanGroup parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static MumbleProto.Mumble.ACL.ChanGroup parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static MumbleProto.Mumble.ACL.ChanGroup parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static MumbleProto.Mumble.ACL.ChanGroup parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static MumbleProto.Mumble.ACL.ChanGroup parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(MumbleProto.Mumble.ACL.ChanGroup prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * Protobuf type {@code MumbleProto.ACL.ChanGroup}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            MumbleProto.Mumble.ACL.ChanGroup, Builder> implements
          // @@protoc_insertion_point(builder_implements:MumbleProto.ACL.ChanGroup)
          MumbleProto.Mumble.ACL.ChanGroupOrBuilder {
        // Construct using MumbleProto.Mumble.ACL.ChanGroup.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * Name of the channel group, UTF-8 encoded.
         * </pre>
         *
         * <code>required string name = 1;</code>
         */
        @java.lang.Override
        public boolean hasName() {
          return instance.hasName();
        }
        /**
         * <pre>
         * Name of the channel group, UTF-8 encoded.
         * </pre>
         *
         * <code>required string name = 1;</code>
         */
        @java.lang.Override
        public java.lang.String getName() {
          return instance.getName();
        }
        /**
         * <pre>
         * Name of the channel group, UTF-8 encoded.
         * </pre>
         *
         * <code>required string name = 1;</code>
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getNameBytes() {
          return instance.getNameBytes();
        }
        /**
         * <pre>
         * Name of the channel group, UTF-8 encoded.
         * </pre>
         *
         * <code>required string name = 1;</code>
         */
        public Builder setName(
            java.lang.String value) {
          copyOnWrite();
          instance.setName(value);
          return this;
        }
        /**
         * <pre>
         * Name of the channel group, UTF-8 encoded.
         * </pre>
         *
         * <code>required string name = 1;</code>
         */
        public Builder clearName() {
          copyOnWrite();
          instance.clearName();
          return this;
        }
        /**
         * <pre>
         * Name of the channel group, UTF-8 encoded.
         * </pre>
         *
         * <code>required string name = 1;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setNameBytes(value);
          return this;
        }

        /**
         * <pre>
         * True if the group has been inherited from the parent (Read only).
         * </pre>
         *
         * <code>optional bool inherited = 2 [default = true];</code>
         */
        @java.lang.Override
        public boolean hasInherited() {
          return instance.hasInherited();
        }
        /**
         * <pre>
         * True if the group has been inherited from the parent (Read only).
         * </pre>
         *
         * <code>optional bool inherited = 2 [default = true];</code>
         */
        @java.lang.Override
        public boolean getInherited() {
          return instance.getInherited();
        }
        /**
         * <pre>
         * True if the group has been inherited from the parent (Read only).
         * </pre>
         *
         * <code>optional bool inherited = 2 [default = true];</code>
         */
        public Builder setInherited(boolean value) {
          copyOnWrite();
          instance.setInherited(value);
          return this;
        }
        /**
         * <pre>
         * True if the group has been inherited from the parent (Read only).
         * </pre>
         *
         * <code>optional bool inherited = 2 [default = true];</code>
         */
        public Builder clearInherited() {
          copyOnWrite();
          instance.clearInherited();
          return this;
        }

        /**
         * <pre>
         * True if the group members are inherited.
         * </pre>
         *
         * <code>optional bool inherit = 3 [default = true];</code>
         */
        @java.lang.Override
        public boolean hasInherit() {
          return instance.hasInherit();
        }
        /**
         * <pre>
         * True if the group members are inherited.
         * </pre>
         *
         * <code>optional bool inherit = 3 [default = true];</code>
         */
        @java.lang.Override
        public boolean getInherit() {
          return instance.getInherit();
        }
        /**
         * <pre>
         * True if the group members are inherited.
         * </pre>
         *
         * <code>optional bool inherit = 3 [default = true];</code>
         */
        public Builder setInherit(boolean value) {
          copyOnWrite();
          instance.setInherit(value);
          return this;
        }
        /**
         * <pre>
         * True if the group members are inherited.
         * </pre>
         *
         * <code>optional bool inherit = 3 [default = true];</code>
         */
        public Builder clearInherit() {
          copyOnWrite();
          instance.clearInherit();
          return this;
        }

        /**
         * <pre>
         * True if the group can be inherited by sub channels.
         * </pre>
         *
         * <code>optional bool inheritable = 4 [default = true];</code>
         */
        @java.lang.Override
        public boolean hasInheritable() {
          return instance.hasInheritable();
        }
        /**
         * <pre>
         * True if the group can be inherited by sub channels.
         * </pre>
         *
         * <code>optional bool inheritable = 4 [default = true];</code>
         */
        @java.lang.Override
        public boolean getInheritable() {
          return instance.getInheritable();
        }
        /**
         * <pre>
         * True if the group can be inherited by sub channels.
         * </pre>
         *
         * <code>optional bool inheritable = 4 [default = true];</code>
         */
        public Builder setInheritable(boolean value) {
          copyOnWrite();
          instance.setInheritable(value);
          return this;
        }
        /**
         * <pre>
         * True if the group can be inherited by sub channels.
         * </pre>
         *
         * <code>optional bool inheritable = 4 [default = true];</code>
         */
        public Builder clearInheritable() {
          copyOnWrite();
          instance.clearInheritable();
          return this;
        }

        /**
         * <pre>
         * Users explicitly included in this group, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 add = 5;</code>
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
            getAddList() {
          return java.util.Collections.unmodifiableList(
              instance.getAddList());
        }
        /**
         * <pre>
         * Users explicitly included in this group, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 add = 5;</code>
         */
        @java.lang.Override
        public int getAddCount() {
          return instance.getAddCount();
        }
        /**
         * <pre>
         * Users explicitly included in this group, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 add = 5;</code>
         */
        @java.lang.Override
        public int getAdd(int index) {
          return instance.getAdd(index);
        }
        /**
         * <pre>
         * Users explicitly included in this group, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 add = 5;</code>
         */
        public Builder setAdd(
            int index, int value) {
          copyOnWrite();
          instance.setAdd(index, value);
          return this;
        }
        /**
         * <pre>
         * Users explicitly included in this group, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 add = 5;</code>
         */
        public Builder addAdd(int value) {
          copyOnWrite();
          instance.addAdd(value);
          return this;
        }
        /**
         * <pre>
         * Users explicitly included in this group, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 add = 5;</code>
         */
        public Builder addAllAdd(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          copyOnWrite();
          instance.addAllAdd(values);
          return this;
        }
        /**
         * <pre>
         * Users explicitly included in this group, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 add = 5;</code>
         */
        public Builder clearAdd() {
          copyOnWrite();
          instance.clearAdd();
          return this;
        }

        /**
         * <pre>
         * Users explicitly removed from this group in this channel if the group
         * has been inherited, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 remove = 6;</code>
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
            getRemoveList() {
          return java.util.Collections.unmodifiableList(
              instance.getRemoveList());
        }
        /**
         * <pre>
         * Users explicitly removed from this group in this channel if the group
         * has been inherited, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 remove = 6;</code>
         */
        @java.lang.Override
        public int getRemoveCount() {
          return instance.getRemoveCount();
        }
        /**
         * <pre>
         * Users explicitly removed from this group in this channel if the group
         * has been inherited, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 remove = 6;</code>
         */
        @java.lang.Override
        public int getRemove(int index) {
          return instance.getRemove(index);
        }
        /**
         * <pre>
         * Users explicitly removed from this group in this channel if the group
         * has been inherited, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 remove = 6;</code>
         */
        public Builder setRemove(
            int index, int value) {
          copyOnWrite();
          instance.setRemove(index, value);
          return this;
        }
        /**
         * <pre>
         * Users explicitly removed from this group in this channel if the group
         * has been inherited, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 remove = 6;</code>
         */
        public Builder addRemove(int value) {
          copyOnWrite();
          instance.addRemove(value);
          return this;
        }
        /**
         * <pre>
         * Users explicitly removed from this group in this channel if the group
         * has been inherited, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 remove = 6;</code>
         */
        public Builder addAllRemove(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          copyOnWrite();
          instance.addAllRemove(values);
          return this;
        }
        /**
         * <pre>
         * Users explicitly removed from this group in this channel if the group
         * has been inherited, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 remove = 6;</code>
         */
        public Builder clearRemove() {
          copyOnWrite();
          instance.clearRemove();
          return this;
        }

        /**
         * <pre>
         * Users inherited, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 inherited_members = 7;</code>
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
            getInheritedMembersList() {
          return java.util.Collections.unmodifiableList(
              instance.getInheritedMembersList());
        }
        /**
         * <pre>
         * Users inherited, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 inherited_members = 7;</code>
         */
        @java.lang.Override
        public int getInheritedMembersCount() {
          return instance.getInheritedMembersCount();
        }
        /**
         * <pre>
         * Users inherited, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 inherited_members = 7;</code>
         */
        @java.lang.Override
        public int getInheritedMembers(int index) {
          return instance.getInheritedMembers(index);
        }
        /**
         * <pre>
         * Users inherited, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 inherited_members = 7;</code>
         */
        public Builder setInheritedMembers(
            int index, int value) {
          copyOnWrite();
          instance.setInheritedMembers(index, value);
          return this;
        }
        /**
         * <pre>
         * Users inherited, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 inherited_members = 7;</code>
         */
        public Builder addInheritedMembers(int value) {
          copyOnWrite();
          instance.addInheritedMembers(value);
          return this;
        }
        /**
         * <pre>
         * Users inherited, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 inherited_members = 7;</code>
         */
        public Builder addAllInheritedMembers(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          copyOnWrite();
          instance.addAllInheritedMembers(values);
          return this;
        }
        /**
         * <pre>
         * Users inherited, identified by user_id.
         * </pre>
         *
         * <code>repeated uint32 inherited_members = 7;</code>
         */
        public Builder clearInheritedMembers() {
          copyOnWrite();
          instance.clearInheritedMembers();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:MumbleProto.ACL.ChanGroup)
      }
      private byte memoizedIsInitialized = 2;
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new MumbleProto.Mumble.ACL.ChanGroup();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "bitField0_",
                "name_",
                "inherited_",
                "inherit_",
                "inheritable_",
                "add_",
                "remove_",
                "inheritedMembers_",
              };
              java.lang.String info =
                  "\u0001\u0007\u0000\u0001\u0001\u0007\u0007\u0000\u0003\u0001\u0001\u0508\u0000\u0002" +
                  "\u0007\u0001\u0003\u0007\u0002\u0004\u0007\u0003\u0005\u001d\u0006\u001d\u0007\u001d" +
                  "";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<MumbleProto.Mumble.ACL.ChanGroup> parser = PARSER;
            if (parser == null) {
              synchronized (MumbleProto.Mumble.ACL.ChanGroup.class) {
                parser = PARSER;
                if (parser == null) {
                  parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return memoizedIsInitialized;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:MumbleProto.ACL.ChanGroup)
      private static final MumbleProto.Mumble.ACL.ChanGroup DEFAULT_INSTANCE;
      static {
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = new ChanGroup();
      }

      static {
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          ChanGroup.class, DEFAULT_INSTANCE);
      }
      public static MumbleProto.Mumble.ACL.ChanGroup getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<ChanGroup> PARSER;

      public static com.google.protobuf.Parser<ChanGroup> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface ChanACLOrBuilder extends
        // @@protoc_insertion_point(interface_extends:MumbleProto.ACL.ChanACL)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * True if this ACL applies to the current channel.
       * </pre>
       *
       * <code>optional bool apply_here = 1 [default = true];</code>
       */
      boolean hasApplyHere();
      /**
       * <pre>
       * True if this ACL applies to the current channel.
       * </pre>
       *
       * <code>optional bool apply_here = 1 [default = true];</code>
       */
      boolean getApplyHere();

      /**
       * <pre>
       * True if this ACL applies to the sub channels.
       * </pre>
       *
       * <code>optional bool apply_subs = 2 [default = true];</code>
       */
      boolean hasApplySubs();
      /**
       * <pre>
       * True if this ACL applies to the sub channels.
       * </pre>
       *
       * <code>optional bool apply_subs = 2 [default = true];</code>
       */
      boolean getApplySubs();

      /**
       * <pre>
       * True if the ACL has been inherited from the parent.
       * </pre>
       *
       * <code>optional bool inherited = 3 [default = true];</code>
       */
      boolean hasInherited();
      /**
       * <pre>
       * True if the ACL has been inherited from the parent.
       * </pre>
       *
       * <code>optional bool inherited = 3 [default = true];</code>
       */
      boolean getInherited();

      /**
       * <pre>
       * ID of the user that is affected by this ACL.
       * </pre>
       *
       * <code>optional uint32 user_id = 4;</code>
       */
      boolean hasUserId();
      /**
       * <pre>
       * ID of the user that is affected by this ACL.
       * </pre>
       *
       * <code>optional uint32 user_id = 4;</code>
       */
      int getUserId();

      /**
       * <pre>
       * ID of the group that is affected by this ACL.
       * </pre>
       *
       * <code>optional string group = 5;</code>
       */
      boolean hasGroup();
      /**
       * <pre>
       * ID of the group that is affected by this ACL.
       * </pre>
       *
       * <code>optional string group = 5;</code>
       */
      java.lang.String getGroup();
      /**
       * <pre>
       * ID of the group that is affected by this ACL.
       * </pre>
       *
       * <code>optional string group = 5;</code>
       */
      com.google.protobuf.ByteString
          getGroupBytes();

      /**
       * <pre>
       * Bit flag field of the permissions granted by this ACL.
       * </pre>
       *
       * <code>optional uint32 grant = 6;</code>
       */
      boolean hasGrant();
      /**
       * <pre>
       * Bit flag field of the permissions granted by this ACL.
       * </pre>
       *
       * <code>optional uint32 grant = 6;</code>
       */
      int getGrant();

      /**
       * <pre>
       * Bit flag field of the permissions denied by this ACL.
       * </pre>
       *
       * <code>optional uint32 deny = 7;</code>
       */
      boolean hasDeny();
      /**
       * <pre>
       * Bit flag field of the permissions denied by this ACL.
       * </pre>
       *
       * <code>optional uint32 deny = 7;</code>
       */
      int getDeny();
    }
    /**
     * Protobuf type {@code MumbleProto.ACL.ChanACL}
     */
    public  static final class ChanACL extends
        com.google.protobuf.GeneratedMessageLite<
            ChanACL, ChanACL.Builder> implements
        // @@protoc_insertion_point(message_implements:MumbleProto.ACL.ChanACL)
        ChanACLOrBuilder {
      private ChanACL() {
        applyHere_ = true;
        applySubs_ = true;
        inherited_ = true;
        group_ = "";
      }
      private int bitField0_;
      public static final int APPLY_HERE_FIELD_NUMBER = 1;
      private boolean applyHere_;
      /**
       * <pre>
       * True if this ACL applies to the current channel.
       * </pre>
       *
       * <code>optional bool apply_here = 1 [default = true];</code>
       */
      @java.lang.Override
      public boolean hasApplyHere() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * True if this ACL applies to the current channel.
       * </pre>
       *
       * <code>optional bool apply_here = 1 [default = true];</code>
       */
      @java.lang.Override
      public boolean getApplyHere() {
        return applyHere_;
      }
      /**
       * <pre>
       * True if this ACL applies to the current channel.
       * </pre>
       *
       * <code>optional bool apply_here = 1 [default = true];</code>
       */
      private void setApplyHere(boolean value) {
        bitField0_ |= 0x00000001;
        applyHere_ = value;
      }
      /**
       * <pre>
       * True if this ACL applies to the current channel.
       * </pre>
       *
       * <code>optional bool apply_here = 1 [default = true];</code>
       */
      private void clearApplyHere() {
        bitField0_ = (bitField0_ & ~0x00000001);
        applyHere_ = true;
      }

      public static final int APPLY_SUBS_FIELD_NUMBER = 2;
      private boolean applySubs_;
      /**
       * <pre>
       * True if this ACL applies to the sub channels.
       * </pre>
       *
       * <code>optional bool apply_subs = 2 [default = true];</code>
       */
      @java.lang.Override
      public boolean hasApplySubs() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * True if this ACL applies to the sub channels.
       * </pre>
       *
       * <code>optional bool apply_subs = 2 [default = true];</code>
       */
      @java.lang.Override
      public boolean getApplySubs() {
        return applySubs_;
      }
      /**
       * <pre>
       * True if this ACL applies to the sub channels.
       * </pre>
       *
       * <code>optional bool apply_subs = 2 [default = true];</code>
       */
      private void setApplySubs(boolean value) {
        bitField0_ |= 0x00000002;
        applySubs_ = value;
      }
      /**
       * <pre>
       * True if this ACL applies to the sub channels.
       * </pre>
       *
       * <code>optional bool apply_subs = 2 [default = true];</code>
       */
      private void clearApplySubs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        applySubs_ = true;
      }

      public static final int INHERITED_FIELD_NUMBER = 3;
      private boolean inherited_;
      /**
       * <pre>
       * True if the ACL has been inherited from the parent.
       * </pre>
       *
       * <code>optional bool inherited = 3 [default = true];</code>
       */
      @java.lang.Override
      public boolean hasInherited() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * True if the ACL has been inherited from the parent.
       * </pre>
       *
       * <code>optional bool inherited = 3 [default = true];</code>
       */
      @java.lang.Override
      public boolean getInherited() {
        return inherited_;
      }
      /**
       * <pre>
       * True if the ACL has been inherited from the parent.
       * </pre>
       *
       * <code>optional bool inherited = 3 [default = true];</code>
       */
      private void setInherited(boolean value) {
        bitField0_ |= 0x00000004;
        inherited_ = value;
      }
      /**
       * <pre>
       * True if the ACL has been inherited from the parent.
       * </pre>
       *
       * <code>optional bool inherited = 3 [default = true];</code>
       */
      private void clearInherited() {
        bitField0_ = (bitField0_ & ~0x00000004);
        inherited_ = true;
      }

      public static final int USER_ID_FIELD_NUMBER = 4;
      private int userId_;
      /**
       * <pre>
       * ID of the user that is affected by this ACL.
       * </pre>
       *
       * <code>optional uint32 user_id = 4;</code>
       */
      @java.lang.Override
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * ID of the user that is affected by this ACL.
       * </pre>
       *
       * <code>optional uint32 user_id = 4;</code>
       */
      @java.lang.Override
      public int getUserId() {
        return userId_;
      }
      /**
       * <pre>
       * ID of the user that is affected by this ACL.
       * </pre>
       *
       * <code>optional uint32 user_id = 4;</code>
       */
      private void setUserId(int value) {
        bitField0_ |= 0x00000008;
        userId_ = value;
      }
      /**
       * <pre>
       * ID of the user that is affected by this ACL.
       * </pre>
       *
       * <code>optional uint32 user_id = 4;</code>
       */
      private void clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        userId_ = 0;
      }

      public static final int GROUP_FIELD_NUMBER = 5;
      private java.lang.String group_;
      /**
       * <pre>
       * ID of the group that is affected by this ACL.
       * </pre>
       *
       * <code>optional string group = 5;</code>
       */
      @java.lang.Override
      public boolean hasGroup() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * ID of the group that is affected by this ACL.
       * </pre>
       *
       * <code>optional string group = 5;</code>
       */
      @java.lang.Override
      public java.lang.String getGroup() {
        return group_;
      }
      /**
       * <pre>
       * ID of the group that is affected by this ACL.
       * </pre>
       *
       * <code>optional string group = 5;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getGroupBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(group_);
      }
      /**
       * <pre>
       * ID of the group that is affected by this ACL.
       * </pre>
       *
       * <code>optional string group = 5;</code>
       */
      private void setGroup(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        group_ = value;
      }
      /**
       * <pre>
       * ID of the group that is affected by this ACL.
       * </pre>
       *
       * <code>optional string group = 5;</code>
       */
      private void clearGroup() {
        bitField0_ = (bitField0_ & ~0x00000010);
        group_ = getDefaultInstance().getGroup();
      }
      /**
       * <pre>
       * ID of the group that is affected by this ACL.
       * </pre>
       *
       * <code>optional string group = 5;</code>
       */
      private void setGroupBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        group_ = value.toStringUtf8();
      }

      public static final int GRANT_FIELD_NUMBER = 6;
      private int grant_;
      /**
       * <pre>
       * Bit flag field of the permissions granted by this ACL.
       * </pre>
       *
       * <code>optional uint32 grant = 6;</code>
       */
      @java.lang.Override
      public boolean hasGrant() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Bit flag field of the permissions granted by this ACL.
       * </pre>
       *
       * <code>optional uint32 grant = 6;</code>
       */
      @java.lang.Override
      public int getGrant() {
        return grant_;
      }
      /**
       * <pre>
       * Bit flag field of the permissions granted by this ACL.
       * </pre>
       *
       * <code>optional uint32 grant = 6;</code>
       */
      private void setGrant(int value) {
        bitField0_ |= 0x00000020;
        grant_ = value;
      }
      /**
       * <pre>
       * Bit flag field of the permissions granted by this ACL.
       * </pre>
       *
       * <code>optional uint32 grant = 6;</code>
       */
      private void clearGrant() {
        bitField0_ = (bitField0_ & ~0x00000020);
        grant_ = 0;
      }

      public static final int DENY_FIELD_NUMBER = 7;
      private int deny_;
      /**
       * <pre>
       * Bit flag field of the permissions denied by this ACL.
       * </pre>
       *
       * <code>optional uint32 deny = 7;</code>
       */
      @java.lang.Override
      public boolean hasDeny() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Bit flag field of the permissions denied by this ACL.
       * </pre>
       *
       * <code>optional uint32 deny = 7;</code>
       */
      @java.lang.Override
      public int getDeny() {
        return deny_;
      }
      /**
       * <pre>
       * Bit flag field of the permissions denied by this ACL.
       * </pre>
       *
       * <code>optional uint32 deny = 7;</code>
       */
      private void setDeny(int value) {
        bitField0_ |= 0x00000040;
        deny_ = value;
      }
      /**
       * <pre>
       * Bit flag field of the permissions denied by this ACL.
       * </pre>
       *
       * <code>optional uint32 deny = 7;</code>
       */
      private void clearDeny() {
        bitField0_ = (bitField0_ & ~0x00000040);
        deny_ = 0;
      }

      public static MumbleProto.Mumble.ACL.ChanACL parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static MumbleProto.Mumble.ACL.ChanACL parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static MumbleProto.Mumble.ACL.ChanACL parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static MumbleProto.Mumble.ACL.ChanACL parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static MumbleProto.Mumble.ACL.ChanACL parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static MumbleProto.Mumble.ACL.ChanACL parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static MumbleProto.Mumble.ACL.ChanACL parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static MumbleProto.Mumble.ACL.ChanACL parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static MumbleProto.Mumble.ACL.ChanACL parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static MumbleProto.Mumble.ACL.ChanACL parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static MumbleProto.Mumble.ACL.ChanACL parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static MumbleProto.Mumble.ACL.ChanACL parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(MumbleProto.Mumble.ACL.ChanACL prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * Protobuf type {@code MumbleProto.ACL.ChanACL}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            MumbleProto.Mumble.ACL.ChanACL, Builder> implements
          // @@protoc_insertion_point(builder_implements:MumbleProto.ACL.ChanACL)
          MumbleProto.Mumble.ACL.ChanACLOrBuilder {
        // Construct using MumbleProto.Mumble.ACL.ChanACL.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * True if this ACL applies to the current channel.
         * </pre>
         *
         * <code>optional bool apply_here = 1 [default = true];</code>
         */
        @java.lang.Override
        public boolean hasApplyHere() {
          return instance.hasApplyHere();
        }
        /**
         * <pre>
         * True if this ACL applies to the current channel.
         * </pre>
         *
         * <code>optional bool apply_here = 1 [default = true];</code>
         */
        @java.lang.Override
        public boolean getApplyHere() {
          return instance.getApplyHere();
        }
        /**
         * <pre>
         * True if this ACL applies to the current channel.
         * </pre>
         *
         * <code>optional bool apply_here = 1 [default = true];</code>
         */
        public Builder setApplyHere(boolean value) {
          copyOnWrite();
          instance.setApplyHere(value);
          return this;
        }
        /**
         * <pre>
         * True if this ACL applies to the current channel.
         * </pre>
         *
         * <code>optional bool apply_here = 1 [default = true];</code>
         */
        public Builder clearApplyHere() {
          copyOnWrite();
          instance.clearApplyHere();
          return this;
        }

        /**
         * <pre>
         * True if this ACL applies to the sub channels.
         * </pre>
         *
         * <code>optional bool apply_subs = 2 [default = true];</code>
         */
        @java.lang.Override
        public boolean hasApplySubs() {
          return instance.hasApplySubs();
        }
        /**
         * <pre>
         * True if this ACL applies to the sub channels.
         * </pre>
         *
         * <code>optional bool apply_subs = 2 [default = true];</code>
         */
        @java.lang.Override
        public boolean getApplySubs() {
          return instance.getApplySubs();
        }
        /**
         * <pre>
         * True if this ACL applies to the sub channels.
         * </pre>
         *
         * <code>optional bool apply_subs = 2 [default = true];</code>
         */
        public Builder setApplySubs(boolean value) {
          copyOnWrite();
          instance.setApplySubs(value);
          return this;
        }
        /**
         * <pre>
         * True if this ACL applies to the sub channels.
         * </pre>
         *
         * <code>optional bool apply_subs = 2 [default = true];</code>
         */
        public Builder clearApplySubs() {
          copyOnWrite();
          instance.clearApplySubs();
          return this;
        }

        /**
         * <pre>
         * True if the ACL has been inherited from the parent.
         * </pre>
         *
         * <code>optional bool inherited = 3 [default = true];</code>
         */
        @java.lang.Override
        public boolean hasInherited() {
          return instance.hasInherited();
        }
        /**
         * <pre>
         * True if the ACL has been inherited from the parent.
         * </pre>
         *
         * <code>optional bool inherited = 3 [default = true];</code>
         */
        @java.lang.Override
        public boolean getInherited() {
          return instance.getInherited();
        }
        /**
         * <pre>
         * True if the ACL has been inherited from the parent.
         * </pre>
         *
         * <code>optional bool inherited = 3 [default = true];</code>
         */
        public Builder setInherited(boolean value) {
          copyOnWrite();
          instance.setInherited(value);
          return this;
        }
        /**
         * <pre>
         * True if the ACL has been inherited from the parent.
         * </pre>
         *
         * <code>optional bool inherited = 3 [default = true];</code>
         */
        public Builder clearInherited() {
          copyOnWrite();
          instance.clearInherited();
          return this;
        }

        /**
         * <pre>
         * ID of the user that is affected by this ACL.
         * </pre>
         *
         * <code>optional uint32 user_id = 4;</code>
         */
        @java.lang.Override
        public boolean hasUserId() {
          return instance.hasUserId();
        }
        /**
         * <pre>
         * ID of the user that is affected by this ACL.
         * </pre>
         *
         * <code>optional uint32 user_id = 4;</code>
         */
        @java.lang.Override
        public int getUserId() {
          return instance.getUserId();
        }
        /**
         * <pre>
         * ID of the user that is affected by this ACL.
         * </pre>
         *
         * <code>optional uint32 user_id = 4;</code>
         */
        public Builder setUserId(int value) {
          copyOnWrite();
          instance.setUserId(value);
          return this;
        }
        /**
         * <pre>
         * ID of the user that is affected by this ACL.
         * </pre>
         *
         * <code>optional uint32 user_id = 4;</code>
         */
        public Builder clearUserId() {
          copyOnWrite();
          instance.clearUserId();
          return this;
        }

        /**
         * <pre>
         * ID of the group that is affected by this ACL.
         * </pre>
         *
         * <code>optional string group = 5;</code>
         */
        @java.lang.Override
        public boolean hasGroup() {
          return instance.hasGroup();
        }
        /**
         * <pre>
         * ID of the group that is affected by this ACL.
         * </pre>
         *
         * <code>optional string group = 5;</code>
         */
        @java.lang.Override
        public java.lang.String getGroup() {
          return instance.getGroup();
        }
        /**
         * <pre>
         * ID of the group that is affected by this ACL.
         * </pre>
         *
         * <code>optional string group = 5;</code>
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getGroupBytes() {
          return instance.getGroupBytes();
        }
        /**
         * <pre>
         * ID of the group that is affected by this ACL.
         * </pre>
         *
         * <code>optional string group = 5;</code>
         */
        public Builder setGroup(
            java.lang.String value) {
          copyOnWrite();
          instance.setGroup(value);
          return this;
        }
        /**
         * <pre>
         * ID of the group that is affected by this ACL.
         * </pre>
         *
         * <code>optional string group = 5;</code>
         */
        public Builder clearGroup() {
          copyOnWrite();
          instance.clearGroup();
          return this;
        }
        /**
         * <pre>
         * ID of the group that is affected by this ACL.
         * </pre>
         *
         * <code>optional string group = 5;</code>
         */
        public Builder setGroupBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setGroupBytes(value);
          return this;
        }

        /**
         * <pre>
         * Bit flag field of the permissions granted by this ACL.
         * </pre>
         *
         * <code>optional uint32 grant = 6;</code>
         */
        @java.lang.Override
        public boolean hasGrant() {
          return instance.hasGrant();
        }
        /**
         * <pre>
         * Bit flag field of the permissions granted by this ACL.
         * </pre>
         *
         * <code>optional uint32 grant = 6;</code>
         */
        @java.lang.Override
        public int getGrant() {
          return instance.getGrant();
        }
        /**
         * <pre>
         * Bit flag field of the permissions granted by this ACL.
         * </pre>
         *
         * <code>optional uint32 grant = 6;</code>
         */
        public Builder setGrant(int value) {
          copyOnWrite();
          instance.setGrant(value);
          return this;
        }
        /**
         * <pre>
         * Bit flag field of the permissions granted by this ACL.
         * </pre>
         *
         * <code>optional uint32 grant = 6;</code>
         */
        public Builder clearGrant() {
          copyOnWrite();
          instance.clearGrant();
          return this;
        }

        /**
         * <pre>
         * Bit flag field of the permissions denied by this ACL.
         * </pre>
         *
         * <code>optional uint32 deny = 7;</code>
         */
        @java.lang.Override
        public boolean hasDeny() {
          return instance.hasDeny();
        }
        /**
         * <pre>
         * Bit flag field of the permissions denied by this ACL.
         * </pre>
         *
         * <code>optional uint32 deny = 7;</code>
         */
        @java.lang.Override
        public int getDeny() {
          return instance.getDeny();
        }
        /**
         * <pre>
         * Bit flag field of the permissions denied by this ACL.
         * </pre>
         *
         * <code>optional uint32 deny = 7;</code>
         */
        public Builder setDeny(int value) {
          copyOnWrite();
          instance.setDeny(value);
          return this;
        }
        /**
         * <pre>
         * Bit flag field of the permissions denied by this ACL.
         * </pre>
         *
         * <code>optional uint32 deny = 7;</code>
         */
        public Builder clearDeny() {
          copyOnWrite();
          instance.clearDeny();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:MumbleProto.ACL.ChanACL)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new MumbleProto.Mumble.ACL.ChanACL();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "bitField0_",
                "applyHere_",
                "applySubs_",
                "inherited_",
                "userId_",
                "group_",
                "grant_",
                "deny_",
              };
              java.lang.String info =
                  "\u0001\u0007\u0000\u0001\u0001\u0007\u0007\u0000\u0000\u0000\u0001\u0007\u0000\u0002" +
                  "\u0007\u0001\u0003\u0007\u0002\u0004\u000b\u0003\u0005\b\u0004\u0006\u000b\u0005" +
                  "\u0007\u000b\u0006";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<MumbleProto.Mumble.ACL.ChanACL> parser = PARSER;
            if (parser == null) {
              synchronized (MumbleProto.Mumble.ACL.ChanACL.class) {
                parser = PARSER;
                if (parser == null) {
                  parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:MumbleProto.ACL.ChanACL)
      private static final MumbleProto.Mumble.ACL.ChanACL DEFAULT_INSTANCE;
      static {
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = new ChanACL();
      }

      static {
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          ChanACL.class, DEFAULT_INSTANCE);
      }
      public static MumbleProto.Mumble.ACL.ChanACL getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<ChanACL> PARSER;

      public static com.google.protobuf.Parser<ChanACL> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private int channelId_;
    /**
     * <pre>
     * Channel ID of the channel this message affects.
     * </pre>
     *
     * <code>required uint32 channel_id = 1;</code>
     */
    @java.lang.Override
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Channel ID of the channel this message affects.
     * </pre>
     *
     * <code>required uint32 channel_id = 1;</code>
     */
    @java.lang.Override
    public int getChannelId() {
      return channelId_;
    }
    /**
     * <pre>
     * Channel ID of the channel this message affects.
     * </pre>
     *
     * <code>required uint32 channel_id = 1;</code>
     */
    private void setChannelId(int value) {
      bitField0_ |= 0x00000001;
      channelId_ = value;
    }
    /**
     * <pre>
     * Channel ID of the channel this message affects.
     * </pre>
     *
     * <code>required uint32 channel_id = 1;</code>
     */
    private void clearChannelId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      channelId_ = 0;
    }

    public static final int INHERIT_ACLS_FIELD_NUMBER = 2;
    private boolean inheritAcls_;
    /**
     * <pre>
     * True if the channel inherits its parent's ACLs.
     * </pre>
     *
     * <code>optional bool inherit_acls = 2 [default = true];</code>
     */
    @java.lang.Override
    public boolean hasInheritAcls() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * True if the channel inherits its parent's ACLs.
     * </pre>
     *
     * <code>optional bool inherit_acls = 2 [default = true];</code>
     */
    @java.lang.Override
    public boolean getInheritAcls() {
      return inheritAcls_;
    }
    /**
     * <pre>
     * True if the channel inherits its parent's ACLs.
     * </pre>
     *
     * <code>optional bool inherit_acls = 2 [default = true];</code>
     */
    private void setInheritAcls(boolean value) {
      bitField0_ |= 0x00000002;
      inheritAcls_ = value;
    }
    /**
     * <pre>
     * True if the channel inherits its parent's ACLs.
     * </pre>
     *
     * <code>optional bool inherit_acls = 2 [default = true];</code>
     */
    private void clearInheritAcls() {
      bitField0_ = (bitField0_ & ~0x00000002);
      inheritAcls_ = true;
    }

    public static final int GROUPS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<MumbleProto.Mumble.ACL.ChanGroup> groups_;
    /**
     * <pre>
     * User group specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
     */
    @java.lang.Override
    public java.util.List<MumbleProto.Mumble.ACL.ChanGroup> getGroupsList() {
      return groups_;
    }
    /**
     * <pre>
     * User group specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
     */
    public java.util.List<? extends MumbleProto.Mumble.ACL.ChanGroupOrBuilder> 
        getGroupsOrBuilderList() {
      return groups_;
    }
    /**
     * <pre>
     * User group specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
     */
    @java.lang.Override
    public int getGroupsCount() {
      return groups_.size();
    }
    /**
     * <pre>
     * User group specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
     */
    @java.lang.Override
    public MumbleProto.Mumble.ACL.ChanGroup getGroups(int index) {
      return groups_.get(index);
    }
    /**
     * <pre>
     * User group specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
     */
    public MumbleProto.Mumble.ACL.ChanGroupOrBuilder getGroupsOrBuilder(
        int index) {
      return groups_.get(index);
    }
    private void ensureGroupsIsMutable() {
      if (!groups_.isModifiable()) {
        groups_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(groups_);
       }
    }

    /**
     * <pre>
     * User group specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
     */
    private void setGroups(
        int index, MumbleProto.Mumble.ACL.ChanGroup value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureGroupsIsMutable();
      groups_.set(index, value);
    }
    /**
     * <pre>
     * User group specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
     */
    private void setGroups(
        int index, MumbleProto.Mumble.ACL.ChanGroup.Builder builderForValue) {
      ensureGroupsIsMutable();
      groups_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * User group specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
     */
    private void addGroups(MumbleProto.Mumble.ACL.ChanGroup value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureGroupsIsMutable();
      groups_.add(value);
    }
    /**
     * <pre>
     * User group specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
     */
    private void addGroups(
        int index, MumbleProto.Mumble.ACL.ChanGroup value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureGroupsIsMutable();
      groups_.add(index, value);
    }
    /**
     * <pre>
     * User group specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
     */
    private void addGroups(
        MumbleProto.Mumble.ACL.ChanGroup.Builder builderForValue) {
      ensureGroupsIsMutable();
      groups_.add(builderForValue.build());
    }
    /**
     * <pre>
     * User group specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
     */
    private void addGroups(
        int index, MumbleProto.Mumble.ACL.ChanGroup.Builder builderForValue) {
      ensureGroupsIsMutable();
      groups_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * User group specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
     */
    private void addAllGroups(
        java.lang.Iterable<? extends MumbleProto.Mumble.ACL.ChanGroup> values) {
      ensureGroupsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, groups_);
    }
    /**
     * <pre>
     * User group specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
     */
    private void clearGroups() {
      groups_ = emptyProtobufList();
    }
    /**
     * <pre>
     * User group specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
     */
    private void removeGroups(int index) {
      ensureGroupsIsMutable();
      groups_.remove(index);
    }

    public static final int ACLS_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<MumbleProto.Mumble.ACL.ChanACL> acls_;
    /**
     * <pre>
     * ACL specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
     */
    @java.lang.Override
    public java.util.List<MumbleProto.Mumble.ACL.ChanACL> getAclsList() {
      return acls_;
    }
    /**
     * <pre>
     * ACL specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
     */
    public java.util.List<? extends MumbleProto.Mumble.ACL.ChanACLOrBuilder> 
        getAclsOrBuilderList() {
      return acls_;
    }
    /**
     * <pre>
     * ACL specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
     */
    @java.lang.Override
    public int getAclsCount() {
      return acls_.size();
    }
    /**
     * <pre>
     * ACL specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
     */
    @java.lang.Override
    public MumbleProto.Mumble.ACL.ChanACL getAcls(int index) {
      return acls_.get(index);
    }
    /**
     * <pre>
     * ACL specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
     */
    public MumbleProto.Mumble.ACL.ChanACLOrBuilder getAclsOrBuilder(
        int index) {
      return acls_.get(index);
    }
    private void ensureAclsIsMutable() {
      if (!acls_.isModifiable()) {
        acls_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(acls_);
       }
    }

    /**
     * <pre>
     * ACL specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
     */
    private void setAcls(
        int index, MumbleProto.Mumble.ACL.ChanACL value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAclsIsMutable();
      acls_.set(index, value);
    }
    /**
     * <pre>
     * ACL specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
     */
    private void setAcls(
        int index, MumbleProto.Mumble.ACL.ChanACL.Builder builderForValue) {
      ensureAclsIsMutable();
      acls_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * ACL specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
     */
    private void addAcls(MumbleProto.Mumble.ACL.ChanACL value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAclsIsMutable();
      acls_.add(value);
    }
    /**
     * <pre>
     * ACL specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
     */
    private void addAcls(
        int index, MumbleProto.Mumble.ACL.ChanACL value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAclsIsMutable();
      acls_.add(index, value);
    }
    /**
     * <pre>
     * ACL specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
     */
    private void addAcls(
        MumbleProto.Mumble.ACL.ChanACL.Builder builderForValue) {
      ensureAclsIsMutable();
      acls_.add(builderForValue.build());
    }
    /**
     * <pre>
     * ACL specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
     */
    private void addAcls(
        int index, MumbleProto.Mumble.ACL.ChanACL.Builder builderForValue) {
      ensureAclsIsMutable();
      acls_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * ACL specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
     */
    private void addAllAcls(
        java.lang.Iterable<? extends MumbleProto.Mumble.ACL.ChanACL> values) {
      ensureAclsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, acls_);
    }
    /**
     * <pre>
     * ACL specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
     */
    private void clearAcls() {
      acls_ = emptyProtobufList();
    }
    /**
     * <pre>
     * ACL specifications.
     * </pre>
     *
     * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
     */
    private void removeAcls(int index) {
      ensureAclsIsMutable();
      acls_.remove(index);
    }

    public static final int QUERY_FIELD_NUMBER = 5;
    private boolean query_;
    /**
     * <pre>
     * True if the message is a query for ACLs instead of setting them.
     * </pre>
     *
     * <code>optional bool query = 5 [default = false];</code>
     */
    @java.lang.Override
    public boolean hasQuery() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * True if the message is a query for ACLs instead of setting them.
     * </pre>
     *
     * <code>optional bool query = 5 [default = false];</code>
     */
    @java.lang.Override
    public boolean getQuery() {
      return query_;
    }
    /**
     * <pre>
     * True if the message is a query for ACLs instead of setting them.
     * </pre>
     *
     * <code>optional bool query = 5 [default = false];</code>
     */
    private void setQuery(boolean value) {
      bitField0_ |= 0x00000004;
      query_ = value;
    }
    /**
     * <pre>
     * True if the message is a query for ACLs instead of setting them.
     * </pre>
     *
     * <code>optional bool query = 5 [default = false];</code>
     */
    private void clearQuery() {
      bitField0_ = (bitField0_ & ~0x00000004);
      query_ = false;
    }

    public static MumbleProto.Mumble.ACL parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ACL parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ACL parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ACL parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ACL parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ACL parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ACL parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ACL parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.ACL parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ACL parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.ACL parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ACL parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.ACL prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code MumbleProto.ACL}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.ACL, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.ACL)
        MumbleProto.Mumble.ACLOrBuilder {
      // Construct using MumbleProto.Mumble.ACL.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Channel ID of the channel this message affects.
       * </pre>
       *
       * <code>required uint32 channel_id = 1;</code>
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return instance.hasChannelId();
      }
      /**
       * <pre>
       * Channel ID of the channel this message affects.
       * </pre>
       *
       * <code>required uint32 channel_id = 1;</code>
       */
      @java.lang.Override
      public int getChannelId() {
        return instance.getChannelId();
      }
      /**
       * <pre>
       * Channel ID of the channel this message affects.
       * </pre>
       *
       * <code>required uint32 channel_id = 1;</code>
       */
      public Builder setChannelId(int value) {
        copyOnWrite();
        instance.setChannelId(value);
        return this;
      }
      /**
       * <pre>
       * Channel ID of the channel this message affects.
       * </pre>
       *
       * <code>required uint32 channel_id = 1;</code>
       */
      public Builder clearChannelId() {
        copyOnWrite();
        instance.clearChannelId();
        return this;
      }

      /**
       * <pre>
       * True if the channel inherits its parent's ACLs.
       * </pre>
       *
       * <code>optional bool inherit_acls = 2 [default = true];</code>
       */
      @java.lang.Override
      public boolean hasInheritAcls() {
        return instance.hasInheritAcls();
      }
      /**
       * <pre>
       * True if the channel inherits its parent's ACLs.
       * </pre>
       *
       * <code>optional bool inherit_acls = 2 [default = true];</code>
       */
      @java.lang.Override
      public boolean getInheritAcls() {
        return instance.getInheritAcls();
      }
      /**
       * <pre>
       * True if the channel inherits its parent's ACLs.
       * </pre>
       *
       * <code>optional bool inherit_acls = 2 [default = true];</code>
       */
      public Builder setInheritAcls(boolean value) {
        copyOnWrite();
        instance.setInheritAcls(value);
        return this;
      }
      /**
       * <pre>
       * True if the channel inherits its parent's ACLs.
       * </pre>
       *
       * <code>optional bool inherit_acls = 2 [default = true];</code>
       */
      public Builder clearInheritAcls() {
        copyOnWrite();
        instance.clearInheritAcls();
        return this;
      }

      /**
       * <pre>
       * User group specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
       */
      @java.lang.Override
      public java.util.List<MumbleProto.Mumble.ACL.ChanGroup> getGroupsList() {
        return java.util.Collections.unmodifiableList(
            instance.getGroupsList());
      }
      /**
       * <pre>
       * User group specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
       */
      @java.lang.Override
      public int getGroupsCount() {
        return instance.getGroupsCount();
      }/**
       * <pre>
       * User group specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
       */
      @java.lang.Override
      public MumbleProto.Mumble.ACL.ChanGroup getGroups(int index) {
        return instance.getGroups(index);
      }
      /**
       * <pre>
       * User group specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
       */
      public Builder setGroups(
          int index, MumbleProto.Mumble.ACL.ChanGroup value) {
        copyOnWrite();
        instance.setGroups(index, value);
        return this;
      }
      /**
       * <pre>
       * User group specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
       */
      public Builder setGroups(
          int index, MumbleProto.Mumble.ACL.ChanGroup.Builder builderForValue) {
        copyOnWrite();
        instance.setGroups(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * User group specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
       */
      public Builder addGroups(MumbleProto.Mumble.ACL.ChanGroup value) {
        copyOnWrite();
        instance.addGroups(value);
        return this;
      }
      /**
       * <pre>
       * User group specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
       */
      public Builder addGroups(
          int index, MumbleProto.Mumble.ACL.ChanGroup value) {
        copyOnWrite();
        instance.addGroups(index, value);
        return this;
      }
      /**
       * <pre>
       * User group specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
       */
      public Builder addGroups(
          MumbleProto.Mumble.ACL.ChanGroup.Builder builderForValue) {
        copyOnWrite();
        instance.addGroups(builderForValue);
        return this;
      }
      /**
       * <pre>
       * User group specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
       */
      public Builder addGroups(
          int index, MumbleProto.Mumble.ACL.ChanGroup.Builder builderForValue) {
        copyOnWrite();
        instance.addGroups(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * User group specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
       */
      public Builder addAllGroups(
          java.lang.Iterable<? extends MumbleProto.Mumble.ACL.ChanGroup> values) {
        copyOnWrite();
        instance.addAllGroups(values);
        return this;
      }
      /**
       * <pre>
       * User group specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
       */
      public Builder clearGroups() {
        copyOnWrite();
        instance.clearGroups();
        return this;
      }
      /**
       * <pre>
       * User group specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanGroup groups = 3;</code>
       */
      public Builder removeGroups(int index) {
        copyOnWrite();
        instance.removeGroups(index);
        return this;
      }

      /**
       * <pre>
       * ACL specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
       */
      @java.lang.Override
      public java.util.List<MumbleProto.Mumble.ACL.ChanACL> getAclsList() {
        return java.util.Collections.unmodifiableList(
            instance.getAclsList());
      }
      /**
       * <pre>
       * ACL specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
       */
      @java.lang.Override
      public int getAclsCount() {
        return instance.getAclsCount();
      }/**
       * <pre>
       * ACL specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
       */
      @java.lang.Override
      public MumbleProto.Mumble.ACL.ChanACL getAcls(int index) {
        return instance.getAcls(index);
      }
      /**
       * <pre>
       * ACL specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
       */
      public Builder setAcls(
          int index, MumbleProto.Mumble.ACL.ChanACL value) {
        copyOnWrite();
        instance.setAcls(index, value);
        return this;
      }
      /**
       * <pre>
       * ACL specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
       */
      public Builder setAcls(
          int index, MumbleProto.Mumble.ACL.ChanACL.Builder builderForValue) {
        copyOnWrite();
        instance.setAcls(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * ACL specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
       */
      public Builder addAcls(MumbleProto.Mumble.ACL.ChanACL value) {
        copyOnWrite();
        instance.addAcls(value);
        return this;
      }
      /**
       * <pre>
       * ACL specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
       */
      public Builder addAcls(
          int index, MumbleProto.Mumble.ACL.ChanACL value) {
        copyOnWrite();
        instance.addAcls(index, value);
        return this;
      }
      /**
       * <pre>
       * ACL specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
       */
      public Builder addAcls(
          MumbleProto.Mumble.ACL.ChanACL.Builder builderForValue) {
        copyOnWrite();
        instance.addAcls(builderForValue);
        return this;
      }
      /**
       * <pre>
       * ACL specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
       */
      public Builder addAcls(
          int index, MumbleProto.Mumble.ACL.ChanACL.Builder builderForValue) {
        copyOnWrite();
        instance.addAcls(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * ACL specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
       */
      public Builder addAllAcls(
          java.lang.Iterable<? extends MumbleProto.Mumble.ACL.ChanACL> values) {
        copyOnWrite();
        instance.addAllAcls(values);
        return this;
      }
      /**
       * <pre>
       * ACL specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
       */
      public Builder clearAcls() {
        copyOnWrite();
        instance.clearAcls();
        return this;
      }
      /**
       * <pre>
       * ACL specifications.
       * </pre>
       *
       * <code>repeated .MumbleProto.ACL.ChanACL acls = 4;</code>
       */
      public Builder removeAcls(int index) {
        copyOnWrite();
        instance.removeAcls(index);
        return this;
      }

      /**
       * <pre>
       * True if the message is a query for ACLs instead of setting them.
       * </pre>
       *
       * <code>optional bool query = 5 [default = false];</code>
       */
      @java.lang.Override
      public boolean hasQuery() {
        return instance.hasQuery();
      }
      /**
       * <pre>
       * True if the message is a query for ACLs instead of setting them.
       * </pre>
       *
       * <code>optional bool query = 5 [default = false];</code>
       */
      @java.lang.Override
      public boolean getQuery() {
        return instance.getQuery();
      }
      /**
       * <pre>
       * True if the message is a query for ACLs instead of setting them.
       * </pre>
       *
       * <code>optional bool query = 5 [default = false];</code>
       */
      public Builder setQuery(boolean value) {
        copyOnWrite();
        instance.setQuery(value);
        return this;
      }
      /**
       * <pre>
       * True if the message is a query for ACLs instead of setting them.
       * </pre>
       *
       * <code>optional bool query = 5 [default = false];</code>
       */
      public Builder clearQuery() {
        copyOnWrite();
        instance.clearQuery();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.ACL)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.ACL();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "channelId_",
              "inheritAcls_",
              "groups_",
              MumbleProto.Mumble.ACL.ChanGroup.class,
              "acls_",
              MumbleProto.Mumble.ACL.ChanACL.class,
              "query_",
            };
            java.lang.String info =
                "\u0001\u0005\u0000\u0001\u0001\u0005\u0005\u0000\u0002\u0002\u0001\u050b\u0000\u0002" +
                "\u0007\u0001\u0003\u041b\u0004\u001b\u0005\u0007\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.ACL> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.ACL.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.ACL)
    private static final MumbleProto.Mumble.ACL DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new ACL();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ACL.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.ACL getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ACL> PARSER;

    public static com.google.protobuf.Parser<ACL> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface QueryUsersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.QueryUsers)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * user_ids.
     * </pre>
     *
     * <code>repeated uint32 ids = 1;</code>
     */
    java.util.List<java.lang.Integer> getIdsList();
    /**
     * <pre>
     * user_ids.
     * </pre>
     *
     * <code>repeated uint32 ids = 1;</code>
     */
    int getIdsCount();
    /**
     * <pre>
     * user_ids.
     * </pre>
     *
     * <code>repeated uint32 ids = 1;</code>
     */
    int getIds(int index);

    /**
     * <pre>
     * User names in the same order as ids.
     * </pre>
     *
     * <code>repeated string names = 2;</code>
     */
    java.util.List<java.lang.String>
        getNamesList();
    /**
     * <pre>
     * User names in the same order as ids.
     * </pre>
     *
     * <code>repeated string names = 2;</code>
     */
    int getNamesCount();
    /**
     * <pre>
     * User names in the same order as ids.
     * </pre>
     *
     * <code>repeated string names = 2;</code>
     */
    java.lang.String getNames(int index);
    /**
     * <pre>
     * User names in the same order as ids.
     * </pre>
     *
     * <code>repeated string names = 2;</code>
     */
    com.google.protobuf.ByteString
        getNamesBytes(int index);
  }
  /**
   * <pre>
   * Client may use this message to refresh its registered user information. The
   * client should fill the IDs or Names of the users it wants to refresh. The
   * server fills the missing parts and sends the message back.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.QueryUsers}
   */
  public  static final class QueryUsers extends
      com.google.protobuf.GeneratedMessageLite<
          QueryUsers, QueryUsers.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.QueryUsers)
      QueryUsersOrBuilder {
    private QueryUsers() {
      ids_ = emptyIntList();
      names_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    public static final int IDS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList ids_;
    /**
     * <pre>
     * user_ids.
     * </pre>
     *
     * <code>repeated uint32 ids = 1;</code>
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getIdsList() {
      return ids_;
    }
    /**
     * <pre>
     * user_ids.
     * </pre>
     *
     * <code>repeated uint32 ids = 1;</code>
     */
    @java.lang.Override
    public int getIdsCount() {
      return ids_.size();
    }
    /**
     * <pre>
     * user_ids.
     * </pre>
     *
     * <code>repeated uint32 ids = 1;</code>
     */
    @java.lang.Override
    public int getIds(int index) {
      return ids_.getInt(index);
    }
    private void ensureIdsIsMutable() {
      if (!ids_.isModifiable()) {
        ids_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(ids_);
       }
    }
    /**
     * <pre>
     * user_ids.
     * </pre>
     *
     * <code>repeated uint32 ids = 1;</code>
     */
    private void setIds(
        int index, int value) {
      ensureIdsIsMutable();
      ids_.setInt(index, value);
    }
    /**
     * <pre>
     * user_ids.
     * </pre>
     *
     * <code>repeated uint32 ids = 1;</code>
     */
    private void addIds(int value) {
      ensureIdsIsMutable();
      ids_.addInt(value);
    }
    /**
     * <pre>
     * user_ids.
     * </pre>
     *
     * <code>repeated uint32 ids = 1;</code>
     */
    private void addAllIds(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, ids_);
    }
    /**
     * <pre>
     * user_ids.
     * </pre>
     *
     * <code>repeated uint32 ids = 1;</code>
     */
    private void clearIds() {
      ids_ = emptyIntList();
    }

    public static final int NAMES_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<java.lang.String> names_;
    /**
     * <pre>
     * User names in the same order as ids.
     * </pre>
     *
     * <code>repeated string names = 2;</code>
     */
    @java.lang.Override
    public java.util.List<java.lang.String> getNamesList() {
      return names_;
    }
    /**
     * <pre>
     * User names in the same order as ids.
     * </pre>
     *
     * <code>repeated string names = 2;</code>
     */
    @java.lang.Override
    public int getNamesCount() {
      return names_.size();
    }
    /**
     * <pre>
     * User names in the same order as ids.
     * </pre>
     *
     * <code>repeated string names = 2;</code>
     */
    @java.lang.Override
    public java.lang.String getNames(int index) {
      return names_.get(index);
    }
    /**
     * <pre>
     * User names in the same order as ids.
     * </pre>
     *
     * <code>repeated string names = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNamesBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          names_.get(index));
    }
    private void ensureNamesIsMutable() {
      if (!names_.isModifiable()) {
        names_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(names_);
       }
    }
    /**
     * <pre>
     * User names in the same order as ids.
     * </pre>
     *
     * <code>repeated string names = 2;</code>
     */
    private void setNames(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureNamesIsMutable();
      names_.set(index, value);
    }
    /**
     * <pre>
     * User names in the same order as ids.
     * </pre>
     *
     * <code>repeated string names = 2;</code>
     */
    private void addNames(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureNamesIsMutable();
      names_.add(value);
    }
    /**
     * <pre>
     * User names in the same order as ids.
     * </pre>
     *
     * <code>repeated string names = 2;</code>
     */
    private void addAllNames(
        java.lang.Iterable<java.lang.String> values) {
      ensureNamesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, names_);
    }
    /**
     * <pre>
     * User names in the same order as ids.
     * </pre>
     *
     * <code>repeated string names = 2;</code>
     */
    private void clearNames() {
      names_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <pre>
     * User names in the same order as ids.
     * </pre>
     *
     * <code>repeated string names = 2;</code>
     */
    private void addNamesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureNamesIsMutable();
      names_.add(value.toStringUtf8());
    }

    public static MumbleProto.Mumble.QueryUsers parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.QueryUsers parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.QueryUsers parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.QueryUsers parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.QueryUsers parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.QueryUsers parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.QueryUsers parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.QueryUsers parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.QueryUsers parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.QueryUsers parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.QueryUsers parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.QueryUsers parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.QueryUsers prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Client may use this message to refresh its registered user information. The
     * client should fill the IDs or Names of the users it wants to refresh. The
     * server fills the missing parts and sends the message back.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.QueryUsers}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.QueryUsers, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.QueryUsers)
        MumbleProto.Mumble.QueryUsersOrBuilder {
      // Construct using MumbleProto.Mumble.QueryUsers.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * user_ids.
       * </pre>
       *
       * <code>repeated uint32 ids = 1;</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getIdsList() {
        return java.util.Collections.unmodifiableList(
            instance.getIdsList());
      }
      /**
       * <pre>
       * user_ids.
       * </pre>
       *
       * <code>repeated uint32 ids = 1;</code>
       */
      @java.lang.Override
      public int getIdsCount() {
        return instance.getIdsCount();
      }
      /**
       * <pre>
       * user_ids.
       * </pre>
       *
       * <code>repeated uint32 ids = 1;</code>
       */
      @java.lang.Override
      public int getIds(int index) {
        return instance.getIds(index);
      }
      /**
       * <pre>
       * user_ids.
       * </pre>
       *
       * <code>repeated uint32 ids = 1;</code>
       */
      public Builder setIds(
          int index, int value) {
        copyOnWrite();
        instance.setIds(index, value);
        return this;
      }
      /**
       * <pre>
       * user_ids.
       * </pre>
       *
       * <code>repeated uint32 ids = 1;</code>
       */
      public Builder addIds(int value) {
        copyOnWrite();
        instance.addIds(value);
        return this;
      }
      /**
       * <pre>
       * user_ids.
       * </pre>
       *
       * <code>repeated uint32 ids = 1;</code>
       */
      public Builder addAllIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllIds(values);
        return this;
      }
      /**
       * <pre>
       * user_ids.
       * </pre>
       *
       * <code>repeated uint32 ids = 1;</code>
       */
      public Builder clearIds() {
        copyOnWrite();
        instance.clearIds();
        return this;
      }

      /**
       * <pre>
       * User names in the same order as ids.
       * </pre>
       *
       * <code>repeated string names = 2;</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.String>
          getNamesList() {
        return java.util.Collections.unmodifiableList(
            instance.getNamesList());
      }
      /**
       * <pre>
       * User names in the same order as ids.
       * </pre>
       *
       * <code>repeated string names = 2;</code>
       */
      @java.lang.Override
      public int getNamesCount() {
        return instance.getNamesCount();
      }
      /**
       * <pre>
       * User names in the same order as ids.
       * </pre>
       *
       * <code>repeated string names = 2;</code>
       */
      @java.lang.Override
      public java.lang.String getNames(int index) {
        return instance.getNames(index);
      }
      /**
       * <pre>
       * User names in the same order as ids.
       * </pre>
       *
       * <code>repeated string names = 2;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNamesBytes(int index) {
        return instance.getNamesBytes(index);
      }
      /**
       * <pre>
       * User names in the same order as ids.
       * </pre>
       *
       * <code>repeated string names = 2;</code>
       */
      public Builder setNames(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setNames(index, value);
        return this;
      }
      /**
       * <pre>
       * User names in the same order as ids.
       * </pre>
       *
       * <code>repeated string names = 2;</code>
       */
      public Builder addNames(
          java.lang.String value) {
        copyOnWrite();
        instance.addNames(value);
        return this;
      }
      /**
       * <pre>
       * User names in the same order as ids.
       * </pre>
       *
       * <code>repeated string names = 2;</code>
       */
      public Builder addAllNames(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllNames(values);
        return this;
      }
      /**
       * <pre>
       * User names in the same order as ids.
       * </pre>
       *
       * <code>repeated string names = 2;</code>
       */
      public Builder clearNames() {
        copyOnWrite();
        instance.clearNames();
        return this;
      }
      /**
       * <pre>
       * User names in the same order as ids.
       * </pre>
       *
       * <code>repeated string names = 2;</code>
       */
      public Builder addNamesBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addNamesBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.QueryUsers)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.QueryUsers();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "ids_",
              "names_",
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0002\u0000\u0001\u001d\u0002\u001a" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.QueryUsers> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.QueryUsers.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.QueryUsers)
    private static final MumbleProto.Mumble.QueryUsers DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new QueryUsers();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        QueryUsers.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.QueryUsers getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<QueryUsers> PARSER;

    public static com.google.protobuf.Parser<QueryUsers> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CryptSetupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.CryptSetup)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Encryption key.
     * </pre>
     *
     * <code>optional bytes key = 1;</code>
     */
    boolean hasKey();
    /**
     * <pre>
     * Encryption key.
     * </pre>
     *
     * <code>optional bytes key = 1;</code>
     */
    com.google.protobuf.ByteString getKey();

    /**
     * <pre>
     * Client nonce.
     * </pre>
     *
     * <code>optional bytes client_nonce = 2;</code>
     */
    boolean hasClientNonce();
    /**
     * <pre>
     * Client nonce.
     * </pre>
     *
     * <code>optional bytes client_nonce = 2;</code>
     */
    com.google.protobuf.ByteString getClientNonce();

    /**
     * <pre>
     * Server nonce.
     * </pre>
     *
     * <code>optional bytes server_nonce = 3;</code>
     */
    boolean hasServerNonce();
    /**
     * <pre>
     * Server nonce.
     * </pre>
     *
     * <code>optional bytes server_nonce = 3;</code>
     */
    com.google.protobuf.ByteString getServerNonce();
  }
  /**
   * <pre>
   * Used to initialize and resync the UDP encryption. Either side may request a
   * resync by sending the message without any values filled. The resync is
   * performed by sending the message with only the client or server nonce
   * filled.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.CryptSetup}
   */
  public  static final class CryptSetup extends
      com.google.protobuf.GeneratedMessageLite<
          CryptSetup, CryptSetup.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.CryptSetup)
      CryptSetupOrBuilder {
    private CryptSetup() {
      key_ = com.google.protobuf.ByteString.EMPTY;
      clientNonce_ = com.google.protobuf.ByteString.EMPTY;
      serverNonce_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString key_;
    /**
     * <pre>
     * Encryption key.
     * </pre>
     *
     * <code>optional bytes key = 1;</code>
     */
    @java.lang.Override
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Encryption key.
     * </pre>
     *
     * <code>optional bytes key = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getKey() {
      return key_;
    }
    /**
     * <pre>
     * Encryption key.
     * </pre>
     *
     * <code>optional bytes key = 1;</code>
     */
    private void setKey(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      key_ = value;
    }
    /**
     * <pre>
     * Encryption key.
     * </pre>
     *
     * <code>optional bytes key = 1;</code>
     */
    private void clearKey() {
      bitField0_ = (bitField0_ & ~0x00000001);
      key_ = getDefaultInstance().getKey();
    }

    public static final int CLIENT_NONCE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString clientNonce_;
    /**
     * <pre>
     * Client nonce.
     * </pre>
     *
     * <code>optional bytes client_nonce = 2;</code>
     */
    @java.lang.Override
    public boolean hasClientNonce() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Client nonce.
     * </pre>
     *
     * <code>optional bytes client_nonce = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getClientNonce() {
      return clientNonce_;
    }
    /**
     * <pre>
     * Client nonce.
     * </pre>
     *
     * <code>optional bytes client_nonce = 2;</code>
     */
    private void setClientNonce(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      clientNonce_ = value;
    }
    /**
     * <pre>
     * Client nonce.
     * </pre>
     *
     * <code>optional bytes client_nonce = 2;</code>
     */
    private void clearClientNonce() {
      bitField0_ = (bitField0_ & ~0x00000002);
      clientNonce_ = getDefaultInstance().getClientNonce();
    }

    public static final int SERVER_NONCE_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString serverNonce_;
    /**
     * <pre>
     * Server nonce.
     * </pre>
     *
     * <code>optional bytes server_nonce = 3;</code>
     */
    @java.lang.Override
    public boolean hasServerNonce() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Server nonce.
     * </pre>
     *
     * <code>optional bytes server_nonce = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getServerNonce() {
      return serverNonce_;
    }
    /**
     * <pre>
     * Server nonce.
     * </pre>
     *
     * <code>optional bytes server_nonce = 3;</code>
     */
    private void setServerNonce(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      serverNonce_ = value;
    }
    /**
     * <pre>
     * Server nonce.
     * </pre>
     *
     * <code>optional bytes server_nonce = 3;</code>
     */
    private void clearServerNonce() {
      bitField0_ = (bitField0_ & ~0x00000004);
      serverNonce_ = getDefaultInstance().getServerNonce();
    }

    public static MumbleProto.Mumble.CryptSetup parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.CryptSetup parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.CryptSetup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.CryptSetup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.CryptSetup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.CryptSetup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.CryptSetup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.CryptSetup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.CryptSetup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.CryptSetup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.CryptSetup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.CryptSetup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.CryptSetup prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Used to initialize and resync the UDP encryption. Either side may request a
     * resync by sending the message without any values filled. The resync is
     * performed by sending the message with only the client or server nonce
     * filled.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.CryptSetup}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.CryptSetup, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.CryptSetup)
        MumbleProto.Mumble.CryptSetupOrBuilder {
      // Construct using MumbleProto.Mumble.CryptSetup.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Encryption key.
       * </pre>
       *
       * <code>optional bytes key = 1;</code>
       */
      @java.lang.Override
      public boolean hasKey() {
        return instance.hasKey();
      }
      /**
       * <pre>
       * Encryption key.
       * </pre>
       *
       * <code>optional bytes key = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getKey() {
        return instance.getKey();
      }
      /**
       * <pre>
       * Encryption key.
       * </pre>
       *
       * <code>optional bytes key = 1;</code>
       */
      public Builder setKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setKey(value);
        return this;
      }
      /**
       * <pre>
       * Encryption key.
       * </pre>
       *
       * <code>optional bytes key = 1;</code>
       */
      public Builder clearKey() {
        copyOnWrite();
        instance.clearKey();
        return this;
      }

      /**
       * <pre>
       * Client nonce.
       * </pre>
       *
       * <code>optional bytes client_nonce = 2;</code>
       */
      @java.lang.Override
      public boolean hasClientNonce() {
        return instance.hasClientNonce();
      }
      /**
       * <pre>
       * Client nonce.
       * </pre>
       *
       * <code>optional bytes client_nonce = 2;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getClientNonce() {
        return instance.getClientNonce();
      }
      /**
       * <pre>
       * Client nonce.
       * </pre>
       *
       * <code>optional bytes client_nonce = 2;</code>
       */
      public Builder setClientNonce(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setClientNonce(value);
        return this;
      }
      /**
       * <pre>
       * Client nonce.
       * </pre>
       *
       * <code>optional bytes client_nonce = 2;</code>
       */
      public Builder clearClientNonce() {
        copyOnWrite();
        instance.clearClientNonce();
        return this;
      }

      /**
       * <pre>
       * Server nonce.
       * </pre>
       *
       * <code>optional bytes server_nonce = 3;</code>
       */
      @java.lang.Override
      public boolean hasServerNonce() {
        return instance.hasServerNonce();
      }
      /**
       * <pre>
       * Server nonce.
       * </pre>
       *
       * <code>optional bytes server_nonce = 3;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getServerNonce() {
        return instance.getServerNonce();
      }
      /**
       * <pre>
       * Server nonce.
       * </pre>
       *
       * <code>optional bytes server_nonce = 3;</code>
       */
      public Builder setServerNonce(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setServerNonce(value);
        return this;
      }
      /**
       * <pre>
       * Server nonce.
       * </pre>
       *
       * <code>optional bytes server_nonce = 3;</code>
       */
      public Builder clearServerNonce() {
        copyOnWrite();
        instance.clearServerNonce();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.CryptSetup)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.CryptSetup();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "key_",
              "clientNonce_",
              "serverNonce_",
            };
            java.lang.String info =
                "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\n\u0000\u0002" +
                "\n\u0001\u0003\n\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.CryptSetup> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.CryptSetup.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.CryptSetup)
    private static final MumbleProto.Mumble.CryptSetup DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new CryptSetup();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        CryptSetup.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.CryptSetup getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CryptSetup> PARSER;

    public static com.google.protobuf.Parser<CryptSetup> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ContextActionModifyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.ContextActionModify)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The action name.
     * </pre>
     *
     * <code>required string action = 1;</code>
     */
    boolean hasAction();
    /**
     * <pre>
     * The action name.
     * </pre>
     *
     * <code>required string action = 1;</code>
     */
    java.lang.String getAction();
    /**
     * <pre>
     * The action name.
     * </pre>
     *
     * <code>required string action = 1;</code>
     */
    com.google.protobuf.ByteString
        getActionBytes();

    /**
     * <pre>
     * The display name of the action.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     */
    boolean hasText();
    /**
     * <pre>
     * The display name of the action.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     */
    java.lang.String getText();
    /**
     * <pre>
     * The display name of the action.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     */
    com.google.protobuf.ByteString
        getTextBytes();

    /**
     * <pre>
     * Context bit flags defining where the action should be displayed.
     * </pre>
     *
     * <code>optional uint32 context = 3;</code>
     */
    boolean hasContext();
    /**
     * <pre>
     * Context bit flags defining where the action should be displayed.
     * </pre>
     *
     * <code>optional uint32 context = 3;</code>
     */
    int getContext();

    /**
     * <code>optional .MumbleProto.ContextActionModify.Operation operation = 4;</code>
     */
    boolean hasOperation();
    /**
     * <code>optional .MumbleProto.ContextActionModify.Operation operation = 4;</code>
     */
    MumbleProto.Mumble.ContextActionModify.Operation getOperation();
  }
  /**
   * Protobuf type {@code MumbleProto.ContextActionModify}
   */
  public  static final class ContextActionModify extends
      com.google.protobuf.GeneratedMessageLite<
          ContextActionModify, ContextActionModify.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.ContextActionModify)
      ContextActionModifyOrBuilder {
    private ContextActionModify() {
      action_ = "";
      text_ = "";
    }
    /**
     * Protobuf enum {@code MumbleProto.ContextActionModify.Context}
     */
    public enum Context
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * Action is applicable to the server.
       * </pre>
       *
       * <code>Server = 1;</code>
       */
      Server(1),
      /**
       * <pre>
       * Action can target a Channel.
       * </pre>
       *
       * <code>Channel = 2;</code>
       */
      Channel(2),
      /**
       * <pre>
       * Action can target a User.
       * </pre>
       *
       * <code>User = 4;</code>
       */
      User(4),
      ;

      /**
       * <pre>
       * Action is applicable to the server.
       * </pre>
       *
       * <code>Server = 1;</code>
       */
      public static final int Server_VALUE = 1;
      /**
       * <pre>
       * Action can target a Channel.
       * </pre>
       *
       * <code>Channel = 2;</code>
       */
      public static final int Channel_VALUE = 2;
      /**
       * <pre>
       * Action can target a User.
       * </pre>
       *
       * <code>User = 4;</code>
       */
      public static final int User_VALUE = 4;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Context valueOf(int value) {
        return forNumber(value);
      }

      public static Context forNumber(int value) {
        switch (value) {
          case 1: return Server;
          case 2: return Channel;
          case 4: return User;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Context>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Context> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Context>() {
              @java.lang.Override
              public Context findValueByNumber(int number) {
                return Context.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return ContextVerifier.INSTANCE;
      }

      private static final class ContextVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ContextVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return Context.forNumber(number) != null;
              }
            };

      private final int value;

      private Context(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:MumbleProto.ContextActionModify.Context)
    }

    /**
     * Protobuf enum {@code MumbleProto.ContextActionModify.Operation}
     */
    public enum Operation
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>Add = 0;</code>
       */
      Add(0),
      /**
       * <code>Remove = 1;</code>
       */
      Remove(1),
      ;

      /**
       * <code>Add = 0;</code>
       */
      public static final int Add_VALUE = 0;
      /**
       * <code>Remove = 1;</code>
       */
      public static final int Remove_VALUE = 1;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Operation valueOf(int value) {
        return forNumber(value);
      }

      public static Operation forNumber(int value) {
        switch (value) {
          case 0: return Add;
          case 1: return Remove;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Operation>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Operation> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Operation>() {
              @java.lang.Override
              public Operation findValueByNumber(int number) {
                return Operation.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return OperationVerifier.INSTANCE;
      }

      private static final class OperationVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new OperationVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return Operation.forNumber(number) != null;
              }
            };

      private final int value;

      private Operation(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:MumbleProto.ContextActionModify.Operation)
    }

    private int bitField0_;
    public static final int ACTION_FIELD_NUMBER = 1;
    private java.lang.String action_;
    /**
     * <pre>
     * The action name.
     * </pre>
     *
     * <code>required string action = 1;</code>
     */
    @java.lang.Override
    public boolean hasAction() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The action name.
     * </pre>
     *
     * <code>required string action = 1;</code>
     */
    @java.lang.Override
    public java.lang.String getAction() {
      return action_;
    }
    /**
     * <pre>
     * The action name.
     * </pre>
     *
     * <code>required string action = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getActionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(action_);
    }
    /**
     * <pre>
     * The action name.
     * </pre>
     *
     * <code>required string action = 1;</code>
     */
    private void setAction(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      action_ = value;
    }
    /**
     * <pre>
     * The action name.
     * </pre>
     *
     * <code>required string action = 1;</code>
     */
    private void clearAction() {
      bitField0_ = (bitField0_ & ~0x00000001);
      action_ = getDefaultInstance().getAction();
    }
    /**
     * <pre>
     * The action name.
     * </pre>
     *
     * <code>required string action = 1;</code>
     */
    private void setActionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      action_ = value.toStringUtf8();
    }

    public static final int TEXT_FIELD_NUMBER = 2;
    private java.lang.String text_;
    /**
     * <pre>
     * The display name of the action.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     */
    @java.lang.Override
    public boolean hasText() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The display name of the action.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     */
    @java.lang.Override
    public java.lang.String getText() {
      return text_;
    }
    /**
     * <pre>
     * The display name of the action.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTextBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(text_);
    }
    /**
     * <pre>
     * The display name of the action.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     */
    private void setText(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      text_ = value;
    }
    /**
     * <pre>
     * The display name of the action.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     */
    private void clearText() {
      bitField0_ = (bitField0_ & ~0x00000002);
      text_ = getDefaultInstance().getText();
    }
    /**
     * <pre>
     * The display name of the action.
     * </pre>
     *
     * <code>optional string text = 2;</code>
     */
    private void setTextBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      text_ = value.toStringUtf8();
    }

    public static final int CONTEXT_FIELD_NUMBER = 3;
    private int context_;
    /**
     * <pre>
     * Context bit flags defining where the action should be displayed.
     * </pre>
     *
     * <code>optional uint32 context = 3;</code>
     */
    @java.lang.Override
    public boolean hasContext() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Context bit flags defining where the action should be displayed.
     * </pre>
     *
     * <code>optional uint32 context = 3;</code>
     */
    @java.lang.Override
    public int getContext() {
      return context_;
    }
    /**
     * <pre>
     * Context bit flags defining where the action should be displayed.
     * </pre>
     *
     * <code>optional uint32 context = 3;</code>
     */
    private void setContext(int value) {
      bitField0_ |= 0x00000004;
      context_ = value;
    }
    /**
     * <pre>
     * Context bit flags defining where the action should be displayed.
     * </pre>
     *
     * <code>optional uint32 context = 3;</code>
     */
    private void clearContext() {
      bitField0_ = (bitField0_ & ~0x00000004);
      context_ = 0;
    }

    public static final int OPERATION_FIELD_NUMBER = 4;
    private int operation_;
    /**
     * <code>optional .MumbleProto.ContextActionModify.Operation operation = 4;</code>
     */
    @java.lang.Override
    public boolean hasOperation() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional .MumbleProto.ContextActionModify.Operation operation = 4;</code>
     */
    @java.lang.Override
    public MumbleProto.Mumble.ContextActionModify.Operation getOperation() {
      MumbleProto.Mumble.ContextActionModify.Operation result = MumbleProto.Mumble.ContextActionModify.Operation.forNumber(operation_);
      return result == null ? MumbleProto.Mumble.ContextActionModify.Operation.Add : result;
    }
    /**
     * <code>optional .MumbleProto.ContextActionModify.Operation operation = 4;</code>
     */
    private void setOperation(MumbleProto.Mumble.ContextActionModify.Operation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      operation_ = value.getNumber();
    }
    /**
     * <code>optional .MumbleProto.ContextActionModify.Operation operation = 4;</code>
     */
    private void clearOperation() {
      bitField0_ = (bitField0_ & ~0x00000008);
      operation_ = 0;
    }

    public static MumbleProto.Mumble.ContextActionModify parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ContextActionModify parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ContextActionModify parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ContextActionModify parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ContextActionModify parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ContextActionModify parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ContextActionModify parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ContextActionModify parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.ContextActionModify parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ContextActionModify parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.ContextActionModify parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ContextActionModify parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.ContextActionModify prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code MumbleProto.ContextActionModify}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.ContextActionModify, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.ContextActionModify)
        MumbleProto.Mumble.ContextActionModifyOrBuilder {
      // Construct using MumbleProto.Mumble.ContextActionModify.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The action name.
       * </pre>
       *
       * <code>required string action = 1;</code>
       */
      @java.lang.Override
      public boolean hasAction() {
        return instance.hasAction();
      }
      /**
       * <pre>
       * The action name.
       * </pre>
       *
       * <code>required string action = 1;</code>
       */
      @java.lang.Override
      public java.lang.String getAction() {
        return instance.getAction();
      }
      /**
       * <pre>
       * The action name.
       * </pre>
       *
       * <code>required string action = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getActionBytes() {
        return instance.getActionBytes();
      }
      /**
       * <pre>
       * The action name.
       * </pre>
       *
       * <code>required string action = 1;</code>
       */
      public Builder setAction(
          java.lang.String value) {
        copyOnWrite();
        instance.setAction(value);
        return this;
      }
      /**
       * <pre>
       * The action name.
       * </pre>
       *
       * <code>required string action = 1;</code>
       */
      public Builder clearAction() {
        copyOnWrite();
        instance.clearAction();
        return this;
      }
      /**
       * <pre>
       * The action name.
       * </pre>
       *
       * <code>required string action = 1;</code>
       */
      public Builder setActionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setActionBytes(value);
        return this;
      }

      /**
       * <pre>
       * The display name of the action.
       * </pre>
       *
       * <code>optional string text = 2;</code>
       */
      @java.lang.Override
      public boolean hasText() {
        return instance.hasText();
      }
      /**
       * <pre>
       * The display name of the action.
       * </pre>
       *
       * <code>optional string text = 2;</code>
       */
      @java.lang.Override
      public java.lang.String getText() {
        return instance.getText();
      }
      /**
       * <pre>
       * The display name of the action.
       * </pre>
       *
       * <code>optional string text = 2;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTextBytes() {
        return instance.getTextBytes();
      }
      /**
       * <pre>
       * The display name of the action.
       * </pre>
       *
       * <code>optional string text = 2;</code>
       */
      public Builder setText(
          java.lang.String value) {
        copyOnWrite();
        instance.setText(value);
        return this;
      }
      /**
       * <pre>
       * The display name of the action.
       * </pre>
       *
       * <code>optional string text = 2;</code>
       */
      public Builder clearText() {
        copyOnWrite();
        instance.clearText();
        return this;
      }
      /**
       * <pre>
       * The display name of the action.
       * </pre>
       *
       * <code>optional string text = 2;</code>
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTextBytes(value);
        return this;
      }

      /**
       * <pre>
       * Context bit flags defining where the action should be displayed.
       * </pre>
       *
       * <code>optional uint32 context = 3;</code>
       */
      @java.lang.Override
      public boolean hasContext() {
        return instance.hasContext();
      }
      /**
       * <pre>
       * Context bit flags defining where the action should be displayed.
       * </pre>
       *
       * <code>optional uint32 context = 3;</code>
       */
      @java.lang.Override
      public int getContext() {
        return instance.getContext();
      }
      /**
       * <pre>
       * Context bit flags defining where the action should be displayed.
       * </pre>
       *
       * <code>optional uint32 context = 3;</code>
       */
      public Builder setContext(int value) {
        copyOnWrite();
        instance.setContext(value);
        return this;
      }
      /**
       * <pre>
       * Context bit flags defining where the action should be displayed.
       * </pre>
       *
       * <code>optional uint32 context = 3;</code>
       */
      public Builder clearContext() {
        copyOnWrite();
        instance.clearContext();
        return this;
      }

      /**
       * <code>optional .MumbleProto.ContextActionModify.Operation operation = 4;</code>
       */
      @java.lang.Override
      public boolean hasOperation() {
        return instance.hasOperation();
      }
      /**
       * <code>optional .MumbleProto.ContextActionModify.Operation operation = 4;</code>
       */
      @java.lang.Override
      public MumbleProto.Mumble.ContextActionModify.Operation getOperation() {
        return instance.getOperation();
      }
      /**
       * <code>optional .MumbleProto.ContextActionModify.Operation operation = 4;</code>
       */
      public Builder setOperation(MumbleProto.Mumble.ContextActionModify.Operation value) {
        copyOnWrite();
        instance.setOperation(value);
        return this;
      }
      /**
       * <code>optional .MumbleProto.ContextActionModify.Operation operation = 4;</code>
       */
      public Builder clearOperation() {
        copyOnWrite();
        instance.clearOperation();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.ContextActionModify)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.ContextActionModify();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "action_",
              "text_",
              "context_",
              "operation_",
              MumbleProto.Mumble.ContextActionModify.Operation.internalGetVerifier(),
            };
            java.lang.String info =
                "\u0001\u0004\u0000\u0001\u0001\u0004\u0004\u0000\u0000\u0001\u0001\u0508\u0000\u0002" +
                "\b\u0001\u0003\u000b\u0002\u0004\f\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.ContextActionModify> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.ContextActionModify.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.ContextActionModify)
    private static final MumbleProto.Mumble.ContextActionModify DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new ContextActionModify();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ContextActionModify.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.ContextActionModify getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ContextActionModify> PARSER;

    public static com.google.protobuf.Parser<ContextActionModify> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ContextActionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.ContextAction)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The target User for the action, identified by session.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    boolean hasSession();
    /**
     * <pre>
     * The target User for the action, identified by session.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    int getSession();

    /**
     * <pre>
     * The target Channel for the action, identified by channel_id.
     * </pre>
     *
     * <code>optional uint32 channel_id = 2;</code>
     */
    boolean hasChannelId();
    /**
     * <pre>
     * The target Channel for the action, identified by channel_id.
     * </pre>
     *
     * <code>optional uint32 channel_id = 2;</code>
     */
    int getChannelId();

    /**
     * <pre>
     * The action that should be executed.
     * </pre>
     *
     * <code>required string action = 3;</code>
     */
    boolean hasAction();
    /**
     * <pre>
     * The action that should be executed.
     * </pre>
     *
     * <code>required string action = 3;</code>
     */
    java.lang.String getAction();
    /**
     * <pre>
     * The action that should be executed.
     * </pre>
     *
     * <code>required string action = 3;</code>
     */
    com.google.protobuf.ByteString
        getActionBytes();
  }
  /**
   * <pre>
   * Sent by the client when it wants to initiate a Context action.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.ContextAction}
   */
  public  static final class ContextAction extends
      com.google.protobuf.GeneratedMessageLite<
          ContextAction, ContextAction.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.ContextAction)
      ContextActionOrBuilder {
    private ContextAction() {
      action_ = "";
    }
    private int bitField0_;
    public static final int SESSION_FIELD_NUMBER = 1;
    private int session_;
    /**
     * <pre>
     * The target User for the action, identified by session.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    @java.lang.Override
    public boolean hasSession() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The target User for the action, identified by session.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    @java.lang.Override
    public int getSession() {
      return session_;
    }
    /**
     * <pre>
     * The target User for the action, identified by session.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    private void setSession(int value) {
      bitField0_ |= 0x00000001;
      session_ = value;
    }
    /**
     * <pre>
     * The target User for the action, identified by session.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    private void clearSession() {
      bitField0_ = (bitField0_ & ~0x00000001);
      session_ = 0;
    }

    public static final int CHANNEL_ID_FIELD_NUMBER = 2;
    private int channelId_;
    /**
     * <pre>
     * The target Channel for the action, identified by channel_id.
     * </pre>
     *
     * <code>optional uint32 channel_id = 2;</code>
     */
    @java.lang.Override
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The target Channel for the action, identified by channel_id.
     * </pre>
     *
     * <code>optional uint32 channel_id = 2;</code>
     */
    @java.lang.Override
    public int getChannelId() {
      return channelId_;
    }
    /**
     * <pre>
     * The target Channel for the action, identified by channel_id.
     * </pre>
     *
     * <code>optional uint32 channel_id = 2;</code>
     */
    private void setChannelId(int value) {
      bitField0_ |= 0x00000002;
      channelId_ = value;
    }
    /**
     * <pre>
     * The target Channel for the action, identified by channel_id.
     * </pre>
     *
     * <code>optional uint32 channel_id = 2;</code>
     */
    private void clearChannelId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      channelId_ = 0;
    }

    public static final int ACTION_FIELD_NUMBER = 3;
    private java.lang.String action_;
    /**
     * <pre>
     * The action that should be executed.
     * </pre>
     *
     * <code>required string action = 3;</code>
     */
    @java.lang.Override
    public boolean hasAction() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The action that should be executed.
     * </pre>
     *
     * <code>required string action = 3;</code>
     */
    @java.lang.Override
    public java.lang.String getAction() {
      return action_;
    }
    /**
     * <pre>
     * The action that should be executed.
     * </pre>
     *
     * <code>required string action = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getActionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(action_);
    }
    /**
     * <pre>
     * The action that should be executed.
     * </pre>
     *
     * <code>required string action = 3;</code>
     */
    private void setAction(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      action_ = value;
    }
    /**
     * <pre>
     * The action that should be executed.
     * </pre>
     *
     * <code>required string action = 3;</code>
     */
    private void clearAction() {
      bitField0_ = (bitField0_ & ~0x00000004);
      action_ = getDefaultInstance().getAction();
    }
    /**
     * <pre>
     * The action that should be executed.
     * </pre>
     *
     * <code>required string action = 3;</code>
     */
    private void setActionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      action_ = value.toStringUtf8();
    }

    public static MumbleProto.Mumble.ContextAction parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ContextAction parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ContextAction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ContextAction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ContextAction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ContextAction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ContextAction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ContextAction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.ContextAction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ContextAction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.ContextAction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ContextAction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.ContextAction prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Sent by the client when it wants to initiate a Context action.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.ContextAction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.ContextAction, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.ContextAction)
        MumbleProto.Mumble.ContextActionOrBuilder {
      // Construct using MumbleProto.Mumble.ContextAction.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The target User for the action, identified by session.
       * </pre>
       *
       * <code>optional uint32 session = 1;</code>
       */
      @java.lang.Override
      public boolean hasSession() {
        return instance.hasSession();
      }
      /**
       * <pre>
       * The target User for the action, identified by session.
       * </pre>
       *
       * <code>optional uint32 session = 1;</code>
       */
      @java.lang.Override
      public int getSession() {
        return instance.getSession();
      }
      /**
       * <pre>
       * The target User for the action, identified by session.
       * </pre>
       *
       * <code>optional uint32 session = 1;</code>
       */
      public Builder setSession(int value) {
        copyOnWrite();
        instance.setSession(value);
        return this;
      }
      /**
       * <pre>
       * The target User for the action, identified by session.
       * </pre>
       *
       * <code>optional uint32 session = 1;</code>
       */
      public Builder clearSession() {
        copyOnWrite();
        instance.clearSession();
        return this;
      }

      /**
       * <pre>
       * The target Channel for the action, identified by channel_id.
       * </pre>
       *
       * <code>optional uint32 channel_id = 2;</code>
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return instance.hasChannelId();
      }
      /**
       * <pre>
       * The target Channel for the action, identified by channel_id.
       * </pre>
       *
       * <code>optional uint32 channel_id = 2;</code>
       */
      @java.lang.Override
      public int getChannelId() {
        return instance.getChannelId();
      }
      /**
       * <pre>
       * The target Channel for the action, identified by channel_id.
       * </pre>
       *
       * <code>optional uint32 channel_id = 2;</code>
       */
      public Builder setChannelId(int value) {
        copyOnWrite();
        instance.setChannelId(value);
        return this;
      }
      /**
       * <pre>
       * The target Channel for the action, identified by channel_id.
       * </pre>
       *
       * <code>optional uint32 channel_id = 2;</code>
       */
      public Builder clearChannelId() {
        copyOnWrite();
        instance.clearChannelId();
        return this;
      }

      /**
       * <pre>
       * The action that should be executed.
       * </pre>
       *
       * <code>required string action = 3;</code>
       */
      @java.lang.Override
      public boolean hasAction() {
        return instance.hasAction();
      }
      /**
       * <pre>
       * The action that should be executed.
       * </pre>
       *
       * <code>required string action = 3;</code>
       */
      @java.lang.Override
      public java.lang.String getAction() {
        return instance.getAction();
      }
      /**
       * <pre>
       * The action that should be executed.
       * </pre>
       *
       * <code>required string action = 3;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getActionBytes() {
        return instance.getActionBytes();
      }
      /**
       * <pre>
       * The action that should be executed.
       * </pre>
       *
       * <code>required string action = 3;</code>
       */
      public Builder setAction(
          java.lang.String value) {
        copyOnWrite();
        instance.setAction(value);
        return this;
      }
      /**
       * <pre>
       * The action that should be executed.
       * </pre>
       *
       * <code>required string action = 3;</code>
       */
      public Builder clearAction() {
        copyOnWrite();
        instance.clearAction();
        return this;
      }
      /**
       * <pre>
       * The action that should be executed.
       * </pre>
       *
       * <code>required string action = 3;</code>
       */
      public Builder setActionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setActionBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.ContextAction)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.ContextAction();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "session_",
              "channelId_",
              "action_",
            };
            java.lang.String info =
                "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0001\u0001\u000b\u0000\u0002" +
                "\u000b\u0001\u0003\u0508\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.ContextAction> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.ContextAction.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.ContextAction)
    private static final MumbleProto.Mumble.ContextAction DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new ContextAction();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ContextAction.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.ContextAction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ContextAction> PARSER;

    public static com.google.protobuf.Parser<ContextAction> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface UserListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.UserList)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * A list of registered users.
     * </pre>
     *
     * <code>repeated .MumbleProto.UserList.User users = 1;</code>
     */
    java.util.List<MumbleProto.Mumble.UserList.User> 
        getUsersList();
    /**
     * <pre>
     * A list of registered users.
     * </pre>
     *
     * <code>repeated .MumbleProto.UserList.User users = 1;</code>
     */
    MumbleProto.Mumble.UserList.User getUsers(int index);
    /**
     * <pre>
     * A list of registered users.
     * </pre>
     *
     * <code>repeated .MumbleProto.UserList.User users = 1;</code>
     */
    int getUsersCount();
  }
  /**
   * <pre>
   * Lists the registered users.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.UserList}
   */
  public  static final class UserList extends
      com.google.protobuf.GeneratedMessageLite<
          UserList, UserList.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.UserList)
      UserListOrBuilder {
    private UserList() {
      users_ = emptyProtobufList();
    }
    public interface UserOrBuilder extends
        // @@protoc_insertion_point(interface_extends:MumbleProto.UserList.User)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * Registered user ID.
       * </pre>
       *
       * <code>required uint32 user_id = 1;</code>
       */
      boolean hasUserId();
      /**
       * <pre>
       * Registered user ID.
       * </pre>
       *
       * <code>required uint32 user_id = 1;</code>
       */
      int getUserId();

      /**
       * <pre>
       * Registered user name.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      boolean hasName();
      /**
       * <pre>
       * Registered user name.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      java.lang.String getName();
      /**
       * <pre>
       * Registered user name.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>optional string last_seen = 3;</code>
       */
      boolean hasLastSeen();
      /**
       * <code>optional string last_seen = 3;</code>
       */
      java.lang.String getLastSeen();
      /**
       * <code>optional string last_seen = 3;</code>
       */
      com.google.protobuf.ByteString
          getLastSeenBytes();

      /**
       * <code>optional uint32 last_channel = 4;</code>
       */
      boolean hasLastChannel();
      /**
       * <code>optional uint32 last_channel = 4;</code>
       */
      int getLastChannel();
    }
    /**
     * Protobuf type {@code MumbleProto.UserList.User}
     */
    public  static final class User extends
        com.google.protobuf.GeneratedMessageLite<
            User, User.Builder> implements
        // @@protoc_insertion_point(message_implements:MumbleProto.UserList.User)
        UserOrBuilder {
      private User() {
        name_ = "";
        lastSeen_ = "";
      }
      private int bitField0_;
      public static final int USER_ID_FIELD_NUMBER = 1;
      private int userId_;
      /**
       * <pre>
       * Registered user ID.
       * </pre>
       *
       * <code>required uint32 user_id = 1;</code>
       */
      @java.lang.Override
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Registered user ID.
       * </pre>
       *
       * <code>required uint32 user_id = 1;</code>
       */
      @java.lang.Override
      public int getUserId() {
        return userId_;
      }
      /**
       * <pre>
       * Registered user ID.
       * </pre>
       *
       * <code>required uint32 user_id = 1;</code>
       */
      private void setUserId(int value) {
        bitField0_ |= 0x00000001;
        userId_ = value;
      }
      /**
       * <pre>
       * Registered user ID.
       * </pre>
       *
       * <code>required uint32 user_id = 1;</code>
       */
      private void clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = 0;
      }

      public static final int NAME_FIELD_NUMBER = 2;
      private java.lang.String name_;
      /**
       * <pre>
       * Registered user name.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Registered user name.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      @java.lang.Override
      public java.lang.String getName() {
        return name_;
      }
      /**
       * <pre>
       * Registered user name.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(name_);
      }
      /**
       * <pre>
       * Registered user name.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      private void setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
      }
      /**
       * <pre>
       * Registered user name.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      private void clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
      }
      /**
       * <pre>
       * Registered user name.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      private void setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value.toStringUtf8();
      }

      public static final int LAST_SEEN_FIELD_NUMBER = 3;
      private java.lang.String lastSeen_;
      /**
       * <code>optional string last_seen = 3;</code>
       */
      @java.lang.Override
      public boolean hasLastSeen() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string last_seen = 3;</code>
       */
      @java.lang.Override
      public java.lang.String getLastSeen() {
        return lastSeen_;
      }
      /**
       * <code>optional string last_seen = 3;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getLastSeenBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(lastSeen_);
      }
      /**
       * <code>optional string last_seen = 3;</code>
       */
      private void setLastSeen(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        lastSeen_ = value;
      }
      /**
       * <code>optional string last_seen = 3;</code>
       */
      private void clearLastSeen() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lastSeen_ = getDefaultInstance().getLastSeen();
      }
      /**
       * <code>optional string last_seen = 3;</code>
       */
      private void setLastSeenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        lastSeen_ = value.toStringUtf8();
      }

      public static final int LAST_CHANNEL_FIELD_NUMBER = 4;
      private int lastChannel_;
      /**
       * <code>optional uint32 last_channel = 4;</code>
       */
      @java.lang.Override
      public boolean hasLastChannel() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 last_channel = 4;</code>
       */
      @java.lang.Override
      public int getLastChannel() {
        return lastChannel_;
      }
      /**
       * <code>optional uint32 last_channel = 4;</code>
       */
      private void setLastChannel(int value) {
        bitField0_ |= 0x00000008;
        lastChannel_ = value;
      }
      /**
       * <code>optional uint32 last_channel = 4;</code>
       */
      private void clearLastChannel() {
        bitField0_ = (bitField0_ & ~0x00000008);
        lastChannel_ = 0;
      }

      public static MumbleProto.Mumble.UserList.User parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static MumbleProto.Mumble.UserList.User parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static MumbleProto.Mumble.UserList.User parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static MumbleProto.Mumble.UserList.User parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static MumbleProto.Mumble.UserList.User parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static MumbleProto.Mumble.UserList.User parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static MumbleProto.Mumble.UserList.User parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static MumbleProto.Mumble.UserList.User parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static MumbleProto.Mumble.UserList.User parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static MumbleProto.Mumble.UserList.User parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static MumbleProto.Mumble.UserList.User parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static MumbleProto.Mumble.UserList.User parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(MumbleProto.Mumble.UserList.User prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * Protobuf type {@code MumbleProto.UserList.User}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            MumbleProto.Mumble.UserList.User, Builder> implements
          // @@protoc_insertion_point(builder_implements:MumbleProto.UserList.User)
          MumbleProto.Mumble.UserList.UserOrBuilder {
        // Construct using MumbleProto.Mumble.UserList.User.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * Registered user ID.
         * </pre>
         *
         * <code>required uint32 user_id = 1;</code>
         */
        @java.lang.Override
        public boolean hasUserId() {
          return instance.hasUserId();
        }
        /**
         * <pre>
         * Registered user ID.
         * </pre>
         *
         * <code>required uint32 user_id = 1;</code>
         */
        @java.lang.Override
        public int getUserId() {
          return instance.getUserId();
        }
        /**
         * <pre>
         * Registered user ID.
         * </pre>
         *
         * <code>required uint32 user_id = 1;</code>
         */
        public Builder setUserId(int value) {
          copyOnWrite();
          instance.setUserId(value);
          return this;
        }
        /**
         * <pre>
         * Registered user ID.
         * </pre>
         *
         * <code>required uint32 user_id = 1;</code>
         */
        public Builder clearUserId() {
          copyOnWrite();
          instance.clearUserId();
          return this;
        }

        /**
         * <pre>
         * Registered user name.
         * </pre>
         *
         * <code>optional string name = 2;</code>
         */
        @java.lang.Override
        public boolean hasName() {
          return instance.hasName();
        }
        /**
         * <pre>
         * Registered user name.
         * </pre>
         *
         * <code>optional string name = 2;</code>
         */
        @java.lang.Override
        public java.lang.String getName() {
          return instance.getName();
        }
        /**
         * <pre>
         * Registered user name.
         * </pre>
         *
         * <code>optional string name = 2;</code>
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getNameBytes() {
          return instance.getNameBytes();
        }
        /**
         * <pre>
         * Registered user name.
         * </pre>
         *
         * <code>optional string name = 2;</code>
         */
        public Builder setName(
            java.lang.String value) {
          copyOnWrite();
          instance.setName(value);
          return this;
        }
        /**
         * <pre>
         * Registered user name.
         * </pre>
         *
         * <code>optional string name = 2;</code>
         */
        public Builder clearName() {
          copyOnWrite();
          instance.clearName();
          return this;
        }
        /**
         * <pre>
         * Registered user name.
         * </pre>
         *
         * <code>optional string name = 2;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setNameBytes(value);
          return this;
        }

        /**
         * <code>optional string last_seen = 3;</code>
         */
        @java.lang.Override
        public boolean hasLastSeen() {
          return instance.hasLastSeen();
        }
        /**
         * <code>optional string last_seen = 3;</code>
         */
        @java.lang.Override
        public java.lang.String getLastSeen() {
          return instance.getLastSeen();
        }
        /**
         * <code>optional string last_seen = 3;</code>
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getLastSeenBytes() {
          return instance.getLastSeenBytes();
        }
        /**
         * <code>optional string last_seen = 3;</code>
         */
        public Builder setLastSeen(
            java.lang.String value) {
          copyOnWrite();
          instance.setLastSeen(value);
          return this;
        }
        /**
         * <code>optional string last_seen = 3;</code>
         */
        public Builder clearLastSeen() {
          copyOnWrite();
          instance.clearLastSeen();
          return this;
        }
        /**
         * <code>optional string last_seen = 3;</code>
         */
        public Builder setLastSeenBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setLastSeenBytes(value);
          return this;
        }

        /**
         * <code>optional uint32 last_channel = 4;</code>
         */
        @java.lang.Override
        public boolean hasLastChannel() {
          return instance.hasLastChannel();
        }
        /**
         * <code>optional uint32 last_channel = 4;</code>
         */
        @java.lang.Override
        public int getLastChannel() {
          return instance.getLastChannel();
        }
        /**
         * <code>optional uint32 last_channel = 4;</code>
         */
        public Builder setLastChannel(int value) {
          copyOnWrite();
          instance.setLastChannel(value);
          return this;
        }
        /**
         * <code>optional uint32 last_channel = 4;</code>
         */
        public Builder clearLastChannel() {
          copyOnWrite();
          instance.clearLastChannel();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:MumbleProto.UserList.User)
      }
      private byte memoizedIsInitialized = 2;
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new MumbleProto.Mumble.UserList.User();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "bitField0_",
                "userId_",
                "name_",
                "lastSeen_",
                "lastChannel_",
              };
              java.lang.String info =
                  "\u0001\u0004\u0000\u0001\u0001\u0004\u0004\u0000\u0000\u0001\u0001\u050b\u0000\u0002" +
                  "\b\u0001\u0003\b\u0002\u0004\u000b\u0003";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<MumbleProto.Mumble.UserList.User> parser = PARSER;
            if (parser == null) {
              synchronized (MumbleProto.Mumble.UserList.User.class) {
                parser = PARSER;
                if (parser == null) {
                  parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return memoizedIsInitialized;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:MumbleProto.UserList.User)
      private static final MumbleProto.Mumble.UserList.User DEFAULT_INSTANCE;
      static {
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = new User();
      }

      static {
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          User.class, DEFAULT_INSTANCE);
      }
      public static MumbleProto.Mumble.UserList.User getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<User> PARSER;

      public static com.google.protobuf.Parser<User> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public static final int USERS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<MumbleProto.Mumble.UserList.User> users_;
    /**
     * <pre>
     * A list of registered users.
     * </pre>
     *
     * <code>repeated .MumbleProto.UserList.User users = 1;</code>
     */
    @java.lang.Override
    public java.util.List<MumbleProto.Mumble.UserList.User> getUsersList() {
      return users_;
    }
    /**
     * <pre>
     * A list of registered users.
     * </pre>
     *
     * <code>repeated .MumbleProto.UserList.User users = 1;</code>
     */
    public java.util.List<? extends MumbleProto.Mumble.UserList.UserOrBuilder> 
        getUsersOrBuilderList() {
      return users_;
    }
    /**
     * <pre>
     * A list of registered users.
     * </pre>
     *
     * <code>repeated .MumbleProto.UserList.User users = 1;</code>
     */
    @java.lang.Override
    public int getUsersCount() {
      return users_.size();
    }
    /**
     * <pre>
     * A list of registered users.
     * </pre>
     *
     * <code>repeated .MumbleProto.UserList.User users = 1;</code>
     */
    @java.lang.Override
    public MumbleProto.Mumble.UserList.User getUsers(int index) {
      return users_.get(index);
    }
    /**
     * <pre>
     * A list of registered users.
     * </pre>
     *
     * <code>repeated .MumbleProto.UserList.User users = 1;</code>
     */
    public MumbleProto.Mumble.UserList.UserOrBuilder getUsersOrBuilder(
        int index) {
      return users_.get(index);
    }
    private void ensureUsersIsMutable() {
      if (!users_.isModifiable()) {
        users_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(users_);
       }
    }

    /**
     * <pre>
     * A list of registered users.
     * </pre>
     *
     * <code>repeated .MumbleProto.UserList.User users = 1;</code>
     */
    private void setUsers(
        int index, MumbleProto.Mumble.UserList.User value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUsersIsMutable();
      users_.set(index, value);
    }
    /**
     * <pre>
     * A list of registered users.
     * </pre>
     *
     * <code>repeated .MumbleProto.UserList.User users = 1;</code>
     */
    private void setUsers(
        int index, MumbleProto.Mumble.UserList.User.Builder builderForValue) {
      ensureUsersIsMutable();
      users_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * A list of registered users.
     * </pre>
     *
     * <code>repeated .MumbleProto.UserList.User users = 1;</code>
     */
    private void addUsers(MumbleProto.Mumble.UserList.User value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUsersIsMutable();
      users_.add(value);
    }
    /**
     * <pre>
     * A list of registered users.
     * </pre>
     *
     * <code>repeated .MumbleProto.UserList.User users = 1;</code>
     */
    private void addUsers(
        int index, MumbleProto.Mumble.UserList.User value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUsersIsMutable();
      users_.add(index, value);
    }
    /**
     * <pre>
     * A list of registered users.
     * </pre>
     *
     * <code>repeated .MumbleProto.UserList.User users = 1;</code>
     */
    private void addUsers(
        MumbleProto.Mumble.UserList.User.Builder builderForValue) {
      ensureUsersIsMutable();
      users_.add(builderForValue.build());
    }
    /**
     * <pre>
     * A list of registered users.
     * </pre>
     *
     * <code>repeated .MumbleProto.UserList.User users = 1;</code>
     */
    private void addUsers(
        int index, MumbleProto.Mumble.UserList.User.Builder builderForValue) {
      ensureUsersIsMutable();
      users_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * A list of registered users.
     * </pre>
     *
     * <code>repeated .MumbleProto.UserList.User users = 1;</code>
     */
    private void addAllUsers(
        java.lang.Iterable<? extends MumbleProto.Mumble.UserList.User> values) {
      ensureUsersIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, users_);
    }
    /**
     * <pre>
     * A list of registered users.
     * </pre>
     *
     * <code>repeated .MumbleProto.UserList.User users = 1;</code>
     */
    private void clearUsers() {
      users_ = emptyProtobufList();
    }
    /**
     * <pre>
     * A list of registered users.
     * </pre>
     *
     * <code>repeated .MumbleProto.UserList.User users = 1;</code>
     */
    private void removeUsers(int index) {
      ensureUsersIsMutable();
      users_.remove(index);
    }

    public static MumbleProto.Mumble.UserList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.UserList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.UserList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.UserList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.UserList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.UserList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.UserList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.UserList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.UserList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.UserList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.UserList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.UserList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.UserList prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Lists the registered users.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.UserList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.UserList, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.UserList)
        MumbleProto.Mumble.UserListOrBuilder {
      // Construct using MumbleProto.Mumble.UserList.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * A list of registered users.
       * </pre>
       *
       * <code>repeated .MumbleProto.UserList.User users = 1;</code>
       */
      @java.lang.Override
      public java.util.List<MumbleProto.Mumble.UserList.User> getUsersList() {
        return java.util.Collections.unmodifiableList(
            instance.getUsersList());
      }
      /**
       * <pre>
       * A list of registered users.
       * </pre>
       *
       * <code>repeated .MumbleProto.UserList.User users = 1;</code>
       */
      @java.lang.Override
      public int getUsersCount() {
        return instance.getUsersCount();
      }/**
       * <pre>
       * A list of registered users.
       * </pre>
       *
       * <code>repeated .MumbleProto.UserList.User users = 1;</code>
       */
      @java.lang.Override
      public MumbleProto.Mumble.UserList.User getUsers(int index) {
        return instance.getUsers(index);
      }
      /**
       * <pre>
       * A list of registered users.
       * </pre>
       *
       * <code>repeated .MumbleProto.UserList.User users = 1;</code>
       */
      public Builder setUsers(
          int index, MumbleProto.Mumble.UserList.User value) {
        copyOnWrite();
        instance.setUsers(index, value);
        return this;
      }
      /**
       * <pre>
       * A list of registered users.
       * </pre>
       *
       * <code>repeated .MumbleProto.UserList.User users = 1;</code>
       */
      public Builder setUsers(
          int index, MumbleProto.Mumble.UserList.User.Builder builderForValue) {
        copyOnWrite();
        instance.setUsers(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * A list of registered users.
       * </pre>
       *
       * <code>repeated .MumbleProto.UserList.User users = 1;</code>
       */
      public Builder addUsers(MumbleProto.Mumble.UserList.User value) {
        copyOnWrite();
        instance.addUsers(value);
        return this;
      }
      /**
       * <pre>
       * A list of registered users.
       * </pre>
       *
       * <code>repeated .MumbleProto.UserList.User users = 1;</code>
       */
      public Builder addUsers(
          int index, MumbleProto.Mumble.UserList.User value) {
        copyOnWrite();
        instance.addUsers(index, value);
        return this;
      }
      /**
       * <pre>
       * A list of registered users.
       * </pre>
       *
       * <code>repeated .MumbleProto.UserList.User users = 1;</code>
       */
      public Builder addUsers(
          MumbleProto.Mumble.UserList.User.Builder builderForValue) {
        copyOnWrite();
        instance.addUsers(builderForValue);
        return this;
      }
      /**
       * <pre>
       * A list of registered users.
       * </pre>
       *
       * <code>repeated .MumbleProto.UserList.User users = 1;</code>
       */
      public Builder addUsers(
          int index, MumbleProto.Mumble.UserList.User.Builder builderForValue) {
        copyOnWrite();
        instance.addUsers(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * A list of registered users.
       * </pre>
       *
       * <code>repeated .MumbleProto.UserList.User users = 1;</code>
       */
      public Builder addAllUsers(
          java.lang.Iterable<? extends MumbleProto.Mumble.UserList.User> values) {
        copyOnWrite();
        instance.addAllUsers(values);
        return this;
      }
      /**
       * <pre>
       * A list of registered users.
       * </pre>
       *
       * <code>repeated .MumbleProto.UserList.User users = 1;</code>
       */
      public Builder clearUsers() {
        copyOnWrite();
        instance.clearUsers();
        return this;
      }
      /**
       * <pre>
       * A list of registered users.
       * </pre>
       *
       * <code>repeated .MumbleProto.UserList.User users = 1;</code>
       */
      public Builder removeUsers(int index) {
        copyOnWrite();
        instance.removeUsers(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.UserList)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.UserList();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "users_",
              MumbleProto.Mumble.UserList.User.class,
            };
            java.lang.String info =
                "\u0001\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0001\u0001\u0001\u041b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.UserList> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.UserList.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.UserList)
    private static final MumbleProto.Mumble.UserList DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new UserList();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        UserList.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.UserList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<UserList> PARSER;

    public static com.google.protobuf.Parser<UserList> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface VoiceTargetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.VoiceTarget)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Voice target ID.
     * </pre>
     *
     * <code>optional uint32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <pre>
     * Voice target ID.
     * </pre>
     *
     * <code>optional uint32 id = 1;</code>
     */
    int getId();

    /**
     * <pre>
     * The receivers that this voice target includes.
     * </pre>
     *
     * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
     */
    java.util.List<MumbleProto.Mumble.VoiceTarget.Target> 
        getTargetsList();
    /**
     * <pre>
     * The receivers that this voice target includes.
     * </pre>
     *
     * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
     */
    MumbleProto.Mumble.VoiceTarget.Target getTargets(int index);
    /**
     * <pre>
     * The receivers that this voice target includes.
     * </pre>
     *
     * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
     */
    int getTargetsCount();
  }
  /**
   * <pre>
   * Sent by the client when it wants to register or clear whisper targets.
   * Note: The first available target ID is 1 as 0 is reserved for normal
   * talking. Maximum target ID is 30.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.VoiceTarget}
   */
  public  static final class VoiceTarget extends
      com.google.protobuf.GeneratedMessageLite<
          VoiceTarget, VoiceTarget.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.VoiceTarget)
      VoiceTargetOrBuilder {
    private VoiceTarget() {
      targets_ = emptyProtobufList();
    }
    public interface TargetOrBuilder extends
        // @@protoc_insertion_point(interface_extends:MumbleProto.VoiceTarget.Target)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * Users that are included as targets.
       * </pre>
       *
       * <code>repeated uint32 session = 1;</code>
       */
      java.util.List<java.lang.Integer> getSessionList();
      /**
       * <pre>
       * Users that are included as targets.
       * </pre>
       *
       * <code>repeated uint32 session = 1;</code>
       */
      int getSessionCount();
      /**
       * <pre>
       * Users that are included as targets.
       * </pre>
       *
       * <code>repeated uint32 session = 1;</code>
       */
      int getSession(int index);

      /**
       * <pre>
       * Channel that is included as a target.
       * </pre>
       *
       * <code>optional uint32 channel_id = 2;</code>
       */
      boolean hasChannelId();
      /**
       * <pre>
       * Channel that is included as a target.
       * </pre>
       *
       * <code>optional uint32 channel_id = 2;</code>
       */
      int getChannelId();

      /**
       * <pre>
       * ACL group that is included as a target.
       * </pre>
       *
       * <code>optional string group = 3;</code>
       */
      boolean hasGroup();
      /**
       * <pre>
       * ACL group that is included as a target.
       * </pre>
       *
       * <code>optional string group = 3;</code>
       */
      java.lang.String getGroup();
      /**
       * <pre>
       * ACL group that is included as a target.
       * </pre>
       *
       * <code>optional string group = 3;</code>
       */
      com.google.protobuf.ByteString
          getGroupBytes();

      /**
       * <pre>
       * True if the voice should follow links from the specified channel.
       * </pre>
       *
       * <code>optional bool links = 4 [default = false];</code>
       */
      boolean hasLinks();
      /**
       * <pre>
       * True if the voice should follow links from the specified channel.
       * </pre>
       *
       * <code>optional bool links = 4 [default = false];</code>
       */
      boolean getLinks();

      /**
       * <pre>
       * True if the voice should also be sent to children of the specific
       * channel.
       * </pre>
       *
       * <code>optional bool children = 5 [default = false];</code>
       */
      boolean hasChildren();
      /**
       * <pre>
       * True if the voice should also be sent to children of the specific
       * channel.
       * </pre>
       *
       * <code>optional bool children = 5 [default = false];</code>
       */
      boolean getChildren();
    }
    /**
     * Protobuf type {@code MumbleProto.VoiceTarget.Target}
     */
    public  static final class Target extends
        com.google.protobuf.GeneratedMessageLite<
            Target, Target.Builder> implements
        // @@protoc_insertion_point(message_implements:MumbleProto.VoiceTarget.Target)
        TargetOrBuilder {
      private Target() {
        session_ = emptyIntList();
        group_ = "";
      }
      private int bitField0_;
      public static final int SESSION_FIELD_NUMBER = 1;
      private com.google.protobuf.Internal.IntList session_;
      /**
       * <pre>
       * Users that are included as targets.
       * </pre>
       *
       * <code>repeated uint32 session = 1;</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getSessionList() {
        return session_;
      }
      /**
       * <pre>
       * Users that are included as targets.
       * </pre>
       *
       * <code>repeated uint32 session = 1;</code>
       */
      @java.lang.Override
      public int getSessionCount() {
        return session_.size();
      }
      /**
       * <pre>
       * Users that are included as targets.
       * </pre>
       *
       * <code>repeated uint32 session = 1;</code>
       */
      @java.lang.Override
      public int getSession(int index) {
        return session_.getInt(index);
      }
      private void ensureSessionIsMutable() {
        if (!session_.isModifiable()) {
          session_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(session_);
         }
      }
      /**
       * <pre>
       * Users that are included as targets.
       * </pre>
       *
       * <code>repeated uint32 session = 1;</code>
       */
      private void setSession(
          int index, int value) {
        ensureSessionIsMutable();
        session_.setInt(index, value);
      }
      /**
       * <pre>
       * Users that are included as targets.
       * </pre>
       *
       * <code>repeated uint32 session = 1;</code>
       */
      private void addSession(int value) {
        ensureSessionIsMutable();
        session_.addInt(value);
      }
      /**
       * <pre>
       * Users that are included as targets.
       * </pre>
       *
       * <code>repeated uint32 session = 1;</code>
       */
      private void addAllSession(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSessionIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, session_);
      }
      /**
       * <pre>
       * Users that are included as targets.
       * </pre>
       *
       * <code>repeated uint32 session = 1;</code>
       */
      private void clearSession() {
        session_ = emptyIntList();
      }

      public static final int CHANNEL_ID_FIELD_NUMBER = 2;
      private int channelId_;
      /**
       * <pre>
       * Channel that is included as a target.
       * </pre>
       *
       * <code>optional uint32 channel_id = 2;</code>
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Channel that is included as a target.
       * </pre>
       *
       * <code>optional uint32 channel_id = 2;</code>
       */
      @java.lang.Override
      public int getChannelId() {
        return channelId_;
      }
      /**
       * <pre>
       * Channel that is included as a target.
       * </pre>
       *
       * <code>optional uint32 channel_id = 2;</code>
       */
      private void setChannelId(int value) {
        bitField0_ |= 0x00000001;
        channelId_ = value;
      }
      /**
       * <pre>
       * Channel that is included as a target.
       * </pre>
       *
       * <code>optional uint32 channel_id = 2;</code>
       */
      private void clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        channelId_ = 0;
      }

      public static final int GROUP_FIELD_NUMBER = 3;
      private java.lang.String group_;
      /**
       * <pre>
       * ACL group that is included as a target.
       * </pre>
       *
       * <code>optional string group = 3;</code>
       */
      @java.lang.Override
      public boolean hasGroup() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * ACL group that is included as a target.
       * </pre>
       *
       * <code>optional string group = 3;</code>
       */
      @java.lang.Override
      public java.lang.String getGroup() {
        return group_;
      }
      /**
       * <pre>
       * ACL group that is included as a target.
       * </pre>
       *
       * <code>optional string group = 3;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getGroupBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(group_);
      }
      /**
       * <pre>
       * ACL group that is included as a target.
       * </pre>
       *
       * <code>optional string group = 3;</code>
       */
      private void setGroup(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        group_ = value;
      }
      /**
       * <pre>
       * ACL group that is included as a target.
       * </pre>
       *
       * <code>optional string group = 3;</code>
       */
      private void clearGroup() {
        bitField0_ = (bitField0_ & ~0x00000002);
        group_ = getDefaultInstance().getGroup();
      }
      /**
       * <pre>
       * ACL group that is included as a target.
       * </pre>
       *
       * <code>optional string group = 3;</code>
       */
      private void setGroupBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        group_ = value.toStringUtf8();
      }

      public static final int LINKS_FIELD_NUMBER = 4;
      private boolean links_;
      /**
       * <pre>
       * True if the voice should follow links from the specified channel.
       * </pre>
       *
       * <code>optional bool links = 4 [default = false];</code>
       */
      @java.lang.Override
      public boolean hasLinks() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * True if the voice should follow links from the specified channel.
       * </pre>
       *
       * <code>optional bool links = 4 [default = false];</code>
       */
      @java.lang.Override
      public boolean getLinks() {
        return links_;
      }
      /**
       * <pre>
       * True if the voice should follow links from the specified channel.
       * </pre>
       *
       * <code>optional bool links = 4 [default = false];</code>
       */
      private void setLinks(boolean value) {
        bitField0_ |= 0x00000004;
        links_ = value;
      }
      /**
       * <pre>
       * True if the voice should follow links from the specified channel.
       * </pre>
       *
       * <code>optional bool links = 4 [default = false];</code>
       */
      private void clearLinks() {
        bitField0_ = (bitField0_ & ~0x00000004);
        links_ = false;
      }

      public static final int CHILDREN_FIELD_NUMBER = 5;
      private boolean children_;
      /**
       * <pre>
       * True if the voice should also be sent to children of the specific
       * channel.
       * </pre>
       *
       * <code>optional bool children = 5 [default = false];</code>
       */
      @java.lang.Override
      public boolean hasChildren() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * True if the voice should also be sent to children of the specific
       * channel.
       * </pre>
       *
       * <code>optional bool children = 5 [default = false];</code>
       */
      @java.lang.Override
      public boolean getChildren() {
        return children_;
      }
      /**
       * <pre>
       * True if the voice should also be sent to children of the specific
       * channel.
       * </pre>
       *
       * <code>optional bool children = 5 [default = false];</code>
       */
      private void setChildren(boolean value) {
        bitField0_ |= 0x00000008;
        children_ = value;
      }
      /**
       * <pre>
       * True if the voice should also be sent to children of the specific
       * channel.
       * </pre>
       *
       * <code>optional bool children = 5 [default = false];</code>
       */
      private void clearChildren() {
        bitField0_ = (bitField0_ & ~0x00000008);
        children_ = false;
      }

      public static MumbleProto.Mumble.VoiceTarget.Target parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static MumbleProto.Mumble.VoiceTarget.Target parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static MumbleProto.Mumble.VoiceTarget.Target parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static MumbleProto.Mumble.VoiceTarget.Target parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static MumbleProto.Mumble.VoiceTarget.Target parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static MumbleProto.Mumble.VoiceTarget.Target parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static MumbleProto.Mumble.VoiceTarget.Target parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static MumbleProto.Mumble.VoiceTarget.Target parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static MumbleProto.Mumble.VoiceTarget.Target parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static MumbleProto.Mumble.VoiceTarget.Target parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static MumbleProto.Mumble.VoiceTarget.Target parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static MumbleProto.Mumble.VoiceTarget.Target parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(MumbleProto.Mumble.VoiceTarget.Target prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * Protobuf type {@code MumbleProto.VoiceTarget.Target}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            MumbleProto.Mumble.VoiceTarget.Target, Builder> implements
          // @@protoc_insertion_point(builder_implements:MumbleProto.VoiceTarget.Target)
          MumbleProto.Mumble.VoiceTarget.TargetOrBuilder {
        // Construct using MumbleProto.Mumble.VoiceTarget.Target.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * Users that are included as targets.
         * </pre>
         *
         * <code>repeated uint32 session = 1;</code>
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
            getSessionList() {
          return java.util.Collections.unmodifiableList(
              instance.getSessionList());
        }
        /**
         * <pre>
         * Users that are included as targets.
         * </pre>
         *
         * <code>repeated uint32 session = 1;</code>
         */
        @java.lang.Override
        public int getSessionCount() {
          return instance.getSessionCount();
        }
        /**
         * <pre>
         * Users that are included as targets.
         * </pre>
         *
         * <code>repeated uint32 session = 1;</code>
         */
        @java.lang.Override
        public int getSession(int index) {
          return instance.getSession(index);
        }
        /**
         * <pre>
         * Users that are included as targets.
         * </pre>
         *
         * <code>repeated uint32 session = 1;</code>
         */
        public Builder setSession(
            int index, int value) {
          copyOnWrite();
          instance.setSession(index, value);
          return this;
        }
        /**
         * <pre>
         * Users that are included as targets.
         * </pre>
         *
         * <code>repeated uint32 session = 1;</code>
         */
        public Builder addSession(int value) {
          copyOnWrite();
          instance.addSession(value);
          return this;
        }
        /**
         * <pre>
         * Users that are included as targets.
         * </pre>
         *
         * <code>repeated uint32 session = 1;</code>
         */
        public Builder addAllSession(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          copyOnWrite();
          instance.addAllSession(values);
          return this;
        }
        /**
         * <pre>
         * Users that are included as targets.
         * </pre>
         *
         * <code>repeated uint32 session = 1;</code>
         */
        public Builder clearSession() {
          copyOnWrite();
          instance.clearSession();
          return this;
        }

        /**
         * <pre>
         * Channel that is included as a target.
         * </pre>
         *
         * <code>optional uint32 channel_id = 2;</code>
         */
        @java.lang.Override
        public boolean hasChannelId() {
          return instance.hasChannelId();
        }
        /**
         * <pre>
         * Channel that is included as a target.
         * </pre>
         *
         * <code>optional uint32 channel_id = 2;</code>
         */
        @java.lang.Override
        public int getChannelId() {
          return instance.getChannelId();
        }
        /**
         * <pre>
         * Channel that is included as a target.
         * </pre>
         *
         * <code>optional uint32 channel_id = 2;</code>
         */
        public Builder setChannelId(int value) {
          copyOnWrite();
          instance.setChannelId(value);
          return this;
        }
        /**
         * <pre>
         * Channel that is included as a target.
         * </pre>
         *
         * <code>optional uint32 channel_id = 2;</code>
         */
        public Builder clearChannelId() {
          copyOnWrite();
          instance.clearChannelId();
          return this;
        }

        /**
         * <pre>
         * ACL group that is included as a target.
         * </pre>
         *
         * <code>optional string group = 3;</code>
         */
        @java.lang.Override
        public boolean hasGroup() {
          return instance.hasGroup();
        }
        /**
         * <pre>
         * ACL group that is included as a target.
         * </pre>
         *
         * <code>optional string group = 3;</code>
         */
        @java.lang.Override
        public java.lang.String getGroup() {
          return instance.getGroup();
        }
        /**
         * <pre>
         * ACL group that is included as a target.
         * </pre>
         *
         * <code>optional string group = 3;</code>
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getGroupBytes() {
          return instance.getGroupBytes();
        }
        /**
         * <pre>
         * ACL group that is included as a target.
         * </pre>
         *
         * <code>optional string group = 3;</code>
         */
        public Builder setGroup(
            java.lang.String value) {
          copyOnWrite();
          instance.setGroup(value);
          return this;
        }
        /**
         * <pre>
         * ACL group that is included as a target.
         * </pre>
         *
         * <code>optional string group = 3;</code>
         */
        public Builder clearGroup() {
          copyOnWrite();
          instance.clearGroup();
          return this;
        }
        /**
         * <pre>
         * ACL group that is included as a target.
         * </pre>
         *
         * <code>optional string group = 3;</code>
         */
        public Builder setGroupBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setGroupBytes(value);
          return this;
        }

        /**
         * <pre>
         * True if the voice should follow links from the specified channel.
         * </pre>
         *
         * <code>optional bool links = 4 [default = false];</code>
         */
        @java.lang.Override
        public boolean hasLinks() {
          return instance.hasLinks();
        }
        /**
         * <pre>
         * True if the voice should follow links from the specified channel.
         * </pre>
         *
         * <code>optional bool links = 4 [default = false];</code>
         */
        @java.lang.Override
        public boolean getLinks() {
          return instance.getLinks();
        }
        /**
         * <pre>
         * True if the voice should follow links from the specified channel.
         * </pre>
         *
         * <code>optional bool links = 4 [default = false];</code>
         */
        public Builder setLinks(boolean value) {
          copyOnWrite();
          instance.setLinks(value);
          return this;
        }
        /**
         * <pre>
         * True if the voice should follow links from the specified channel.
         * </pre>
         *
         * <code>optional bool links = 4 [default = false];</code>
         */
        public Builder clearLinks() {
          copyOnWrite();
          instance.clearLinks();
          return this;
        }

        /**
         * <pre>
         * True if the voice should also be sent to children of the specific
         * channel.
         * </pre>
         *
         * <code>optional bool children = 5 [default = false];</code>
         */
        @java.lang.Override
        public boolean hasChildren() {
          return instance.hasChildren();
        }
        /**
         * <pre>
         * True if the voice should also be sent to children of the specific
         * channel.
         * </pre>
         *
         * <code>optional bool children = 5 [default = false];</code>
         */
        @java.lang.Override
        public boolean getChildren() {
          return instance.getChildren();
        }
        /**
         * <pre>
         * True if the voice should also be sent to children of the specific
         * channel.
         * </pre>
         *
         * <code>optional bool children = 5 [default = false];</code>
         */
        public Builder setChildren(boolean value) {
          copyOnWrite();
          instance.setChildren(value);
          return this;
        }
        /**
         * <pre>
         * True if the voice should also be sent to children of the specific
         * channel.
         * </pre>
         *
         * <code>optional bool children = 5 [default = false];</code>
         */
        public Builder clearChildren() {
          copyOnWrite();
          instance.clearChildren();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:MumbleProto.VoiceTarget.Target)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new MumbleProto.Mumble.VoiceTarget.Target();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "bitField0_",
                "session_",
                "channelId_",
                "group_",
                "links_",
                "children_",
              };
              java.lang.String info =
                  "\u0001\u0005\u0000\u0001\u0001\u0005\u0005\u0000\u0001\u0000\u0001\u001d\u0002\u000b" +
                  "\u0000\u0003\b\u0001\u0004\u0007\u0002\u0005\u0007\u0003";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<MumbleProto.Mumble.VoiceTarget.Target> parser = PARSER;
            if (parser == null) {
              synchronized (MumbleProto.Mumble.VoiceTarget.Target.class) {
                parser = PARSER;
                if (parser == null) {
                  parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:MumbleProto.VoiceTarget.Target)
      private static final MumbleProto.Mumble.VoiceTarget.Target DEFAULT_INSTANCE;
      static {
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = new Target();
      }

      static {
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          Target.class, DEFAULT_INSTANCE);
      }
      public static MumbleProto.Mumble.VoiceTarget.Target getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Target> PARSER;

      public static com.google.protobuf.Parser<Target> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     * Voice target ID.
     * </pre>
     *
     * <code>optional uint32 id = 1;</code>
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Voice target ID.
     * </pre>
     *
     * <code>optional uint32 id = 1;</code>
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }
    /**
     * <pre>
     * Voice target ID.
     * </pre>
     *
     * <code>optional uint32 id = 1;</code>
     */
    private void setId(int value) {
      bitField0_ |= 0x00000001;
      id_ = value;
    }
    /**
     * <pre>
     * Voice target ID.
     * </pre>
     *
     * <code>optional uint32 id = 1;</code>
     */
    private void clearId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      id_ = 0;
    }

    public static final int TARGETS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<MumbleProto.Mumble.VoiceTarget.Target> targets_;
    /**
     * <pre>
     * The receivers that this voice target includes.
     * </pre>
     *
     * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
     */
    @java.lang.Override
    public java.util.List<MumbleProto.Mumble.VoiceTarget.Target> getTargetsList() {
      return targets_;
    }
    /**
     * <pre>
     * The receivers that this voice target includes.
     * </pre>
     *
     * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
     */
    public java.util.List<? extends MumbleProto.Mumble.VoiceTarget.TargetOrBuilder> 
        getTargetsOrBuilderList() {
      return targets_;
    }
    /**
     * <pre>
     * The receivers that this voice target includes.
     * </pre>
     *
     * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
     */
    @java.lang.Override
    public int getTargetsCount() {
      return targets_.size();
    }
    /**
     * <pre>
     * The receivers that this voice target includes.
     * </pre>
     *
     * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
     */
    @java.lang.Override
    public MumbleProto.Mumble.VoiceTarget.Target getTargets(int index) {
      return targets_.get(index);
    }
    /**
     * <pre>
     * The receivers that this voice target includes.
     * </pre>
     *
     * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
     */
    public MumbleProto.Mumble.VoiceTarget.TargetOrBuilder getTargetsOrBuilder(
        int index) {
      return targets_.get(index);
    }
    private void ensureTargetsIsMutable() {
      if (!targets_.isModifiable()) {
        targets_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(targets_);
       }
    }

    /**
     * <pre>
     * The receivers that this voice target includes.
     * </pre>
     *
     * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
     */
    private void setTargets(
        int index, MumbleProto.Mumble.VoiceTarget.Target value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTargetsIsMutable();
      targets_.set(index, value);
    }
    /**
     * <pre>
     * The receivers that this voice target includes.
     * </pre>
     *
     * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
     */
    private void setTargets(
        int index, MumbleProto.Mumble.VoiceTarget.Target.Builder builderForValue) {
      ensureTargetsIsMutable();
      targets_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * The receivers that this voice target includes.
     * </pre>
     *
     * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
     */
    private void addTargets(MumbleProto.Mumble.VoiceTarget.Target value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTargetsIsMutable();
      targets_.add(value);
    }
    /**
     * <pre>
     * The receivers that this voice target includes.
     * </pre>
     *
     * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
     */
    private void addTargets(
        int index, MumbleProto.Mumble.VoiceTarget.Target value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTargetsIsMutable();
      targets_.add(index, value);
    }
    /**
     * <pre>
     * The receivers that this voice target includes.
     * </pre>
     *
     * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
     */
    private void addTargets(
        MumbleProto.Mumble.VoiceTarget.Target.Builder builderForValue) {
      ensureTargetsIsMutable();
      targets_.add(builderForValue.build());
    }
    /**
     * <pre>
     * The receivers that this voice target includes.
     * </pre>
     *
     * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
     */
    private void addTargets(
        int index, MumbleProto.Mumble.VoiceTarget.Target.Builder builderForValue) {
      ensureTargetsIsMutable();
      targets_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * The receivers that this voice target includes.
     * </pre>
     *
     * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
     */
    private void addAllTargets(
        java.lang.Iterable<? extends MumbleProto.Mumble.VoiceTarget.Target> values) {
      ensureTargetsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, targets_);
    }
    /**
     * <pre>
     * The receivers that this voice target includes.
     * </pre>
     *
     * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
     */
    private void clearTargets() {
      targets_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The receivers that this voice target includes.
     * </pre>
     *
     * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
     */
    private void removeTargets(int index) {
      ensureTargetsIsMutable();
      targets_.remove(index);
    }

    public static MumbleProto.Mumble.VoiceTarget parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.VoiceTarget parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.VoiceTarget parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.VoiceTarget parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.VoiceTarget parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.VoiceTarget parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.VoiceTarget parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.VoiceTarget parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.VoiceTarget parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.VoiceTarget parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.VoiceTarget parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.VoiceTarget parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.VoiceTarget prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Sent by the client when it wants to register or clear whisper targets.
     * Note: The first available target ID is 1 as 0 is reserved for normal
     * talking. Maximum target ID is 30.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.VoiceTarget}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.VoiceTarget, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.VoiceTarget)
        MumbleProto.Mumble.VoiceTargetOrBuilder {
      // Construct using MumbleProto.Mumble.VoiceTarget.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Voice target ID.
       * </pre>
       *
       * <code>optional uint32 id = 1;</code>
       */
      @java.lang.Override
      public boolean hasId() {
        return instance.hasId();
      }
      /**
       * <pre>
       * Voice target ID.
       * </pre>
       *
       * <code>optional uint32 id = 1;</code>
       */
      @java.lang.Override
      public int getId() {
        return instance.getId();
      }
      /**
       * <pre>
       * Voice target ID.
       * </pre>
       *
       * <code>optional uint32 id = 1;</code>
       */
      public Builder setId(int value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <pre>
       * Voice target ID.
       * </pre>
       *
       * <code>optional uint32 id = 1;</code>
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }

      /**
       * <pre>
       * The receivers that this voice target includes.
       * </pre>
       *
       * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
       */
      @java.lang.Override
      public java.util.List<MumbleProto.Mumble.VoiceTarget.Target> getTargetsList() {
        return java.util.Collections.unmodifiableList(
            instance.getTargetsList());
      }
      /**
       * <pre>
       * The receivers that this voice target includes.
       * </pre>
       *
       * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
       */
      @java.lang.Override
      public int getTargetsCount() {
        return instance.getTargetsCount();
      }/**
       * <pre>
       * The receivers that this voice target includes.
       * </pre>
       *
       * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
       */
      @java.lang.Override
      public MumbleProto.Mumble.VoiceTarget.Target getTargets(int index) {
        return instance.getTargets(index);
      }
      /**
       * <pre>
       * The receivers that this voice target includes.
       * </pre>
       *
       * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
       */
      public Builder setTargets(
          int index, MumbleProto.Mumble.VoiceTarget.Target value) {
        copyOnWrite();
        instance.setTargets(index, value);
        return this;
      }
      /**
       * <pre>
       * The receivers that this voice target includes.
       * </pre>
       *
       * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
       */
      public Builder setTargets(
          int index, MumbleProto.Mumble.VoiceTarget.Target.Builder builderForValue) {
        copyOnWrite();
        instance.setTargets(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The receivers that this voice target includes.
       * </pre>
       *
       * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
       */
      public Builder addTargets(MumbleProto.Mumble.VoiceTarget.Target value) {
        copyOnWrite();
        instance.addTargets(value);
        return this;
      }
      /**
       * <pre>
       * The receivers that this voice target includes.
       * </pre>
       *
       * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
       */
      public Builder addTargets(
          int index, MumbleProto.Mumble.VoiceTarget.Target value) {
        copyOnWrite();
        instance.addTargets(index, value);
        return this;
      }
      /**
       * <pre>
       * The receivers that this voice target includes.
       * </pre>
       *
       * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
       */
      public Builder addTargets(
          MumbleProto.Mumble.VoiceTarget.Target.Builder builderForValue) {
        copyOnWrite();
        instance.addTargets(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The receivers that this voice target includes.
       * </pre>
       *
       * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
       */
      public Builder addTargets(
          int index, MumbleProto.Mumble.VoiceTarget.Target.Builder builderForValue) {
        copyOnWrite();
        instance.addTargets(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The receivers that this voice target includes.
       * </pre>
       *
       * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
       */
      public Builder addAllTargets(
          java.lang.Iterable<? extends MumbleProto.Mumble.VoiceTarget.Target> values) {
        copyOnWrite();
        instance.addAllTargets(values);
        return this;
      }
      /**
       * <pre>
       * The receivers that this voice target includes.
       * </pre>
       *
       * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
       */
      public Builder clearTargets() {
        copyOnWrite();
        instance.clearTargets();
        return this;
      }
      /**
       * <pre>
       * The receivers that this voice target includes.
       * </pre>
       *
       * <code>repeated .MumbleProto.VoiceTarget.Target targets = 2;</code>
       */
      public Builder removeTargets(int index) {
        copyOnWrite();
        instance.removeTargets(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.VoiceTarget)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.VoiceTarget();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "id_",
              "targets_",
              MumbleProto.Mumble.VoiceTarget.Target.class,
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0001\u0000\u0001\u000b\u0000\u0002" +
                "\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.VoiceTarget> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.VoiceTarget.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.VoiceTarget)
    private static final MumbleProto.Mumble.VoiceTarget DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new VoiceTarget();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        VoiceTarget.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.VoiceTarget getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<VoiceTarget> PARSER;

    public static com.google.protobuf.Parser<VoiceTarget> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PermissionQueryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.PermissionQuery)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * channel_id of the channel for which the permissions are queried.
     * </pre>
     *
     * <code>optional uint32 channel_id = 1;</code>
     */
    boolean hasChannelId();
    /**
     * <pre>
     * channel_id of the channel for which the permissions are queried.
     * </pre>
     *
     * <code>optional uint32 channel_id = 1;</code>
     */
    int getChannelId();

    /**
     * <pre>
     * Channel permissions.
     * </pre>
     *
     * <code>optional uint32 permissions = 2;</code>
     */
    boolean hasPermissions();
    /**
     * <pre>
     * Channel permissions.
     * </pre>
     *
     * <code>optional uint32 permissions = 2;</code>
     */
    int getPermissions();

    /**
     * <pre>
     * True if the client should drop its current permission information for all
     * channels.
     * </pre>
     *
     * <code>optional bool flush = 3 [default = false];</code>
     */
    boolean hasFlush();
    /**
     * <pre>
     * True if the client should drop its current permission information for all
     * channels.
     * </pre>
     *
     * <code>optional bool flush = 3 [default = false];</code>
     */
    boolean getFlush();
  }
  /**
   * <pre>
   * Sent by the client when it wants permissions for a certain channel. Sent by
   * the server when it replies to the query or wants the user to resync all
   * channel permissions.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.PermissionQuery}
   */
  public  static final class PermissionQuery extends
      com.google.protobuf.GeneratedMessageLite<
          PermissionQuery, PermissionQuery.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.PermissionQuery)
      PermissionQueryOrBuilder {
    private PermissionQuery() {
    }
    private int bitField0_;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private int channelId_;
    /**
     * <pre>
     * channel_id of the channel for which the permissions are queried.
     * </pre>
     *
     * <code>optional uint32 channel_id = 1;</code>
     */
    @java.lang.Override
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * channel_id of the channel for which the permissions are queried.
     * </pre>
     *
     * <code>optional uint32 channel_id = 1;</code>
     */
    @java.lang.Override
    public int getChannelId() {
      return channelId_;
    }
    /**
     * <pre>
     * channel_id of the channel for which the permissions are queried.
     * </pre>
     *
     * <code>optional uint32 channel_id = 1;</code>
     */
    private void setChannelId(int value) {
      bitField0_ |= 0x00000001;
      channelId_ = value;
    }
    /**
     * <pre>
     * channel_id of the channel for which the permissions are queried.
     * </pre>
     *
     * <code>optional uint32 channel_id = 1;</code>
     */
    private void clearChannelId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      channelId_ = 0;
    }

    public static final int PERMISSIONS_FIELD_NUMBER = 2;
    private int permissions_;
    /**
     * <pre>
     * Channel permissions.
     * </pre>
     *
     * <code>optional uint32 permissions = 2;</code>
     */
    @java.lang.Override
    public boolean hasPermissions() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Channel permissions.
     * </pre>
     *
     * <code>optional uint32 permissions = 2;</code>
     */
    @java.lang.Override
    public int getPermissions() {
      return permissions_;
    }
    /**
     * <pre>
     * Channel permissions.
     * </pre>
     *
     * <code>optional uint32 permissions = 2;</code>
     */
    private void setPermissions(int value) {
      bitField0_ |= 0x00000002;
      permissions_ = value;
    }
    /**
     * <pre>
     * Channel permissions.
     * </pre>
     *
     * <code>optional uint32 permissions = 2;</code>
     */
    private void clearPermissions() {
      bitField0_ = (bitField0_ & ~0x00000002);
      permissions_ = 0;
    }

    public static final int FLUSH_FIELD_NUMBER = 3;
    private boolean flush_;
    /**
     * <pre>
     * True if the client should drop its current permission information for all
     * channels.
     * </pre>
     *
     * <code>optional bool flush = 3 [default = false];</code>
     */
    @java.lang.Override
    public boolean hasFlush() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * True if the client should drop its current permission information for all
     * channels.
     * </pre>
     *
     * <code>optional bool flush = 3 [default = false];</code>
     */
    @java.lang.Override
    public boolean getFlush() {
      return flush_;
    }
    /**
     * <pre>
     * True if the client should drop its current permission information for all
     * channels.
     * </pre>
     *
     * <code>optional bool flush = 3 [default = false];</code>
     */
    private void setFlush(boolean value) {
      bitField0_ |= 0x00000004;
      flush_ = value;
    }
    /**
     * <pre>
     * True if the client should drop its current permission information for all
     * channels.
     * </pre>
     *
     * <code>optional bool flush = 3 [default = false];</code>
     */
    private void clearFlush() {
      bitField0_ = (bitField0_ & ~0x00000004);
      flush_ = false;
    }

    public static MumbleProto.Mumble.PermissionQuery parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.PermissionQuery parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.PermissionQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.PermissionQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.PermissionQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.PermissionQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.PermissionQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.PermissionQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.PermissionQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.PermissionQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.PermissionQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.PermissionQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.PermissionQuery prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Sent by the client when it wants permissions for a certain channel. Sent by
     * the server when it replies to the query or wants the user to resync all
     * channel permissions.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.PermissionQuery}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.PermissionQuery, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.PermissionQuery)
        MumbleProto.Mumble.PermissionQueryOrBuilder {
      // Construct using MumbleProto.Mumble.PermissionQuery.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * channel_id of the channel for which the permissions are queried.
       * </pre>
       *
       * <code>optional uint32 channel_id = 1;</code>
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return instance.hasChannelId();
      }
      /**
       * <pre>
       * channel_id of the channel for which the permissions are queried.
       * </pre>
       *
       * <code>optional uint32 channel_id = 1;</code>
       */
      @java.lang.Override
      public int getChannelId() {
        return instance.getChannelId();
      }
      /**
       * <pre>
       * channel_id of the channel for which the permissions are queried.
       * </pre>
       *
       * <code>optional uint32 channel_id = 1;</code>
       */
      public Builder setChannelId(int value) {
        copyOnWrite();
        instance.setChannelId(value);
        return this;
      }
      /**
       * <pre>
       * channel_id of the channel for which the permissions are queried.
       * </pre>
       *
       * <code>optional uint32 channel_id = 1;</code>
       */
      public Builder clearChannelId() {
        copyOnWrite();
        instance.clearChannelId();
        return this;
      }

      /**
       * <pre>
       * Channel permissions.
       * </pre>
       *
       * <code>optional uint32 permissions = 2;</code>
       */
      @java.lang.Override
      public boolean hasPermissions() {
        return instance.hasPermissions();
      }
      /**
       * <pre>
       * Channel permissions.
       * </pre>
       *
       * <code>optional uint32 permissions = 2;</code>
       */
      @java.lang.Override
      public int getPermissions() {
        return instance.getPermissions();
      }
      /**
       * <pre>
       * Channel permissions.
       * </pre>
       *
       * <code>optional uint32 permissions = 2;</code>
       */
      public Builder setPermissions(int value) {
        copyOnWrite();
        instance.setPermissions(value);
        return this;
      }
      /**
       * <pre>
       * Channel permissions.
       * </pre>
       *
       * <code>optional uint32 permissions = 2;</code>
       */
      public Builder clearPermissions() {
        copyOnWrite();
        instance.clearPermissions();
        return this;
      }

      /**
       * <pre>
       * True if the client should drop its current permission information for all
       * channels.
       * </pre>
       *
       * <code>optional bool flush = 3 [default = false];</code>
       */
      @java.lang.Override
      public boolean hasFlush() {
        return instance.hasFlush();
      }
      /**
       * <pre>
       * True if the client should drop its current permission information for all
       * channels.
       * </pre>
       *
       * <code>optional bool flush = 3 [default = false];</code>
       */
      @java.lang.Override
      public boolean getFlush() {
        return instance.getFlush();
      }
      /**
       * <pre>
       * True if the client should drop its current permission information for all
       * channels.
       * </pre>
       *
       * <code>optional bool flush = 3 [default = false];</code>
       */
      public Builder setFlush(boolean value) {
        copyOnWrite();
        instance.setFlush(value);
        return this;
      }
      /**
       * <pre>
       * True if the client should drop its current permission information for all
       * channels.
       * </pre>
       *
       * <code>optional bool flush = 3 [default = false];</code>
       */
      public Builder clearFlush() {
        copyOnWrite();
        instance.clearFlush();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.PermissionQuery)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.PermissionQuery();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "channelId_",
              "permissions_",
              "flush_",
            };
            java.lang.String info =
                "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u000b\u0000\u0002" +
                "\u000b\u0001\u0003\u0007\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.PermissionQuery> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.PermissionQuery.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.PermissionQuery)
    private static final MumbleProto.Mumble.PermissionQuery DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new PermissionQuery();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        PermissionQuery.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.PermissionQuery getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PermissionQuery> PARSER;

    public static com.google.protobuf.Parser<PermissionQuery> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CodecVersionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.CodecVersion)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The version of the CELT Alpha codec.
     * </pre>
     *
     * <code>required int32 alpha = 1;</code>
     */
    boolean hasAlpha();
    /**
     * <pre>
     * The version of the CELT Alpha codec.
     * </pre>
     *
     * <code>required int32 alpha = 1;</code>
     */
    int getAlpha();

    /**
     * <pre>
     * The version of the CELT Beta codec.
     * </pre>
     *
     * <code>required int32 beta = 2;</code>
     */
    boolean hasBeta();
    /**
     * <pre>
     * The version of the CELT Beta codec.
     * </pre>
     *
     * <code>required int32 beta = 2;</code>
     */
    int getBeta();

    /**
     * <pre>
     * True if the user should prefer Alpha over Beta.
     * </pre>
     *
     * <code>required bool prefer_alpha = 3 [default = true];</code>
     */
    boolean hasPreferAlpha();
    /**
     * <pre>
     * True if the user should prefer Alpha over Beta.
     * </pre>
     *
     * <code>required bool prefer_alpha = 3 [default = true];</code>
     */
    boolean getPreferAlpha();

    /**
     * <code>optional bool opus = 4 [default = false];</code>
     */
    boolean hasOpus();
    /**
     * <code>optional bool opus = 4 [default = false];</code>
     */
    boolean getOpus();
  }
  /**
   * <pre>
   * Sent by the server to notify the users of the version of the CELT codec they
   * should use. This may change during the connection when new users join.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.CodecVersion}
   */
  public  static final class CodecVersion extends
      com.google.protobuf.GeneratedMessageLite<
          CodecVersion, CodecVersion.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.CodecVersion)
      CodecVersionOrBuilder {
    private CodecVersion() {
      preferAlpha_ = true;
    }
    private int bitField0_;
    public static final int ALPHA_FIELD_NUMBER = 1;
    private int alpha_;
    /**
     * <pre>
     * The version of the CELT Alpha codec.
     * </pre>
     *
     * <code>required int32 alpha = 1;</code>
     */
    @java.lang.Override
    public boolean hasAlpha() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The version of the CELT Alpha codec.
     * </pre>
     *
     * <code>required int32 alpha = 1;</code>
     */
    @java.lang.Override
    public int getAlpha() {
      return alpha_;
    }
    /**
     * <pre>
     * The version of the CELT Alpha codec.
     * </pre>
     *
     * <code>required int32 alpha = 1;</code>
     */
    private void setAlpha(int value) {
      bitField0_ |= 0x00000001;
      alpha_ = value;
    }
    /**
     * <pre>
     * The version of the CELT Alpha codec.
     * </pre>
     *
     * <code>required int32 alpha = 1;</code>
     */
    private void clearAlpha() {
      bitField0_ = (bitField0_ & ~0x00000001);
      alpha_ = 0;
    }

    public static final int BETA_FIELD_NUMBER = 2;
    private int beta_;
    /**
     * <pre>
     * The version of the CELT Beta codec.
     * </pre>
     *
     * <code>required int32 beta = 2;</code>
     */
    @java.lang.Override
    public boolean hasBeta() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The version of the CELT Beta codec.
     * </pre>
     *
     * <code>required int32 beta = 2;</code>
     */
    @java.lang.Override
    public int getBeta() {
      return beta_;
    }
    /**
     * <pre>
     * The version of the CELT Beta codec.
     * </pre>
     *
     * <code>required int32 beta = 2;</code>
     */
    private void setBeta(int value) {
      bitField0_ |= 0x00000002;
      beta_ = value;
    }
    /**
     * <pre>
     * The version of the CELT Beta codec.
     * </pre>
     *
     * <code>required int32 beta = 2;</code>
     */
    private void clearBeta() {
      bitField0_ = (bitField0_ & ~0x00000002);
      beta_ = 0;
    }

    public static final int PREFER_ALPHA_FIELD_NUMBER = 3;
    private boolean preferAlpha_;
    /**
     * <pre>
     * True if the user should prefer Alpha over Beta.
     * </pre>
     *
     * <code>required bool prefer_alpha = 3 [default = true];</code>
     */
    @java.lang.Override
    public boolean hasPreferAlpha() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * True if the user should prefer Alpha over Beta.
     * </pre>
     *
     * <code>required bool prefer_alpha = 3 [default = true];</code>
     */
    @java.lang.Override
    public boolean getPreferAlpha() {
      return preferAlpha_;
    }
    /**
     * <pre>
     * True if the user should prefer Alpha over Beta.
     * </pre>
     *
     * <code>required bool prefer_alpha = 3 [default = true];</code>
     */
    private void setPreferAlpha(boolean value) {
      bitField0_ |= 0x00000004;
      preferAlpha_ = value;
    }
    /**
     * <pre>
     * True if the user should prefer Alpha over Beta.
     * </pre>
     *
     * <code>required bool prefer_alpha = 3 [default = true];</code>
     */
    private void clearPreferAlpha() {
      bitField0_ = (bitField0_ & ~0x00000004);
      preferAlpha_ = true;
    }

    public static final int OPUS_FIELD_NUMBER = 4;
    private boolean opus_;
    /**
     * <code>optional bool opus = 4 [default = false];</code>
     */
    @java.lang.Override
    public boolean hasOpus() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bool opus = 4 [default = false];</code>
     */
    @java.lang.Override
    public boolean getOpus() {
      return opus_;
    }
    /**
     * <code>optional bool opus = 4 [default = false];</code>
     */
    private void setOpus(boolean value) {
      bitField0_ |= 0x00000008;
      opus_ = value;
    }
    /**
     * <code>optional bool opus = 4 [default = false];</code>
     */
    private void clearOpus() {
      bitField0_ = (bitField0_ & ~0x00000008);
      opus_ = false;
    }

    public static MumbleProto.Mumble.CodecVersion parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.CodecVersion parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.CodecVersion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.CodecVersion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.CodecVersion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.CodecVersion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.CodecVersion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.CodecVersion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.CodecVersion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.CodecVersion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.CodecVersion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.CodecVersion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.CodecVersion prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Sent by the server to notify the users of the version of the CELT codec they
     * should use. This may change during the connection when new users join.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.CodecVersion}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.CodecVersion, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.CodecVersion)
        MumbleProto.Mumble.CodecVersionOrBuilder {
      // Construct using MumbleProto.Mumble.CodecVersion.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The version of the CELT Alpha codec.
       * </pre>
       *
       * <code>required int32 alpha = 1;</code>
       */
      @java.lang.Override
      public boolean hasAlpha() {
        return instance.hasAlpha();
      }
      /**
       * <pre>
       * The version of the CELT Alpha codec.
       * </pre>
       *
       * <code>required int32 alpha = 1;</code>
       */
      @java.lang.Override
      public int getAlpha() {
        return instance.getAlpha();
      }
      /**
       * <pre>
       * The version of the CELT Alpha codec.
       * </pre>
       *
       * <code>required int32 alpha = 1;</code>
       */
      public Builder setAlpha(int value) {
        copyOnWrite();
        instance.setAlpha(value);
        return this;
      }
      /**
       * <pre>
       * The version of the CELT Alpha codec.
       * </pre>
       *
       * <code>required int32 alpha = 1;</code>
       */
      public Builder clearAlpha() {
        copyOnWrite();
        instance.clearAlpha();
        return this;
      }

      /**
       * <pre>
       * The version of the CELT Beta codec.
       * </pre>
       *
       * <code>required int32 beta = 2;</code>
       */
      @java.lang.Override
      public boolean hasBeta() {
        return instance.hasBeta();
      }
      /**
       * <pre>
       * The version of the CELT Beta codec.
       * </pre>
       *
       * <code>required int32 beta = 2;</code>
       */
      @java.lang.Override
      public int getBeta() {
        return instance.getBeta();
      }
      /**
       * <pre>
       * The version of the CELT Beta codec.
       * </pre>
       *
       * <code>required int32 beta = 2;</code>
       */
      public Builder setBeta(int value) {
        copyOnWrite();
        instance.setBeta(value);
        return this;
      }
      /**
       * <pre>
       * The version of the CELT Beta codec.
       * </pre>
       *
       * <code>required int32 beta = 2;</code>
       */
      public Builder clearBeta() {
        copyOnWrite();
        instance.clearBeta();
        return this;
      }

      /**
       * <pre>
       * True if the user should prefer Alpha over Beta.
       * </pre>
       *
       * <code>required bool prefer_alpha = 3 [default = true];</code>
       */
      @java.lang.Override
      public boolean hasPreferAlpha() {
        return instance.hasPreferAlpha();
      }
      /**
       * <pre>
       * True if the user should prefer Alpha over Beta.
       * </pre>
       *
       * <code>required bool prefer_alpha = 3 [default = true];</code>
       */
      @java.lang.Override
      public boolean getPreferAlpha() {
        return instance.getPreferAlpha();
      }
      /**
       * <pre>
       * True if the user should prefer Alpha over Beta.
       * </pre>
       *
       * <code>required bool prefer_alpha = 3 [default = true];</code>
       */
      public Builder setPreferAlpha(boolean value) {
        copyOnWrite();
        instance.setPreferAlpha(value);
        return this;
      }
      /**
       * <pre>
       * True if the user should prefer Alpha over Beta.
       * </pre>
       *
       * <code>required bool prefer_alpha = 3 [default = true];</code>
       */
      public Builder clearPreferAlpha() {
        copyOnWrite();
        instance.clearPreferAlpha();
        return this;
      }

      /**
       * <code>optional bool opus = 4 [default = false];</code>
       */
      @java.lang.Override
      public boolean hasOpus() {
        return instance.hasOpus();
      }
      /**
       * <code>optional bool opus = 4 [default = false];</code>
       */
      @java.lang.Override
      public boolean getOpus() {
        return instance.getOpus();
      }
      /**
       * <code>optional bool opus = 4 [default = false];</code>
       */
      public Builder setOpus(boolean value) {
        copyOnWrite();
        instance.setOpus(value);
        return this;
      }
      /**
       * <code>optional bool opus = 4 [default = false];</code>
       */
      public Builder clearOpus() {
        copyOnWrite();
        instance.clearOpus();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.CodecVersion)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.CodecVersion();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "alpha_",
              "beta_",
              "preferAlpha_",
              "opus_",
            };
            java.lang.String info =
                "\u0001\u0004\u0000\u0001\u0001\u0004\u0004\u0000\u0000\u0003\u0001\u0504\u0000\u0002" +
                "\u0504\u0001\u0003\u0507\u0002\u0004\u0007\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.CodecVersion> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.CodecVersion.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.CodecVersion)
    private static final MumbleProto.Mumble.CodecVersion DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new CodecVersion();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        CodecVersion.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.CodecVersion getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CodecVersion> PARSER;

    public static com.google.protobuf.Parser<CodecVersion> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface UserStatsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.UserStats)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * User whose stats these are.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    boolean hasSession();
    /**
     * <pre>
     * User whose stats these are.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    int getSession();

    /**
     * <pre>
     * True if the message contains only mutable stats (packets, ping).
     * </pre>
     *
     * <code>optional bool stats_only = 2 [default = false];</code>
     */
    boolean hasStatsOnly();
    /**
     * <pre>
     * True if the message contains only mutable stats (packets, ping).
     * </pre>
     *
     * <code>optional bool stats_only = 2 [default = false];</code>
     */
    boolean getStatsOnly();

    /**
     * <pre>
     * Full user certificate chain of the user certificate in DER format.
     * </pre>
     *
     * <code>repeated bytes certificates = 3;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getCertificatesList();
    /**
     * <pre>
     * Full user certificate chain of the user certificate in DER format.
     * </pre>
     *
     * <code>repeated bytes certificates = 3;</code>
     */
    int getCertificatesCount();
    /**
     * <pre>
     * Full user certificate chain of the user certificate in DER format.
     * </pre>
     *
     * <code>repeated bytes certificates = 3;</code>
     */
    com.google.protobuf.ByteString getCertificates(int index);

    /**
     * <pre>
     * Packet statistics for packets received from the client.
     * </pre>
     *
     * <code>optional .MumbleProto.UserStats.Stats from_client = 4;</code>
     */
    boolean hasFromClient();
    /**
     * <pre>
     * Packet statistics for packets received from the client.
     * </pre>
     *
     * <code>optional .MumbleProto.UserStats.Stats from_client = 4;</code>
     */
    MumbleProto.Mumble.UserStats.Stats getFromClient();

    /**
     * <pre>
     * Packet statistics for packets sent by the server.
     * </pre>
     *
     * <code>optional .MumbleProto.UserStats.Stats from_server = 5;</code>
     */
    boolean hasFromServer();
    /**
     * <pre>
     * Packet statistics for packets sent by the server.
     * </pre>
     *
     * <code>optional .MumbleProto.UserStats.Stats from_server = 5;</code>
     */
    MumbleProto.Mumble.UserStats.Stats getFromServer();

    /**
     * <pre>
     * Amount of UDP packets sent.
     * </pre>
     *
     * <code>optional uint32 udp_packets = 6;</code>
     */
    boolean hasUdpPackets();
    /**
     * <pre>
     * Amount of UDP packets sent.
     * </pre>
     *
     * <code>optional uint32 udp_packets = 6;</code>
     */
    int getUdpPackets();

    /**
     * <pre>
     * Amount of TCP packets sent.
     * </pre>
     *
     * <code>optional uint32 tcp_packets = 7;</code>
     */
    boolean hasTcpPackets();
    /**
     * <pre>
     * Amount of TCP packets sent.
     * </pre>
     *
     * <code>optional uint32 tcp_packets = 7;</code>
     */
    int getTcpPackets();

    /**
     * <pre>
     * UDP ping average.
     * </pre>
     *
     * <code>optional float udp_ping_avg = 8;</code>
     */
    boolean hasUdpPingAvg();
    /**
     * <pre>
     * UDP ping average.
     * </pre>
     *
     * <code>optional float udp_ping_avg = 8;</code>
     */
    float getUdpPingAvg();

    /**
     * <pre>
     * UDP ping variance.
     * </pre>
     *
     * <code>optional float udp_ping_var = 9;</code>
     */
    boolean hasUdpPingVar();
    /**
     * <pre>
     * UDP ping variance.
     * </pre>
     *
     * <code>optional float udp_ping_var = 9;</code>
     */
    float getUdpPingVar();

    /**
     * <pre>
     * TCP ping average.
     * </pre>
     *
     * <code>optional float tcp_ping_avg = 10;</code>
     */
    boolean hasTcpPingAvg();
    /**
     * <pre>
     * TCP ping average.
     * </pre>
     *
     * <code>optional float tcp_ping_avg = 10;</code>
     */
    float getTcpPingAvg();

    /**
     * <pre>
     * TCP ping variance.
     * </pre>
     *
     * <code>optional float tcp_ping_var = 11;</code>
     */
    boolean hasTcpPingVar();
    /**
     * <pre>
     * TCP ping variance.
     * </pre>
     *
     * <code>optional float tcp_ping_var = 11;</code>
     */
    float getTcpPingVar();

    /**
     * <pre>
     * Client version.
     * </pre>
     *
     * <code>optional .MumbleProto.Version version = 12;</code>
     */
    boolean hasVersion();
    /**
     * <pre>
     * Client version.
     * </pre>
     *
     * <code>optional .MumbleProto.Version version = 12;</code>
     */
    MumbleProto.Mumble.Version getVersion();

    /**
     * <pre>
     * A list of CELT bitstream version constants supported by the client of this
     * user.
     * </pre>
     *
     * <code>repeated int32 celt_versions = 13;</code>
     */
    java.util.List<java.lang.Integer> getCeltVersionsList();
    /**
     * <pre>
     * A list of CELT bitstream version constants supported by the client of this
     * user.
     * </pre>
     *
     * <code>repeated int32 celt_versions = 13;</code>
     */
    int getCeltVersionsCount();
    /**
     * <pre>
     * A list of CELT bitstream version constants supported by the client of this
     * user.
     * </pre>
     *
     * <code>repeated int32 celt_versions = 13;</code>
     */
    int getCeltVersions(int index);

    /**
     * <pre>
     * Client IP address.
     * </pre>
     *
     * <code>optional bytes address = 14;</code>
     */
    boolean hasAddress();
    /**
     * <pre>
     * Client IP address.
     * </pre>
     *
     * <code>optional bytes address = 14;</code>
     */
    com.google.protobuf.ByteString getAddress();

    /**
     * <pre>
     * Bandwith used by this client.
     * </pre>
     *
     * <code>optional uint32 bandwidth = 15;</code>
     */
    boolean hasBandwidth();
    /**
     * <pre>
     * Bandwith used by this client.
     * </pre>
     *
     * <code>optional uint32 bandwidth = 15;</code>
     */
    int getBandwidth();

    /**
     * <pre>
     * Connection duration.
     * </pre>
     *
     * <code>optional uint32 onlinesecs = 16;</code>
     */
    boolean hasOnlinesecs();
    /**
     * <pre>
     * Connection duration.
     * </pre>
     *
     * <code>optional uint32 onlinesecs = 16;</code>
     */
    int getOnlinesecs();

    /**
     * <pre>
     * Duration since last activity.
     * </pre>
     *
     * <code>optional uint32 idlesecs = 17;</code>
     */
    boolean hasIdlesecs();
    /**
     * <pre>
     * Duration since last activity.
     * </pre>
     *
     * <code>optional uint32 idlesecs = 17;</code>
     */
    int getIdlesecs();

    /**
     * <pre>
     * True if the user has a strong certificate.
     * </pre>
     *
     * <code>optional bool strong_certificate = 18 [default = false];</code>
     */
    boolean hasStrongCertificate();
    /**
     * <pre>
     * True if the user has a strong certificate.
     * </pre>
     *
     * <code>optional bool strong_certificate = 18 [default = false];</code>
     */
    boolean getStrongCertificate();

    /**
     * <code>optional bool opus = 19 [default = false];</code>
     */
    boolean hasOpus();
    /**
     * <code>optional bool opus = 19 [default = false];</code>
     */
    boolean getOpus();
  }
  /**
   * <pre>
   * Used to communicate user stats between the server and clients.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.UserStats}
   */
  public  static final class UserStats extends
      com.google.protobuf.GeneratedMessageLite<
          UserStats, UserStats.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.UserStats)
      UserStatsOrBuilder {
    private UserStats() {
      certificates_ = emptyProtobufList();
      celtVersions_ = emptyIntList();
      address_ = com.google.protobuf.ByteString.EMPTY;
    }
    public interface StatsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:MumbleProto.UserStats.Stats)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * The amount of good packets received.
       * </pre>
       *
       * <code>optional uint32 good = 1;</code>
       */
      boolean hasGood();
      /**
       * <pre>
       * The amount of good packets received.
       * </pre>
       *
       * <code>optional uint32 good = 1;</code>
       */
      int getGood();

      /**
       * <pre>
       * The amount of late packets received.
       * </pre>
       *
       * <code>optional uint32 late = 2;</code>
       */
      boolean hasLate();
      /**
       * <pre>
       * The amount of late packets received.
       * </pre>
       *
       * <code>optional uint32 late = 2;</code>
       */
      int getLate();

      /**
       * <pre>
       * The amount of packets never received.
       * </pre>
       *
       * <code>optional uint32 lost = 3;</code>
       */
      boolean hasLost();
      /**
       * <pre>
       * The amount of packets never received.
       * </pre>
       *
       * <code>optional uint32 lost = 3;</code>
       */
      int getLost();

      /**
       * <pre>
       * The amount of nonce resyncs.
       * </pre>
       *
       * <code>optional uint32 resync = 4;</code>
       */
      boolean hasResync();
      /**
       * <pre>
       * The amount of nonce resyncs.
       * </pre>
       *
       * <code>optional uint32 resync = 4;</code>
       */
      int getResync();
    }
    /**
     * Protobuf type {@code MumbleProto.UserStats.Stats}
     */
    public  static final class Stats extends
        com.google.protobuf.GeneratedMessageLite<
            Stats, Stats.Builder> implements
        // @@protoc_insertion_point(message_implements:MumbleProto.UserStats.Stats)
        StatsOrBuilder {
      private Stats() {
      }
      private int bitField0_;
      public static final int GOOD_FIELD_NUMBER = 1;
      private int good_;
      /**
       * <pre>
       * The amount of good packets received.
       * </pre>
       *
       * <code>optional uint32 good = 1;</code>
       */
      @java.lang.Override
      public boolean hasGood() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The amount of good packets received.
       * </pre>
       *
       * <code>optional uint32 good = 1;</code>
       */
      @java.lang.Override
      public int getGood() {
        return good_;
      }
      /**
       * <pre>
       * The amount of good packets received.
       * </pre>
       *
       * <code>optional uint32 good = 1;</code>
       */
      private void setGood(int value) {
        bitField0_ |= 0x00000001;
        good_ = value;
      }
      /**
       * <pre>
       * The amount of good packets received.
       * </pre>
       *
       * <code>optional uint32 good = 1;</code>
       */
      private void clearGood() {
        bitField0_ = (bitField0_ & ~0x00000001);
        good_ = 0;
      }

      public static final int LATE_FIELD_NUMBER = 2;
      private int late_;
      /**
       * <pre>
       * The amount of late packets received.
       * </pre>
       *
       * <code>optional uint32 late = 2;</code>
       */
      @java.lang.Override
      public boolean hasLate() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The amount of late packets received.
       * </pre>
       *
       * <code>optional uint32 late = 2;</code>
       */
      @java.lang.Override
      public int getLate() {
        return late_;
      }
      /**
       * <pre>
       * The amount of late packets received.
       * </pre>
       *
       * <code>optional uint32 late = 2;</code>
       */
      private void setLate(int value) {
        bitField0_ |= 0x00000002;
        late_ = value;
      }
      /**
       * <pre>
       * The amount of late packets received.
       * </pre>
       *
       * <code>optional uint32 late = 2;</code>
       */
      private void clearLate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        late_ = 0;
      }

      public static final int LOST_FIELD_NUMBER = 3;
      private int lost_;
      /**
       * <pre>
       * The amount of packets never received.
       * </pre>
       *
       * <code>optional uint32 lost = 3;</code>
       */
      @java.lang.Override
      public boolean hasLost() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The amount of packets never received.
       * </pre>
       *
       * <code>optional uint32 lost = 3;</code>
       */
      @java.lang.Override
      public int getLost() {
        return lost_;
      }
      /**
       * <pre>
       * The amount of packets never received.
       * </pre>
       *
       * <code>optional uint32 lost = 3;</code>
       */
      private void setLost(int value) {
        bitField0_ |= 0x00000004;
        lost_ = value;
      }
      /**
       * <pre>
       * The amount of packets never received.
       * </pre>
       *
       * <code>optional uint32 lost = 3;</code>
       */
      private void clearLost() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lost_ = 0;
      }

      public static final int RESYNC_FIELD_NUMBER = 4;
      private int resync_;
      /**
       * <pre>
       * The amount of nonce resyncs.
       * </pre>
       *
       * <code>optional uint32 resync = 4;</code>
       */
      @java.lang.Override
      public boolean hasResync() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The amount of nonce resyncs.
       * </pre>
       *
       * <code>optional uint32 resync = 4;</code>
       */
      @java.lang.Override
      public int getResync() {
        return resync_;
      }
      /**
       * <pre>
       * The amount of nonce resyncs.
       * </pre>
       *
       * <code>optional uint32 resync = 4;</code>
       */
      private void setResync(int value) {
        bitField0_ |= 0x00000008;
        resync_ = value;
      }
      /**
       * <pre>
       * The amount of nonce resyncs.
       * </pre>
       *
       * <code>optional uint32 resync = 4;</code>
       */
      private void clearResync() {
        bitField0_ = (bitField0_ & ~0x00000008);
        resync_ = 0;
      }

      public static MumbleProto.Mumble.UserStats.Stats parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static MumbleProto.Mumble.UserStats.Stats parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static MumbleProto.Mumble.UserStats.Stats parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static MumbleProto.Mumble.UserStats.Stats parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static MumbleProto.Mumble.UserStats.Stats parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static MumbleProto.Mumble.UserStats.Stats parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static MumbleProto.Mumble.UserStats.Stats parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static MumbleProto.Mumble.UserStats.Stats parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static MumbleProto.Mumble.UserStats.Stats parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static MumbleProto.Mumble.UserStats.Stats parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static MumbleProto.Mumble.UserStats.Stats parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static MumbleProto.Mumble.UserStats.Stats parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(MumbleProto.Mumble.UserStats.Stats prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * Protobuf type {@code MumbleProto.UserStats.Stats}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            MumbleProto.Mumble.UserStats.Stats, Builder> implements
          // @@protoc_insertion_point(builder_implements:MumbleProto.UserStats.Stats)
          MumbleProto.Mumble.UserStats.StatsOrBuilder {
        // Construct using MumbleProto.Mumble.UserStats.Stats.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * The amount of good packets received.
         * </pre>
         *
         * <code>optional uint32 good = 1;</code>
         */
        @java.lang.Override
        public boolean hasGood() {
          return instance.hasGood();
        }
        /**
         * <pre>
         * The amount of good packets received.
         * </pre>
         *
         * <code>optional uint32 good = 1;</code>
         */
        @java.lang.Override
        public int getGood() {
          return instance.getGood();
        }
        /**
         * <pre>
         * The amount of good packets received.
         * </pre>
         *
         * <code>optional uint32 good = 1;</code>
         */
        public Builder setGood(int value) {
          copyOnWrite();
          instance.setGood(value);
          return this;
        }
        /**
         * <pre>
         * The amount of good packets received.
         * </pre>
         *
         * <code>optional uint32 good = 1;</code>
         */
        public Builder clearGood() {
          copyOnWrite();
          instance.clearGood();
          return this;
        }

        /**
         * <pre>
         * The amount of late packets received.
         * </pre>
         *
         * <code>optional uint32 late = 2;</code>
         */
        @java.lang.Override
        public boolean hasLate() {
          return instance.hasLate();
        }
        /**
         * <pre>
         * The amount of late packets received.
         * </pre>
         *
         * <code>optional uint32 late = 2;</code>
         */
        @java.lang.Override
        public int getLate() {
          return instance.getLate();
        }
        /**
         * <pre>
         * The amount of late packets received.
         * </pre>
         *
         * <code>optional uint32 late = 2;</code>
         */
        public Builder setLate(int value) {
          copyOnWrite();
          instance.setLate(value);
          return this;
        }
        /**
         * <pre>
         * The amount of late packets received.
         * </pre>
         *
         * <code>optional uint32 late = 2;</code>
         */
        public Builder clearLate() {
          copyOnWrite();
          instance.clearLate();
          return this;
        }

        /**
         * <pre>
         * The amount of packets never received.
         * </pre>
         *
         * <code>optional uint32 lost = 3;</code>
         */
        @java.lang.Override
        public boolean hasLost() {
          return instance.hasLost();
        }
        /**
         * <pre>
         * The amount of packets never received.
         * </pre>
         *
         * <code>optional uint32 lost = 3;</code>
         */
        @java.lang.Override
        public int getLost() {
          return instance.getLost();
        }
        /**
         * <pre>
         * The amount of packets never received.
         * </pre>
         *
         * <code>optional uint32 lost = 3;</code>
         */
        public Builder setLost(int value) {
          copyOnWrite();
          instance.setLost(value);
          return this;
        }
        /**
         * <pre>
         * The amount of packets never received.
         * </pre>
         *
         * <code>optional uint32 lost = 3;</code>
         */
        public Builder clearLost() {
          copyOnWrite();
          instance.clearLost();
          return this;
        }

        /**
         * <pre>
         * The amount of nonce resyncs.
         * </pre>
         *
         * <code>optional uint32 resync = 4;</code>
         */
        @java.lang.Override
        public boolean hasResync() {
          return instance.hasResync();
        }
        /**
         * <pre>
         * The amount of nonce resyncs.
         * </pre>
         *
         * <code>optional uint32 resync = 4;</code>
         */
        @java.lang.Override
        public int getResync() {
          return instance.getResync();
        }
        /**
         * <pre>
         * The amount of nonce resyncs.
         * </pre>
         *
         * <code>optional uint32 resync = 4;</code>
         */
        public Builder setResync(int value) {
          copyOnWrite();
          instance.setResync(value);
          return this;
        }
        /**
         * <pre>
         * The amount of nonce resyncs.
         * </pre>
         *
         * <code>optional uint32 resync = 4;</code>
         */
        public Builder clearResync() {
          copyOnWrite();
          instance.clearResync();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:MumbleProto.UserStats.Stats)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new MumbleProto.Mumble.UserStats.Stats();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "bitField0_",
                "good_",
                "late_",
                "lost_",
                "resync_",
              };
              java.lang.String info =
                  "\u0001\u0004\u0000\u0001\u0001\u0004\u0004\u0000\u0000\u0000\u0001\u000b\u0000\u0002" +
                  "\u000b\u0001\u0003\u000b\u0002\u0004\u000b\u0003";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<MumbleProto.Mumble.UserStats.Stats> parser = PARSER;
            if (parser == null) {
              synchronized (MumbleProto.Mumble.UserStats.Stats.class) {
                parser = PARSER;
                if (parser == null) {
                  parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:MumbleProto.UserStats.Stats)
      private static final MumbleProto.Mumble.UserStats.Stats DEFAULT_INSTANCE;
      static {
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = new Stats();
      }

      static {
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          Stats.class, DEFAULT_INSTANCE);
      }
      public static MumbleProto.Mumble.UserStats.Stats getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Stats> PARSER;

      public static com.google.protobuf.Parser<Stats> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int SESSION_FIELD_NUMBER = 1;
    private int session_;
    /**
     * <pre>
     * User whose stats these are.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    @java.lang.Override
    public boolean hasSession() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * User whose stats these are.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    @java.lang.Override
    public int getSession() {
      return session_;
    }
    /**
     * <pre>
     * User whose stats these are.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    private void setSession(int value) {
      bitField0_ |= 0x00000001;
      session_ = value;
    }
    /**
     * <pre>
     * User whose stats these are.
     * </pre>
     *
     * <code>optional uint32 session = 1;</code>
     */
    private void clearSession() {
      bitField0_ = (bitField0_ & ~0x00000001);
      session_ = 0;
    }

    public static final int STATS_ONLY_FIELD_NUMBER = 2;
    private boolean statsOnly_;
    /**
     * <pre>
     * True if the message contains only mutable stats (packets, ping).
     * </pre>
     *
     * <code>optional bool stats_only = 2 [default = false];</code>
     */
    @java.lang.Override
    public boolean hasStatsOnly() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * True if the message contains only mutable stats (packets, ping).
     * </pre>
     *
     * <code>optional bool stats_only = 2 [default = false];</code>
     */
    @java.lang.Override
    public boolean getStatsOnly() {
      return statsOnly_;
    }
    /**
     * <pre>
     * True if the message contains only mutable stats (packets, ping).
     * </pre>
     *
     * <code>optional bool stats_only = 2 [default = false];</code>
     */
    private void setStatsOnly(boolean value) {
      bitField0_ |= 0x00000002;
      statsOnly_ = value;
    }
    /**
     * <pre>
     * True if the message contains only mutable stats (packets, ping).
     * </pre>
     *
     * <code>optional bool stats_only = 2 [default = false];</code>
     */
    private void clearStatsOnly() {
      bitField0_ = (bitField0_ & ~0x00000002);
      statsOnly_ = false;
    }

    public static final int CERTIFICATES_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> certificates_;
    /**
     * <pre>
     * Full user certificate chain of the user certificate in DER format.
     * </pre>
     *
     * <code>repeated bytes certificates = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getCertificatesList() {
      return certificates_;
    }
    /**
     * <pre>
     * Full user certificate chain of the user certificate in DER format.
     * </pre>
     *
     * <code>repeated bytes certificates = 3;</code>
     */
    @java.lang.Override
    public int getCertificatesCount() {
      return certificates_.size();
    }
    /**
     * <pre>
     * Full user certificate chain of the user certificate in DER format.
     * </pre>
     *
     * <code>repeated bytes certificates = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCertificates(int index) {
      return certificates_.get(index);
    }
    private void ensureCertificatesIsMutable() {
      if (!certificates_.isModifiable()) {
        certificates_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(certificates_);
       }
    }
    /**
     * <pre>
     * Full user certificate chain of the user certificate in DER format.
     * </pre>
     *
     * <code>repeated bytes certificates = 3;</code>
     */
    private void setCertificates(
        int index, com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureCertificatesIsMutable();
      certificates_.set(index, value);
    }
    /**
     * <pre>
     * Full user certificate chain of the user certificate in DER format.
     * </pre>
     *
     * <code>repeated bytes certificates = 3;</code>
     */
    private void addCertificates(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureCertificatesIsMutable();
      certificates_.add(value);
    }
    /**
     * <pre>
     * Full user certificate chain of the user certificate in DER format.
     * </pre>
     *
     * <code>repeated bytes certificates = 3;</code>
     */
    private void addAllCertificates(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensureCertificatesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, certificates_);
    }
    /**
     * <pre>
     * Full user certificate chain of the user certificate in DER format.
     * </pre>
     *
     * <code>repeated bytes certificates = 3;</code>
     */
    private void clearCertificates() {
      certificates_ = emptyProtobufList();
    }

    public static final int FROM_CLIENT_FIELD_NUMBER = 4;
    private MumbleProto.Mumble.UserStats.Stats fromClient_;
    /**
     * <pre>
     * Packet statistics for packets received from the client.
     * </pre>
     *
     * <code>optional .MumbleProto.UserStats.Stats from_client = 4;</code>
     */
    @java.lang.Override
    public boolean hasFromClient() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Packet statistics for packets received from the client.
     * </pre>
     *
     * <code>optional .MumbleProto.UserStats.Stats from_client = 4;</code>
     */
    @java.lang.Override
    public MumbleProto.Mumble.UserStats.Stats getFromClient() {
      return fromClient_ == null ? MumbleProto.Mumble.UserStats.Stats.getDefaultInstance() : fromClient_;
    }
    /**
     * <pre>
     * Packet statistics for packets received from the client.
     * </pre>
     *
     * <code>optional .MumbleProto.UserStats.Stats from_client = 4;</code>
     */
    private void setFromClient(MumbleProto.Mumble.UserStats.Stats value) {
      if (value == null) {
        throw new NullPointerException();
      }
      fromClient_ = value;
      bitField0_ |= 0x00000004;
      }
    /**
     * <pre>
     * Packet statistics for packets received from the client.
     * </pre>
     *
     * <code>optional .MumbleProto.UserStats.Stats from_client = 4;</code>
     */
    private void setFromClient(
        MumbleProto.Mumble.UserStats.Stats.Builder builderForValue) {
      fromClient_ = builderForValue.build();
      bitField0_ |= 0x00000004;
    }
    /**
     * <pre>
     * Packet statistics for packets received from the client.
     * </pre>
     *
     * <code>optional .MumbleProto.UserStats.Stats from_client = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeFromClient(MumbleProto.Mumble.UserStats.Stats value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (fromClient_ != null &&
          fromClient_ != MumbleProto.Mumble.UserStats.Stats.getDefaultInstance()) {
        fromClient_ =
          MumbleProto.Mumble.UserStats.Stats.newBuilder(fromClient_).mergeFrom(value).buildPartial();
      } else {
        fromClient_ = value;
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <pre>
     * Packet statistics for packets received from the client.
     * </pre>
     *
     * <code>optional .MumbleProto.UserStats.Stats from_client = 4;</code>
     */
    private void clearFromClient() {  fromClient_ = null;
      bitField0_ = (bitField0_ & ~0x00000004);
    }

    public static final int FROM_SERVER_FIELD_NUMBER = 5;
    private MumbleProto.Mumble.UserStats.Stats fromServer_;
    /**
     * <pre>
     * Packet statistics for packets sent by the server.
     * </pre>
     *
     * <code>optional .MumbleProto.UserStats.Stats from_server = 5;</code>
     */
    @java.lang.Override
    public boolean hasFromServer() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Packet statistics for packets sent by the server.
     * </pre>
     *
     * <code>optional .MumbleProto.UserStats.Stats from_server = 5;</code>
     */
    @java.lang.Override
    public MumbleProto.Mumble.UserStats.Stats getFromServer() {
      return fromServer_ == null ? MumbleProto.Mumble.UserStats.Stats.getDefaultInstance() : fromServer_;
    }
    /**
     * <pre>
     * Packet statistics for packets sent by the server.
     * </pre>
     *
     * <code>optional .MumbleProto.UserStats.Stats from_server = 5;</code>
     */
    private void setFromServer(MumbleProto.Mumble.UserStats.Stats value) {
      if (value == null) {
        throw new NullPointerException();
      }
      fromServer_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <pre>
     * Packet statistics for packets sent by the server.
     * </pre>
     *
     * <code>optional .MumbleProto.UserStats.Stats from_server = 5;</code>
     */
    private void setFromServer(
        MumbleProto.Mumble.UserStats.Stats.Builder builderForValue) {
      fromServer_ = builderForValue.build();
      bitField0_ |= 0x00000008;
    }
    /**
     * <pre>
     * Packet statistics for packets sent by the server.
     * </pre>
     *
     * <code>optional .MumbleProto.UserStats.Stats from_server = 5;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeFromServer(MumbleProto.Mumble.UserStats.Stats value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (fromServer_ != null &&
          fromServer_ != MumbleProto.Mumble.UserStats.Stats.getDefaultInstance()) {
        fromServer_ =
          MumbleProto.Mumble.UserStats.Stats.newBuilder(fromServer_).mergeFrom(value).buildPartial();
      } else {
        fromServer_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <pre>
     * Packet statistics for packets sent by the server.
     * </pre>
     *
     * <code>optional .MumbleProto.UserStats.Stats from_server = 5;</code>
     */
    private void clearFromServer() {  fromServer_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int UDP_PACKETS_FIELD_NUMBER = 6;
    private int udpPackets_;
    /**
     * <pre>
     * Amount of UDP packets sent.
     * </pre>
     *
     * <code>optional uint32 udp_packets = 6;</code>
     */
    @java.lang.Override
    public boolean hasUdpPackets() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Amount of UDP packets sent.
     * </pre>
     *
     * <code>optional uint32 udp_packets = 6;</code>
     */
    @java.lang.Override
    public int getUdpPackets() {
      return udpPackets_;
    }
    /**
     * <pre>
     * Amount of UDP packets sent.
     * </pre>
     *
     * <code>optional uint32 udp_packets = 6;</code>
     */
    private void setUdpPackets(int value) {
      bitField0_ |= 0x00000010;
      udpPackets_ = value;
    }
    /**
     * <pre>
     * Amount of UDP packets sent.
     * </pre>
     *
     * <code>optional uint32 udp_packets = 6;</code>
     */
    private void clearUdpPackets() {
      bitField0_ = (bitField0_ & ~0x00000010);
      udpPackets_ = 0;
    }

    public static final int TCP_PACKETS_FIELD_NUMBER = 7;
    private int tcpPackets_;
    /**
     * <pre>
     * Amount of TCP packets sent.
     * </pre>
     *
     * <code>optional uint32 tcp_packets = 7;</code>
     */
    @java.lang.Override
    public boolean hasTcpPackets() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Amount of TCP packets sent.
     * </pre>
     *
     * <code>optional uint32 tcp_packets = 7;</code>
     */
    @java.lang.Override
    public int getTcpPackets() {
      return tcpPackets_;
    }
    /**
     * <pre>
     * Amount of TCP packets sent.
     * </pre>
     *
     * <code>optional uint32 tcp_packets = 7;</code>
     */
    private void setTcpPackets(int value) {
      bitField0_ |= 0x00000020;
      tcpPackets_ = value;
    }
    /**
     * <pre>
     * Amount of TCP packets sent.
     * </pre>
     *
     * <code>optional uint32 tcp_packets = 7;</code>
     */
    private void clearTcpPackets() {
      bitField0_ = (bitField0_ & ~0x00000020);
      tcpPackets_ = 0;
    }

    public static final int UDP_PING_AVG_FIELD_NUMBER = 8;
    private float udpPingAvg_;
    /**
     * <pre>
     * UDP ping average.
     * </pre>
     *
     * <code>optional float udp_ping_avg = 8;</code>
     */
    @java.lang.Override
    public boolean hasUdpPingAvg() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * UDP ping average.
     * </pre>
     *
     * <code>optional float udp_ping_avg = 8;</code>
     */
    @java.lang.Override
    public float getUdpPingAvg() {
      return udpPingAvg_;
    }
    /**
     * <pre>
     * UDP ping average.
     * </pre>
     *
     * <code>optional float udp_ping_avg = 8;</code>
     */
    private void setUdpPingAvg(float value) {
      bitField0_ |= 0x00000040;
      udpPingAvg_ = value;
    }
    /**
     * <pre>
     * UDP ping average.
     * </pre>
     *
     * <code>optional float udp_ping_avg = 8;</code>
     */
    private void clearUdpPingAvg() {
      bitField0_ = (bitField0_ & ~0x00000040);
      udpPingAvg_ = 0F;
    }

    public static final int UDP_PING_VAR_FIELD_NUMBER = 9;
    private float udpPingVar_;
    /**
     * <pre>
     * UDP ping variance.
     * </pre>
     *
     * <code>optional float udp_ping_var = 9;</code>
     */
    @java.lang.Override
    public boolean hasUdpPingVar() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * UDP ping variance.
     * </pre>
     *
     * <code>optional float udp_ping_var = 9;</code>
     */
    @java.lang.Override
    public float getUdpPingVar() {
      return udpPingVar_;
    }
    /**
     * <pre>
     * UDP ping variance.
     * </pre>
     *
     * <code>optional float udp_ping_var = 9;</code>
     */
    private void setUdpPingVar(float value) {
      bitField0_ |= 0x00000080;
      udpPingVar_ = value;
    }
    /**
     * <pre>
     * UDP ping variance.
     * </pre>
     *
     * <code>optional float udp_ping_var = 9;</code>
     */
    private void clearUdpPingVar() {
      bitField0_ = (bitField0_ & ~0x00000080);
      udpPingVar_ = 0F;
    }

    public static final int TCP_PING_AVG_FIELD_NUMBER = 10;
    private float tcpPingAvg_;
    /**
     * <pre>
     * TCP ping average.
     * </pre>
     *
     * <code>optional float tcp_ping_avg = 10;</code>
     */
    @java.lang.Override
    public boolean hasTcpPingAvg() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * TCP ping average.
     * </pre>
     *
     * <code>optional float tcp_ping_avg = 10;</code>
     */
    @java.lang.Override
    public float getTcpPingAvg() {
      return tcpPingAvg_;
    }
    /**
     * <pre>
     * TCP ping average.
     * </pre>
     *
     * <code>optional float tcp_ping_avg = 10;</code>
     */
    private void setTcpPingAvg(float value) {
      bitField0_ |= 0x00000100;
      tcpPingAvg_ = value;
    }
    /**
     * <pre>
     * TCP ping average.
     * </pre>
     *
     * <code>optional float tcp_ping_avg = 10;</code>
     */
    private void clearTcpPingAvg() {
      bitField0_ = (bitField0_ & ~0x00000100);
      tcpPingAvg_ = 0F;
    }

    public static final int TCP_PING_VAR_FIELD_NUMBER = 11;
    private float tcpPingVar_;
    /**
     * <pre>
     * TCP ping variance.
     * </pre>
     *
     * <code>optional float tcp_ping_var = 11;</code>
     */
    @java.lang.Override
    public boolean hasTcpPingVar() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * TCP ping variance.
     * </pre>
     *
     * <code>optional float tcp_ping_var = 11;</code>
     */
    @java.lang.Override
    public float getTcpPingVar() {
      return tcpPingVar_;
    }
    /**
     * <pre>
     * TCP ping variance.
     * </pre>
     *
     * <code>optional float tcp_ping_var = 11;</code>
     */
    private void setTcpPingVar(float value) {
      bitField0_ |= 0x00000200;
      tcpPingVar_ = value;
    }
    /**
     * <pre>
     * TCP ping variance.
     * </pre>
     *
     * <code>optional float tcp_ping_var = 11;</code>
     */
    private void clearTcpPingVar() {
      bitField0_ = (bitField0_ & ~0x00000200);
      tcpPingVar_ = 0F;
    }

    public static final int VERSION_FIELD_NUMBER = 12;
    private MumbleProto.Mumble.Version version_;
    /**
     * <pre>
     * Client version.
     * </pre>
     *
     * <code>optional .MumbleProto.Version version = 12;</code>
     */
    @java.lang.Override
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * Client version.
     * </pre>
     *
     * <code>optional .MumbleProto.Version version = 12;</code>
     */
    @java.lang.Override
    public MumbleProto.Mumble.Version getVersion() {
      return version_ == null ? MumbleProto.Mumble.Version.getDefaultInstance() : version_;
    }
    /**
     * <pre>
     * Client version.
     * </pre>
     *
     * <code>optional .MumbleProto.Version version = 12;</code>
     */
    private void setVersion(MumbleProto.Mumble.Version value) {
      if (value == null) {
        throw new NullPointerException();
      }
      version_ = value;
      bitField0_ |= 0x00000400;
      }
    /**
     * <pre>
     * Client version.
     * </pre>
     *
     * <code>optional .MumbleProto.Version version = 12;</code>
     */
    private void setVersion(
        MumbleProto.Mumble.Version.Builder builderForValue) {
      version_ = builderForValue.build();
      bitField0_ |= 0x00000400;
    }
    /**
     * <pre>
     * Client version.
     * </pre>
     *
     * <code>optional .MumbleProto.Version version = 12;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeVersion(MumbleProto.Mumble.Version value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (version_ != null &&
          version_ != MumbleProto.Mumble.Version.getDefaultInstance()) {
        version_ =
          MumbleProto.Mumble.Version.newBuilder(version_).mergeFrom(value).buildPartial();
      } else {
        version_ = value;
      }
      bitField0_ |= 0x00000400;
    }
    /**
     * <pre>
     * Client version.
     * </pre>
     *
     * <code>optional .MumbleProto.Version version = 12;</code>
     */
    private void clearVersion() {  version_ = null;
      bitField0_ = (bitField0_ & ~0x00000400);
    }

    public static final int CELT_VERSIONS_FIELD_NUMBER = 13;
    private com.google.protobuf.Internal.IntList celtVersions_;
    /**
     * <pre>
     * A list of CELT bitstream version constants supported by the client of this
     * user.
     * </pre>
     *
     * <code>repeated int32 celt_versions = 13;</code>
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getCeltVersionsList() {
      return celtVersions_;
    }
    /**
     * <pre>
     * A list of CELT bitstream version constants supported by the client of this
     * user.
     * </pre>
     *
     * <code>repeated int32 celt_versions = 13;</code>
     */
    @java.lang.Override
    public int getCeltVersionsCount() {
      return celtVersions_.size();
    }
    /**
     * <pre>
     * A list of CELT bitstream version constants supported by the client of this
     * user.
     * </pre>
     *
     * <code>repeated int32 celt_versions = 13;</code>
     */
    @java.lang.Override
    public int getCeltVersions(int index) {
      return celtVersions_.getInt(index);
    }
    private void ensureCeltVersionsIsMutable() {
      if (!celtVersions_.isModifiable()) {
        celtVersions_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(celtVersions_);
       }
    }
    /**
     * <pre>
     * A list of CELT bitstream version constants supported by the client of this
     * user.
     * </pre>
     *
     * <code>repeated int32 celt_versions = 13;</code>
     */
    private void setCeltVersions(
        int index, int value) {
      ensureCeltVersionsIsMutable();
      celtVersions_.setInt(index, value);
    }
    /**
     * <pre>
     * A list of CELT bitstream version constants supported by the client of this
     * user.
     * </pre>
     *
     * <code>repeated int32 celt_versions = 13;</code>
     */
    private void addCeltVersions(int value) {
      ensureCeltVersionsIsMutable();
      celtVersions_.addInt(value);
    }
    /**
     * <pre>
     * A list of CELT bitstream version constants supported by the client of this
     * user.
     * </pre>
     *
     * <code>repeated int32 celt_versions = 13;</code>
     */
    private void addAllCeltVersions(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureCeltVersionsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, celtVersions_);
    }
    /**
     * <pre>
     * A list of CELT bitstream version constants supported by the client of this
     * user.
     * </pre>
     *
     * <code>repeated int32 celt_versions = 13;</code>
     */
    private void clearCeltVersions() {
      celtVersions_ = emptyIntList();
    }

    public static final int ADDRESS_FIELD_NUMBER = 14;
    private com.google.protobuf.ByteString address_;
    /**
     * <pre>
     * Client IP address.
     * </pre>
     *
     * <code>optional bytes address = 14;</code>
     */
    @java.lang.Override
    public boolean hasAddress() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * Client IP address.
     * </pre>
     *
     * <code>optional bytes address = 14;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getAddress() {
      return address_;
    }
    /**
     * <pre>
     * Client IP address.
     * </pre>
     *
     * <code>optional bytes address = 14;</code>
     */
    private void setAddress(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
      address_ = value;
    }
    /**
     * <pre>
     * Client IP address.
     * </pre>
     *
     * <code>optional bytes address = 14;</code>
     */
    private void clearAddress() {
      bitField0_ = (bitField0_ & ~0x00000800);
      address_ = getDefaultInstance().getAddress();
    }

    public static final int BANDWIDTH_FIELD_NUMBER = 15;
    private int bandwidth_;
    /**
     * <pre>
     * Bandwith used by this client.
     * </pre>
     *
     * <code>optional uint32 bandwidth = 15;</code>
     */
    @java.lang.Override
    public boolean hasBandwidth() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * Bandwith used by this client.
     * </pre>
     *
     * <code>optional uint32 bandwidth = 15;</code>
     */
    @java.lang.Override
    public int getBandwidth() {
      return bandwidth_;
    }
    /**
     * <pre>
     * Bandwith used by this client.
     * </pre>
     *
     * <code>optional uint32 bandwidth = 15;</code>
     */
    private void setBandwidth(int value) {
      bitField0_ |= 0x00001000;
      bandwidth_ = value;
    }
    /**
     * <pre>
     * Bandwith used by this client.
     * </pre>
     *
     * <code>optional uint32 bandwidth = 15;</code>
     */
    private void clearBandwidth() {
      bitField0_ = (bitField0_ & ~0x00001000);
      bandwidth_ = 0;
    }

    public static final int ONLINESECS_FIELD_NUMBER = 16;
    private int onlinesecs_;
    /**
     * <pre>
     * Connection duration.
     * </pre>
     *
     * <code>optional uint32 onlinesecs = 16;</code>
     */
    @java.lang.Override
    public boolean hasOnlinesecs() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     * Connection duration.
     * </pre>
     *
     * <code>optional uint32 onlinesecs = 16;</code>
     */
    @java.lang.Override
    public int getOnlinesecs() {
      return onlinesecs_;
    }
    /**
     * <pre>
     * Connection duration.
     * </pre>
     *
     * <code>optional uint32 onlinesecs = 16;</code>
     */
    private void setOnlinesecs(int value) {
      bitField0_ |= 0x00002000;
      onlinesecs_ = value;
    }
    /**
     * <pre>
     * Connection duration.
     * </pre>
     *
     * <code>optional uint32 onlinesecs = 16;</code>
     */
    private void clearOnlinesecs() {
      bitField0_ = (bitField0_ & ~0x00002000);
      onlinesecs_ = 0;
    }

    public static final int IDLESECS_FIELD_NUMBER = 17;
    private int idlesecs_;
    /**
     * <pre>
     * Duration since last activity.
     * </pre>
     *
     * <code>optional uint32 idlesecs = 17;</code>
     */
    @java.lang.Override
    public boolean hasIdlesecs() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <pre>
     * Duration since last activity.
     * </pre>
     *
     * <code>optional uint32 idlesecs = 17;</code>
     */
    @java.lang.Override
    public int getIdlesecs() {
      return idlesecs_;
    }
    /**
     * <pre>
     * Duration since last activity.
     * </pre>
     *
     * <code>optional uint32 idlesecs = 17;</code>
     */
    private void setIdlesecs(int value) {
      bitField0_ |= 0x00004000;
      idlesecs_ = value;
    }
    /**
     * <pre>
     * Duration since last activity.
     * </pre>
     *
     * <code>optional uint32 idlesecs = 17;</code>
     */
    private void clearIdlesecs() {
      bitField0_ = (bitField0_ & ~0x00004000);
      idlesecs_ = 0;
    }

    public static final int STRONG_CERTIFICATE_FIELD_NUMBER = 18;
    private boolean strongCertificate_;
    /**
     * <pre>
     * True if the user has a strong certificate.
     * </pre>
     *
     * <code>optional bool strong_certificate = 18 [default = false];</code>
     */
    @java.lang.Override
    public boolean hasStrongCertificate() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <pre>
     * True if the user has a strong certificate.
     * </pre>
     *
     * <code>optional bool strong_certificate = 18 [default = false];</code>
     */
    @java.lang.Override
    public boolean getStrongCertificate() {
      return strongCertificate_;
    }
    /**
     * <pre>
     * True if the user has a strong certificate.
     * </pre>
     *
     * <code>optional bool strong_certificate = 18 [default = false];</code>
     */
    private void setStrongCertificate(boolean value) {
      bitField0_ |= 0x00008000;
      strongCertificate_ = value;
    }
    /**
     * <pre>
     * True if the user has a strong certificate.
     * </pre>
     *
     * <code>optional bool strong_certificate = 18 [default = false];</code>
     */
    private void clearStrongCertificate() {
      bitField0_ = (bitField0_ & ~0x00008000);
      strongCertificate_ = false;
    }

    public static final int OPUS_FIELD_NUMBER = 19;
    private boolean opus_;
    /**
     * <code>optional bool opus = 19 [default = false];</code>
     */
    @java.lang.Override
    public boolean hasOpus() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <code>optional bool opus = 19 [default = false];</code>
     */
    @java.lang.Override
    public boolean getOpus() {
      return opus_;
    }
    /**
     * <code>optional bool opus = 19 [default = false];</code>
     */
    private void setOpus(boolean value) {
      bitField0_ |= 0x00010000;
      opus_ = value;
    }
    /**
     * <code>optional bool opus = 19 [default = false];</code>
     */
    private void clearOpus() {
      bitField0_ = (bitField0_ & ~0x00010000);
      opus_ = false;
    }

    public static MumbleProto.Mumble.UserStats parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.UserStats parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.UserStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.UserStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.UserStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.UserStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.UserStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.UserStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.UserStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.UserStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.UserStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.UserStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.UserStats prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Used to communicate user stats between the server and clients.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.UserStats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.UserStats, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.UserStats)
        MumbleProto.Mumble.UserStatsOrBuilder {
      // Construct using MumbleProto.Mumble.UserStats.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * User whose stats these are.
       * </pre>
       *
       * <code>optional uint32 session = 1;</code>
       */
      @java.lang.Override
      public boolean hasSession() {
        return instance.hasSession();
      }
      /**
       * <pre>
       * User whose stats these are.
       * </pre>
       *
       * <code>optional uint32 session = 1;</code>
       */
      @java.lang.Override
      public int getSession() {
        return instance.getSession();
      }
      /**
       * <pre>
       * User whose stats these are.
       * </pre>
       *
       * <code>optional uint32 session = 1;</code>
       */
      public Builder setSession(int value) {
        copyOnWrite();
        instance.setSession(value);
        return this;
      }
      /**
       * <pre>
       * User whose stats these are.
       * </pre>
       *
       * <code>optional uint32 session = 1;</code>
       */
      public Builder clearSession() {
        copyOnWrite();
        instance.clearSession();
        return this;
      }

      /**
       * <pre>
       * True if the message contains only mutable stats (packets, ping).
       * </pre>
       *
       * <code>optional bool stats_only = 2 [default = false];</code>
       */
      @java.lang.Override
      public boolean hasStatsOnly() {
        return instance.hasStatsOnly();
      }
      /**
       * <pre>
       * True if the message contains only mutable stats (packets, ping).
       * </pre>
       *
       * <code>optional bool stats_only = 2 [default = false];</code>
       */
      @java.lang.Override
      public boolean getStatsOnly() {
        return instance.getStatsOnly();
      }
      /**
       * <pre>
       * True if the message contains only mutable stats (packets, ping).
       * </pre>
       *
       * <code>optional bool stats_only = 2 [default = false];</code>
       */
      public Builder setStatsOnly(boolean value) {
        copyOnWrite();
        instance.setStatsOnly(value);
        return this;
      }
      /**
       * <pre>
       * True if the message contains only mutable stats (packets, ping).
       * </pre>
       *
       * <code>optional bool stats_only = 2 [default = false];</code>
       */
      public Builder clearStatsOnly() {
        copyOnWrite();
        instance.clearStatsOnly();
        return this;
      }

      /**
       * <pre>
       * Full user certificate chain of the user certificate in DER format.
       * </pre>
       *
       * <code>repeated bytes certificates = 3;</code>
       */
      @java.lang.Override
      public java.util.List<com.google.protobuf.ByteString>
          getCertificatesList() {
        return java.util.Collections.unmodifiableList(
            instance.getCertificatesList());
      }
      /**
       * <pre>
       * Full user certificate chain of the user certificate in DER format.
       * </pre>
       *
       * <code>repeated bytes certificates = 3;</code>
       */
      @java.lang.Override
      public int getCertificatesCount() {
        return instance.getCertificatesCount();
      }
      /**
       * <pre>
       * Full user certificate chain of the user certificate in DER format.
       * </pre>
       *
       * <code>repeated bytes certificates = 3;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getCertificates(int index) {
        return instance.getCertificates(index);
      }
      /**
       * <pre>
       * Full user certificate chain of the user certificate in DER format.
       * </pre>
       *
       * <code>repeated bytes certificates = 3;</code>
       */
      public Builder setCertificates(
          int index, com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCertificates(index, value);
        return this;
      }
      /**
       * <pre>
       * Full user certificate chain of the user certificate in DER format.
       * </pre>
       *
       * <code>repeated bytes certificates = 3;</code>
       */
      public Builder addCertificates(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addCertificates(value);
        return this;
      }
      /**
       * <pre>
       * Full user certificate chain of the user certificate in DER format.
       * </pre>
       *
       * <code>repeated bytes certificates = 3;</code>
       */
      public Builder addAllCertificates(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        copyOnWrite();
        instance.addAllCertificates(values);
        return this;
      }
      /**
       * <pre>
       * Full user certificate chain of the user certificate in DER format.
       * </pre>
       *
       * <code>repeated bytes certificates = 3;</code>
       */
      public Builder clearCertificates() {
        copyOnWrite();
        instance.clearCertificates();
        return this;
      }

      /**
       * <pre>
       * Packet statistics for packets received from the client.
       * </pre>
       *
       * <code>optional .MumbleProto.UserStats.Stats from_client = 4;</code>
       */
      @java.lang.Override
      public boolean hasFromClient() {
        return instance.hasFromClient();
      }
      /**
       * <pre>
       * Packet statistics for packets received from the client.
       * </pre>
       *
       * <code>optional .MumbleProto.UserStats.Stats from_client = 4;</code>
       */
      @java.lang.Override
      public MumbleProto.Mumble.UserStats.Stats getFromClient() {
        return instance.getFromClient();
      }
      /**
       * <pre>
       * Packet statistics for packets received from the client.
       * </pre>
       *
       * <code>optional .MumbleProto.UserStats.Stats from_client = 4;</code>
       */
      public Builder setFromClient(MumbleProto.Mumble.UserStats.Stats value) {
        copyOnWrite();
        instance.setFromClient(value);
        return this;
        }
      /**
       * <pre>
       * Packet statistics for packets received from the client.
       * </pre>
       *
       * <code>optional .MumbleProto.UserStats.Stats from_client = 4;</code>
       */
      public Builder setFromClient(
          MumbleProto.Mumble.UserStats.Stats.Builder builderForValue) {
        copyOnWrite();
        instance.setFromClient(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Packet statistics for packets received from the client.
       * </pre>
       *
       * <code>optional .MumbleProto.UserStats.Stats from_client = 4;</code>
       */
      public Builder mergeFromClient(MumbleProto.Mumble.UserStats.Stats value) {
        copyOnWrite();
        instance.mergeFromClient(value);
        return this;
      }
      /**
       * <pre>
       * Packet statistics for packets received from the client.
       * </pre>
       *
       * <code>optional .MumbleProto.UserStats.Stats from_client = 4;</code>
       */
      public Builder clearFromClient() {  copyOnWrite();
        instance.clearFromClient();
        return this;
      }

      /**
       * <pre>
       * Packet statistics for packets sent by the server.
       * </pre>
       *
       * <code>optional .MumbleProto.UserStats.Stats from_server = 5;</code>
       */
      @java.lang.Override
      public boolean hasFromServer() {
        return instance.hasFromServer();
      }
      /**
       * <pre>
       * Packet statistics for packets sent by the server.
       * </pre>
       *
       * <code>optional .MumbleProto.UserStats.Stats from_server = 5;</code>
       */
      @java.lang.Override
      public MumbleProto.Mumble.UserStats.Stats getFromServer() {
        return instance.getFromServer();
      }
      /**
       * <pre>
       * Packet statistics for packets sent by the server.
       * </pre>
       *
       * <code>optional .MumbleProto.UserStats.Stats from_server = 5;</code>
       */
      public Builder setFromServer(MumbleProto.Mumble.UserStats.Stats value) {
        copyOnWrite();
        instance.setFromServer(value);
        return this;
        }
      /**
       * <pre>
       * Packet statistics for packets sent by the server.
       * </pre>
       *
       * <code>optional .MumbleProto.UserStats.Stats from_server = 5;</code>
       */
      public Builder setFromServer(
          MumbleProto.Mumble.UserStats.Stats.Builder builderForValue) {
        copyOnWrite();
        instance.setFromServer(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Packet statistics for packets sent by the server.
       * </pre>
       *
       * <code>optional .MumbleProto.UserStats.Stats from_server = 5;</code>
       */
      public Builder mergeFromServer(MumbleProto.Mumble.UserStats.Stats value) {
        copyOnWrite();
        instance.mergeFromServer(value);
        return this;
      }
      /**
       * <pre>
       * Packet statistics for packets sent by the server.
       * </pre>
       *
       * <code>optional .MumbleProto.UserStats.Stats from_server = 5;</code>
       */
      public Builder clearFromServer() {  copyOnWrite();
        instance.clearFromServer();
        return this;
      }

      /**
       * <pre>
       * Amount of UDP packets sent.
       * </pre>
       *
       * <code>optional uint32 udp_packets = 6;</code>
       */
      @java.lang.Override
      public boolean hasUdpPackets() {
        return instance.hasUdpPackets();
      }
      /**
       * <pre>
       * Amount of UDP packets sent.
       * </pre>
       *
       * <code>optional uint32 udp_packets = 6;</code>
       */
      @java.lang.Override
      public int getUdpPackets() {
        return instance.getUdpPackets();
      }
      /**
       * <pre>
       * Amount of UDP packets sent.
       * </pre>
       *
       * <code>optional uint32 udp_packets = 6;</code>
       */
      public Builder setUdpPackets(int value) {
        copyOnWrite();
        instance.setUdpPackets(value);
        return this;
      }
      /**
       * <pre>
       * Amount of UDP packets sent.
       * </pre>
       *
       * <code>optional uint32 udp_packets = 6;</code>
       */
      public Builder clearUdpPackets() {
        copyOnWrite();
        instance.clearUdpPackets();
        return this;
      }

      /**
       * <pre>
       * Amount of TCP packets sent.
       * </pre>
       *
       * <code>optional uint32 tcp_packets = 7;</code>
       */
      @java.lang.Override
      public boolean hasTcpPackets() {
        return instance.hasTcpPackets();
      }
      /**
       * <pre>
       * Amount of TCP packets sent.
       * </pre>
       *
       * <code>optional uint32 tcp_packets = 7;</code>
       */
      @java.lang.Override
      public int getTcpPackets() {
        return instance.getTcpPackets();
      }
      /**
       * <pre>
       * Amount of TCP packets sent.
       * </pre>
       *
       * <code>optional uint32 tcp_packets = 7;</code>
       */
      public Builder setTcpPackets(int value) {
        copyOnWrite();
        instance.setTcpPackets(value);
        return this;
      }
      /**
       * <pre>
       * Amount of TCP packets sent.
       * </pre>
       *
       * <code>optional uint32 tcp_packets = 7;</code>
       */
      public Builder clearTcpPackets() {
        copyOnWrite();
        instance.clearTcpPackets();
        return this;
      }

      /**
       * <pre>
       * UDP ping average.
       * </pre>
       *
       * <code>optional float udp_ping_avg = 8;</code>
       */
      @java.lang.Override
      public boolean hasUdpPingAvg() {
        return instance.hasUdpPingAvg();
      }
      /**
       * <pre>
       * UDP ping average.
       * </pre>
       *
       * <code>optional float udp_ping_avg = 8;</code>
       */
      @java.lang.Override
      public float getUdpPingAvg() {
        return instance.getUdpPingAvg();
      }
      /**
       * <pre>
       * UDP ping average.
       * </pre>
       *
       * <code>optional float udp_ping_avg = 8;</code>
       */
      public Builder setUdpPingAvg(float value) {
        copyOnWrite();
        instance.setUdpPingAvg(value);
        return this;
      }
      /**
       * <pre>
       * UDP ping average.
       * </pre>
       *
       * <code>optional float udp_ping_avg = 8;</code>
       */
      public Builder clearUdpPingAvg() {
        copyOnWrite();
        instance.clearUdpPingAvg();
        return this;
      }

      /**
       * <pre>
       * UDP ping variance.
       * </pre>
       *
       * <code>optional float udp_ping_var = 9;</code>
       */
      @java.lang.Override
      public boolean hasUdpPingVar() {
        return instance.hasUdpPingVar();
      }
      /**
       * <pre>
       * UDP ping variance.
       * </pre>
       *
       * <code>optional float udp_ping_var = 9;</code>
       */
      @java.lang.Override
      public float getUdpPingVar() {
        return instance.getUdpPingVar();
      }
      /**
       * <pre>
       * UDP ping variance.
       * </pre>
       *
       * <code>optional float udp_ping_var = 9;</code>
       */
      public Builder setUdpPingVar(float value) {
        copyOnWrite();
        instance.setUdpPingVar(value);
        return this;
      }
      /**
       * <pre>
       * UDP ping variance.
       * </pre>
       *
       * <code>optional float udp_ping_var = 9;</code>
       */
      public Builder clearUdpPingVar() {
        copyOnWrite();
        instance.clearUdpPingVar();
        return this;
      }

      /**
       * <pre>
       * TCP ping average.
       * </pre>
       *
       * <code>optional float tcp_ping_avg = 10;</code>
       */
      @java.lang.Override
      public boolean hasTcpPingAvg() {
        return instance.hasTcpPingAvg();
      }
      /**
       * <pre>
       * TCP ping average.
       * </pre>
       *
       * <code>optional float tcp_ping_avg = 10;</code>
       */
      @java.lang.Override
      public float getTcpPingAvg() {
        return instance.getTcpPingAvg();
      }
      /**
       * <pre>
       * TCP ping average.
       * </pre>
       *
       * <code>optional float tcp_ping_avg = 10;</code>
       */
      public Builder setTcpPingAvg(float value) {
        copyOnWrite();
        instance.setTcpPingAvg(value);
        return this;
      }
      /**
       * <pre>
       * TCP ping average.
       * </pre>
       *
       * <code>optional float tcp_ping_avg = 10;</code>
       */
      public Builder clearTcpPingAvg() {
        copyOnWrite();
        instance.clearTcpPingAvg();
        return this;
      }

      /**
       * <pre>
       * TCP ping variance.
       * </pre>
       *
       * <code>optional float tcp_ping_var = 11;</code>
       */
      @java.lang.Override
      public boolean hasTcpPingVar() {
        return instance.hasTcpPingVar();
      }
      /**
       * <pre>
       * TCP ping variance.
       * </pre>
       *
       * <code>optional float tcp_ping_var = 11;</code>
       */
      @java.lang.Override
      public float getTcpPingVar() {
        return instance.getTcpPingVar();
      }
      /**
       * <pre>
       * TCP ping variance.
       * </pre>
       *
       * <code>optional float tcp_ping_var = 11;</code>
       */
      public Builder setTcpPingVar(float value) {
        copyOnWrite();
        instance.setTcpPingVar(value);
        return this;
      }
      /**
       * <pre>
       * TCP ping variance.
       * </pre>
       *
       * <code>optional float tcp_ping_var = 11;</code>
       */
      public Builder clearTcpPingVar() {
        copyOnWrite();
        instance.clearTcpPingVar();
        return this;
      }

      /**
       * <pre>
       * Client version.
       * </pre>
       *
       * <code>optional .MumbleProto.Version version = 12;</code>
       */
      @java.lang.Override
      public boolean hasVersion() {
        return instance.hasVersion();
      }
      /**
       * <pre>
       * Client version.
       * </pre>
       *
       * <code>optional .MumbleProto.Version version = 12;</code>
       */
      @java.lang.Override
      public MumbleProto.Mumble.Version getVersion() {
        return instance.getVersion();
      }
      /**
       * <pre>
       * Client version.
       * </pre>
       *
       * <code>optional .MumbleProto.Version version = 12;</code>
       */
      public Builder setVersion(MumbleProto.Mumble.Version value) {
        copyOnWrite();
        instance.setVersion(value);
        return this;
        }
      /**
       * <pre>
       * Client version.
       * </pre>
       *
       * <code>optional .MumbleProto.Version version = 12;</code>
       */
      public Builder setVersion(
          MumbleProto.Mumble.Version.Builder builderForValue) {
        copyOnWrite();
        instance.setVersion(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Client version.
       * </pre>
       *
       * <code>optional .MumbleProto.Version version = 12;</code>
       */
      public Builder mergeVersion(MumbleProto.Mumble.Version value) {
        copyOnWrite();
        instance.mergeVersion(value);
        return this;
      }
      /**
       * <pre>
       * Client version.
       * </pre>
       *
       * <code>optional .MumbleProto.Version version = 12;</code>
       */
      public Builder clearVersion() {  copyOnWrite();
        instance.clearVersion();
        return this;
      }

      /**
       * <pre>
       * A list of CELT bitstream version constants supported by the client of this
       * user.
       * </pre>
       *
       * <code>repeated int32 celt_versions = 13;</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getCeltVersionsList() {
        return java.util.Collections.unmodifiableList(
            instance.getCeltVersionsList());
      }
      /**
       * <pre>
       * A list of CELT bitstream version constants supported by the client of this
       * user.
       * </pre>
       *
       * <code>repeated int32 celt_versions = 13;</code>
       */
      @java.lang.Override
      public int getCeltVersionsCount() {
        return instance.getCeltVersionsCount();
      }
      /**
       * <pre>
       * A list of CELT bitstream version constants supported by the client of this
       * user.
       * </pre>
       *
       * <code>repeated int32 celt_versions = 13;</code>
       */
      @java.lang.Override
      public int getCeltVersions(int index) {
        return instance.getCeltVersions(index);
      }
      /**
       * <pre>
       * A list of CELT bitstream version constants supported by the client of this
       * user.
       * </pre>
       *
       * <code>repeated int32 celt_versions = 13;</code>
       */
      public Builder setCeltVersions(
          int index, int value) {
        copyOnWrite();
        instance.setCeltVersions(index, value);
        return this;
      }
      /**
       * <pre>
       * A list of CELT bitstream version constants supported by the client of this
       * user.
       * </pre>
       *
       * <code>repeated int32 celt_versions = 13;</code>
       */
      public Builder addCeltVersions(int value) {
        copyOnWrite();
        instance.addCeltVersions(value);
        return this;
      }
      /**
       * <pre>
       * A list of CELT bitstream version constants supported by the client of this
       * user.
       * </pre>
       *
       * <code>repeated int32 celt_versions = 13;</code>
       */
      public Builder addAllCeltVersions(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllCeltVersions(values);
        return this;
      }
      /**
       * <pre>
       * A list of CELT bitstream version constants supported by the client of this
       * user.
       * </pre>
       *
       * <code>repeated int32 celt_versions = 13;</code>
       */
      public Builder clearCeltVersions() {
        copyOnWrite();
        instance.clearCeltVersions();
        return this;
      }

      /**
       * <pre>
       * Client IP address.
       * </pre>
       *
       * <code>optional bytes address = 14;</code>
       */
      @java.lang.Override
      public boolean hasAddress() {
        return instance.hasAddress();
      }
      /**
       * <pre>
       * Client IP address.
       * </pre>
       *
       * <code>optional bytes address = 14;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getAddress() {
        return instance.getAddress();
      }
      /**
       * <pre>
       * Client IP address.
       * </pre>
       *
       * <code>optional bytes address = 14;</code>
       */
      public Builder setAddress(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAddress(value);
        return this;
      }
      /**
       * <pre>
       * Client IP address.
       * </pre>
       *
       * <code>optional bytes address = 14;</code>
       */
      public Builder clearAddress() {
        copyOnWrite();
        instance.clearAddress();
        return this;
      }

      /**
       * <pre>
       * Bandwith used by this client.
       * </pre>
       *
       * <code>optional uint32 bandwidth = 15;</code>
       */
      @java.lang.Override
      public boolean hasBandwidth() {
        return instance.hasBandwidth();
      }
      /**
       * <pre>
       * Bandwith used by this client.
       * </pre>
       *
       * <code>optional uint32 bandwidth = 15;</code>
       */
      @java.lang.Override
      public int getBandwidth() {
        return instance.getBandwidth();
      }
      /**
       * <pre>
       * Bandwith used by this client.
       * </pre>
       *
       * <code>optional uint32 bandwidth = 15;</code>
       */
      public Builder setBandwidth(int value) {
        copyOnWrite();
        instance.setBandwidth(value);
        return this;
      }
      /**
       * <pre>
       * Bandwith used by this client.
       * </pre>
       *
       * <code>optional uint32 bandwidth = 15;</code>
       */
      public Builder clearBandwidth() {
        copyOnWrite();
        instance.clearBandwidth();
        return this;
      }

      /**
       * <pre>
       * Connection duration.
       * </pre>
       *
       * <code>optional uint32 onlinesecs = 16;</code>
       */
      @java.lang.Override
      public boolean hasOnlinesecs() {
        return instance.hasOnlinesecs();
      }
      /**
       * <pre>
       * Connection duration.
       * </pre>
       *
       * <code>optional uint32 onlinesecs = 16;</code>
       */
      @java.lang.Override
      public int getOnlinesecs() {
        return instance.getOnlinesecs();
      }
      /**
       * <pre>
       * Connection duration.
       * </pre>
       *
       * <code>optional uint32 onlinesecs = 16;</code>
       */
      public Builder setOnlinesecs(int value) {
        copyOnWrite();
        instance.setOnlinesecs(value);
        return this;
      }
      /**
       * <pre>
       * Connection duration.
       * </pre>
       *
       * <code>optional uint32 onlinesecs = 16;</code>
       */
      public Builder clearOnlinesecs() {
        copyOnWrite();
        instance.clearOnlinesecs();
        return this;
      }

      /**
       * <pre>
       * Duration since last activity.
       * </pre>
       *
       * <code>optional uint32 idlesecs = 17;</code>
       */
      @java.lang.Override
      public boolean hasIdlesecs() {
        return instance.hasIdlesecs();
      }
      /**
       * <pre>
       * Duration since last activity.
       * </pre>
       *
       * <code>optional uint32 idlesecs = 17;</code>
       */
      @java.lang.Override
      public int getIdlesecs() {
        return instance.getIdlesecs();
      }
      /**
       * <pre>
       * Duration since last activity.
       * </pre>
       *
       * <code>optional uint32 idlesecs = 17;</code>
       */
      public Builder setIdlesecs(int value) {
        copyOnWrite();
        instance.setIdlesecs(value);
        return this;
      }
      /**
       * <pre>
       * Duration since last activity.
       * </pre>
       *
       * <code>optional uint32 idlesecs = 17;</code>
       */
      public Builder clearIdlesecs() {
        copyOnWrite();
        instance.clearIdlesecs();
        return this;
      }

      /**
       * <pre>
       * True if the user has a strong certificate.
       * </pre>
       *
       * <code>optional bool strong_certificate = 18 [default = false];</code>
       */
      @java.lang.Override
      public boolean hasStrongCertificate() {
        return instance.hasStrongCertificate();
      }
      /**
       * <pre>
       * True if the user has a strong certificate.
       * </pre>
       *
       * <code>optional bool strong_certificate = 18 [default = false];</code>
       */
      @java.lang.Override
      public boolean getStrongCertificate() {
        return instance.getStrongCertificate();
      }
      /**
       * <pre>
       * True if the user has a strong certificate.
       * </pre>
       *
       * <code>optional bool strong_certificate = 18 [default = false];</code>
       */
      public Builder setStrongCertificate(boolean value) {
        copyOnWrite();
        instance.setStrongCertificate(value);
        return this;
      }
      /**
       * <pre>
       * True if the user has a strong certificate.
       * </pre>
       *
       * <code>optional bool strong_certificate = 18 [default = false];</code>
       */
      public Builder clearStrongCertificate() {
        copyOnWrite();
        instance.clearStrongCertificate();
        return this;
      }

      /**
       * <code>optional bool opus = 19 [default = false];</code>
       */
      @java.lang.Override
      public boolean hasOpus() {
        return instance.hasOpus();
      }
      /**
       * <code>optional bool opus = 19 [default = false];</code>
       */
      @java.lang.Override
      public boolean getOpus() {
        return instance.getOpus();
      }
      /**
       * <code>optional bool opus = 19 [default = false];</code>
       */
      public Builder setOpus(boolean value) {
        copyOnWrite();
        instance.setOpus(value);
        return this;
      }
      /**
       * <code>optional bool opus = 19 [default = false];</code>
       */
      public Builder clearOpus() {
        copyOnWrite();
        instance.clearOpus();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.UserStats)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.UserStats();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "session_",
              "statsOnly_",
              "certificates_",
              "fromClient_",
              "fromServer_",
              "udpPackets_",
              "tcpPackets_",
              "udpPingAvg_",
              "udpPingVar_",
              "tcpPingAvg_",
              "tcpPingVar_",
              "version_",
              "celtVersions_",
              "address_",
              "bandwidth_",
              "onlinesecs_",
              "idlesecs_",
              "strongCertificate_",
              "opus_",
            };
            java.lang.String info =
                "\u0001\u0013\u0000\u0001\u0001\u0013\u0013\u0000\u0002\u0000\u0001\u000b\u0000\u0002" +
                "\u0007\u0001\u0003\u001c\u0004\t\u0002\u0005\t\u0003\u0006\u000b\u0004\u0007\u000b" +
                "\u0005\b\u0001\u0006\t\u0001\u0007\n\u0001\b\u000b\u0001\t\f\t\n\r\u0016\u000e\n" +
                "\u000b\u000f\u000b\f\u0010\u000b\r\u0011\u000b\u000e\u0012\u0007\u000f\u0013\u0007" +
                "\u0010";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.UserStats> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.UserStats.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.UserStats)
    private static final MumbleProto.Mumble.UserStats DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new UserStats();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        UserStats.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.UserStats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<UserStats> PARSER;

    public static com.google.protobuf.Parser<UserStats> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RequestBlobOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.RequestBlob)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * sessions of the requested UserState textures.
     * </pre>
     *
     * <code>repeated uint32 session_texture = 1;</code>
     */
    java.util.List<java.lang.Integer> getSessionTextureList();
    /**
     * <pre>
     * sessions of the requested UserState textures.
     * </pre>
     *
     * <code>repeated uint32 session_texture = 1;</code>
     */
    int getSessionTextureCount();
    /**
     * <pre>
     * sessions of the requested UserState textures.
     * </pre>
     *
     * <code>repeated uint32 session_texture = 1;</code>
     */
    int getSessionTexture(int index);

    /**
     * <pre>
     * sessions of the requested UserState comments.
     * </pre>
     *
     * <code>repeated uint32 session_comment = 2;</code>
     */
    java.util.List<java.lang.Integer> getSessionCommentList();
    /**
     * <pre>
     * sessions of the requested UserState comments.
     * </pre>
     *
     * <code>repeated uint32 session_comment = 2;</code>
     */
    int getSessionCommentCount();
    /**
     * <pre>
     * sessions of the requested UserState comments.
     * </pre>
     *
     * <code>repeated uint32 session_comment = 2;</code>
     */
    int getSessionComment(int index);

    /**
     * <pre>
     * channel_ids of the requested ChannelState descriptions.
     * </pre>
     *
     * <code>repeated uint32 channel_description = 3;</code>
     */
    java.util.List<java.lang.Integer> getChannelDescriptionList();
    /**
     * <pre>
     * channel_ids of the requested ChannelState descriptions.
     * </pre>
     *
     * <code>repeated uint32 channel_description = 3;</code>
     */
    int getChannelDescriptionCount();
    /**
     * <pre>
     * channel_ids of the requested ChannelState descriptions.
     * </pre>
     *
     * <code>repeated uint32 channel_description = 3;</code>
     */
    int getChannelDescription(int index);
  }
  /**
   * <pre>
   * Used by the client to request binary data from the server. By default large
   * comments or textures are not sent within standard messages but instead the
   * hash is. If the client does not recognize the hash it may request the
   * resource when it needs it. The client does so by sending a RequestBlob
   * message with the correct fields filled with the user sessions or channel_ids
   * it wants to receive. The server replies to this by sending a new
   * UserState/ChannelState message with the resources filled even if they would
   * normally be transmitted as hashes.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.RequestBlob}
   */
  public  static final class RequestBlob extends
      com.google.protobuf.GeneratedMessageLite<
          RequestBlob, RequestBlob.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.RequestBlob)
      RequestBlobOrBuilder {
    private RequestBlob() {
      sessionTexture_ = emptyIntList();
      sessionComment_ = emptyIntList();
      channelDescription_ = emptyIntList();
    }
    public static final int SESSION_TEXTURE_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList sessionTexture_;
    /**
     * <pre>
     * sessions of the requested UserState textures.
     * </pre>
     *
     * <code>repeated uint32 session_texture = 1;</code>
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getSessionTextureList() {
      return sessionTexture_;
    }
    /**
     * <pre>
     * sessions of the requested UserState textures.
     * </pre>
     *
     * <code>repeated uint32 session_texture = 1;</code>
     */
    @java.lang.Override
    public int getSessionTextureCount() {
      return sessionTexture_.size();
    }
    /**
     * <pre>
     * sessions of the requested UserState textures.
     * </pre>
     *
     * <code>repeated uint32 session_texture = 1;</code>
     */
    @java.lang.Override
    public int getSessionTexture(int index) {
      return sessionTexture_.getInt(index);
    }
    private void ensureSessionTextureIsMutable() {
      if (!sessionTexture_.isModifiable()) {
        sessionTexture_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(sessionTexture_);
       }
    }
    /**
     * <pre>
     * sessions of the requested UserState textures.
     * </pre>
     *
     * <code>repeated uint32 session_texture = 1;</code>
     */
    private void setSessionTexture(
        int index, int value) {
      ensureSessionTextureIsMutable();
      sessionTexture_.setInt(index, value);
    }
    /**
     * <pre>
     * sessions of the requested UserState textures.
     * </pre>
     *
     * <code>repeated uint32 session_texture = 1;</code>
     */
    private void addSessionTexture(int value) {
      ensureSessionTextureIsMutable();
      sessionTexture_.addInt(value);
    }
    /**
     * <pre>
     * sessions of the requested UserState textures.
     * </pre>
     *
     * <code>repeated uint32 session_texture = 1;</code>
     */
    private void addAllSessionTexture(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureSessionTextureIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, sessionTexture_);
    }
    /**
     * <pre>
     * sessions of the requested UserState textures.
     * </pre>
     *
     * <code>repeated uint32 session_texture = 1;</code>
     */
    private void clearSessionTexture() {
      sessionTexture_ = emptyIntList();
    }

    public static final int SESSION_COMMENT_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList sessionComment_;
    /**
     * <pre>
     * sessions of the requested UserState comments.
     * </pre>
     *
     * <code>repeated uint32 session_comment = 2;</code>
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getSessionCommentList() {
      return sessionComment_;
    }
    /**
     * <pre>
     * sessions of the requested UserState comments.
     * </pre>
     *
     * <code>repeated uint32 session_comment = 2;</code>
     */
    @java.lang.Override
    public int getSessionCommentCount() {
      return sessionComment_.size();
    }
    /**
     * <pre>
     * sessions of the requested UserState comments.
     * </pre>
     *
     * <code>repeated uint32 session_comment = 2;</code>
     */
    @java.lang.Override
    public int getSessionComment(int index) {
      return sessionComment_.getInt(index);
    }
    private void ensureSessionCommentIsMutable() {
      if (!sessionComment_.isModifiable()) {
        sessionComment_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(sessionComment_);
       }
    }
    /**
     * <pre>
     * sessions of the requested UserState comments.
     * </pre>
     *
     * <code>repeated uint32 session_comment = 2;</code>
     */
    private void setSessionComment(
        int index, int value) {
      ensureSessionCommentIsMutable();
      sessionComment_.setInt(index, value);
    }
    /**
     * <pre>
     * sessions of the requested UserState comments.
     * </pre>
     *
     * <code>repeated uint32 session_comment = 2;</code>
     */
    private void addSessionComment(int value) {
      ensureSessionCommentIsMutable();
      sessionComment_.addInt(value);
    }
    /**
     * <pre>
     * sessions of the requested UserState comments.
     * </pre>
     *
     * <code>repeated uint32 session_comment = 2;</code>
     */
    private void addAllSessionComment(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureSessionCommentIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, sessionComment_);
    }
    /**
     * <pre>
     * sessions of the requested UserState comments.
     * </pre>
     *
     * <code>repeated uint32 session_comment = 2;</code>
     */
    private void clearSessionComment() {
      sessionComment_ = emptyIntList();
    }

    public static final int CHANNEL_DESCRIPTION_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList channelDescription_;
    /**
     * <pre>
     * channel_ids of the requested ChannelState descriptions.
     * </pre>
     *
     * <code>repeated uint32 channel_description = 3;</code>
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getChannelDescriptionList() {
      return channelDescription_;
    }
    /**
     * <pre>
     * channel_ids of the requested ChannelState descriptions.
     * </pre>
     *
     * <code>repeated uint32 channel_description = 3;</code>
     */
    @java.lang.Override
    public int getChannelDescriptionCount() {
      return channelDescription_.size();
    }
    /**
     * <pre>
     * channel_ids of the requested ChannelState descriptions.
     * </pre>
     *
     * <code>repeated uint32 channel_description = 3;</code>
     */
    @java.lang.Override
    public int getChannelDescription(int index) {
      return channelDescription_.getInt(index);
    }
    private void ensureChannelDescriptionIsMutable() {
      if (!channelDescription_.isModifiable()) {
        channelDescription_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(channelDescription_);
       }
    }
    /**
     * <pre>
     * channel_ids of the requested ChannelState descriptions.
     * </pre>
     *
     * <code>repeated uint32 channel_description = 3;</code>
     */
    private void setChannelDescription(
        int index, int value) {
      ensureChannelDescriptionIsMutable();
      channelDescription_.setInt(index, value);
    }
    /**
     * <pre>
     * channel_ids of the requested ChannelState descriptions.
     * </pre>
     *
     * <code>repeated uint32 channel_description = 3;</code>
     */
    private void addChannelDescription(int value) {
      ensureChannelDescriptionIsMutable();
      channelDescription_.addInt(value);
    }
    /**
     * <pre>
     * channel_ids of the requested ChannelState descriptions.
     * </pre>
     *
     * <code>repeated uint32 channel_description = 3;</code>
     */
    private void addAllChannelDescription(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureChannelDescriptionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, channelDescription_);
    }
    /**
     * <pre>
     * channel_ids of the requested ChannelState descriptions.
     * </pre>
     *
     * <code>repeated uint32 channel_description = 3;</code>
     */
    private void clearChannelDescription() {
      channelDescription_ = emptyIntList();
    }

    public static MumbleProto.Mumble.RequestBlob parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.RequestBlob parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.RequestBlob parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.RequestBlob parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.RequestBlob parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.RequestBlob parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.RequestBlob parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.RequestBlob parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.RequestBlob parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.RequestBlob parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.RequestBlob parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.RequestBlob parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.RequestBlob prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Used by the client to request binary data from the server. By default large
     * comments or textures are not sent within standard messages but instead the
     * hash is. If the client does not recognize the hash it may request the
     * resource when it needs it. The client does so by sending a RequestBlob
     * message with the correct fields filled with the user sessions or channel_ids
     * it wants to receive. The server replies to this by sending a new
     * UserState/ChannelState message with the resources filled even if they would
     * normally be transmitted as hashes.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.RequestBlob}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.RequestBlob, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.RequestBlob)
        MumbleProto.Mumble.RequestBlobOrBuilder {
      // Construct using MumbleProto.Mumble.RequestBlob.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * sessions of the requested UserState textures.
       * </pre>
       *
       * <code>repeated uint32 session_texture = 1;</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getSessionTextureList() {
        return java.util.Collections.unmodifiableList(
            instance.getSessionTextureList());
      }
      /**
       * <pre>
       * sessions of the requested UserState textures.
       * </pre>
       *
       * <code>repeated uint32 session_texture = 1;</code>
       */
      @java.lang.Override
      public int getSessionTextureCount() {
        return instance.getSessionTextureCount();
      }
      /**
       * <pre>
       * sessions of the requested UserState textures.
       * </pre>
       *
       * <code>repeated uint32 session_texture = 1;</code>
       */
      @java.lang.Override
      public int getSessionTexture(int index) {
        return instance.getSessionTexture(index);
      }
      /**
       * <pre>
       * sessions of the requested UserState textures.
       * </pre>
       *
       * <code>repeated uint32 session_texture = 1;</code>
       */
      public Builder setSessionTexture(
          int index, int value) {
        copyOnWrite();
        instance.setSessionTexture(index, value);
        return this;
      }
      /**
       * <pre>
       * sessions of the requested UserState textures.
       * </pre>
       *
       * <code>repeated uint32 session_texture = 1;</code>
       */
      public Builder addSessionTexture(int value) {
        copyOnWrite();
        instance.addSessionTexture(value);
        return this;
      }
      /**
       * <pre>
       * sessions of the requested UserState textures.
       * </pre>
       *
       * <code>repeated uint32 session_texture = 1;</code>
       */
      public Builder addAllSessionTexture(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllSessionTexture(values);
        return this;
      }
      /**
       * <pre>
       * sessions of the requested UserState textures.
       * </pre>
       *
       * <code>repeated uint32 session_texture = 1;</code>
       */
      public Builder clearSessionTexture() {
        copyOnWrite();
        instance.clearSessionTexture();
        return this;
      }

      /**
       * <pre>
       * sessions of the requested UserState comments.
       * </pre>
       *
       * <code>repeated uint32 session_comment = 2;</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getSessionCommentList() {
        return java.util.Collections.unmodifiableList(
            instance.getSessionCommentList());
      }
      /**
       * <pre>
       * sessions of the requested UserState comments.
       * </pre>
       *
       * <code>repeated uint32 session_comment = 2;</code>
       */
      @java.lang.Override
      public int getSessionCommentCount() {
        return instance.getSessionCommentCount();
      }
      /**
       * <pre>
       * sessions of the requested UserState comments.
       * </pre>
       *
       * <code>repeated uint32 session_comment = 2;</code>
       */
      @java.lang.Override
      public int getSessionComment(int index) {
        return instance.getSessionComment(index);
      }
      /**
       * <pre>
       * sessions of the requested UserState comments.
       * </pre>
       *
       * <code>repeated uint32 session_comment = 2;</code>
       */
      public Builder setSessionComment(
          int index, int value) {
        copyOnWrite();
        instance.setSessionComment(index, value);
        return this;
      }
      /**
       * <pre>
       * sessions of the requested UserState comments.
       * </pre>
       *
       * <code>repeated uint32 session_comment = 2;</code>
       */
      public Builder addSessionComment(int value) {
        copyOnWrite();
        instance.addSessionComment(value);
        return this;
      }
      /**
       * <pre>
       * sessions of the requested UserState comments.
       * </pre>
       *
       * <code>repeated uint32 session_comment = 2;</code>
       */
      public Builder addAllSessionComment(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllSessionComment(values);
        return this;
      }
      /**
       * <pre>
       * sessions of the requested UserState comments.
       * </pre>
       *
       * <code>repeated uint32 session_comment = 2;</code>
       */
      public Builder clearSessionComment() {
        copyOnWrite();
        instance.clearSessionComment();
        return this;
      }

      /**
       * <pre>
       * channel_ids of the requested ChannelState descriptions.
       * </pre>
       *
       * <code>repeated uint32 channel_description = 3;</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getChannelDescriptionList() {
        return java.util.Collections.unmodifiableList(
            instance.getChannelDescriptionList());
      }
      /**
       * <pre>
       * channel_ids of the requested ChannelState descriptions.
       * </pre>
       *
       * <code>repeated uint32 channel_description = 3;</code>
       */
      @java.lang.Override
      public int getChannelDescriptionCount() {
        return instance.getChannelDescriptionCount();
      }
      /**
       * <pre>
       * channel_ids of the requested ChannelState descriptions.
       * </pre>
       *
       * <code>repeated uint32 channel_description = 3;</code>
       */
      @java.lang.Override
      public int getChannelDescription(int index) {
        return instance.getChannelDescription(index);
      }
      /**
       * <pre>
       * channel_ids of the requested ChannelState descriptions.
       * </pre>
       *
       * <code>repeated uint32 channel_description = 3;</code>
       */
      public Builder setChannelDescription(
          int index, int value) {
        copyOnWrite();
        instance.setChannelDescription(index, value);
        return this;
      }
      /**
       * <pre>
       * channel_ids of the requested ChannelState descriptions.
       * </pre>
       *
       * <code>repeated uint32 channel_description = 3;</code>
       */
      public Builder addChannelDescription(int value) {
        copyOnWrite();
        instance.addChannelDescription(value);
        return this;
      }
      /**
       * <pre>
       * channel_ids of the requested ChannelState descriptions.
       * </pre>
       *
       * <code>repeated uint32 channel_description = 3;</code>
       */
      public Builder addAllChannelDescription(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllChannelDescription(values);
        return this;
      }
      /**
       * <pre>
       * channel_ids of the requested ChannelState descriptions.
       * </pre>
       *
       * <code>repeated uint32 channel_description = 3;</code>
       */
      public Builder clearChannelDescription() {
        copyOnWrite();
        instance.clearChannelDescription();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.RequestBlob)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.RequestBlob();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "sessionTexture_",
              "sessionComment_",
              "channelDescription_",
            };
            java.lang.String info =
                "\u0001\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0003\u0000\u0001\u001d\u0002\u001d" +
                "\u0003\u001d";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.RequestBlob> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.RequestBlob.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.RequestBlob)
    private static final MumbleProto.Mumble.RequestBlob DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new RequestBlob();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        RequestBlob.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.RequestBlob getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RequestBlob> PARSER;

    public static com.google.protobuf.Parser<RequestBlob> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ServerConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.ServerConfig)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The maximum bandwidth the clients should use.
     * </pre>
     *
     * <code>optional uint32 max_bandwidth = 1;</code>
     */
    boolean hasMaxBandwidth();
    /**
     * <pre>
     * The maximum bandwidth the clients should use.
     * </pre>
     *
     * <code>optional uint32 max_bandwidth = 1;</code>
     */
    int getMaxBandwidth();

    /**
     * <pre>
     * Server welcome text.
     * </pre>
     *
     * <code>optional string welcome_text = 2;</code>
     */
    boolean hasWelcomeText();
    /**
     * <pre>
     * Server welcome text.
     * </pre>
     *
     * <code>optional string welcome_text = 2;</code>
     */
    java.lang.String getWelcomeText();
    /**
     * <pre>
     * Server welcome text.
     * </pre>
     *
     * <code>optional string welcome_text = 2;</code>
     */
    com.google.protobuf.ByteString
        getWelcomeTextBytes();

    /**
     * <pre>
     * True if the server allows HTML.
     * </pre>
     *
     * <code>optional bool allow_html = 3;</code>
     */
    boolean hasAllowHtml();
    /**
     * <pre>
     * True if the server allows HTML.
     * </pre>
     *
     * <code>optional bool allow_html = 3;</code>
     */
    boolean getAllowHtml();

    /**
     * <pre>
     * Maximum text message length.
     * </pre>
     *
     * <code>optional uint32 message_length = 4;</code>
     */
    boolean hasMessageLength();
    /**
     * <pre>
     * Maximum text message length.
     * </pre>
     *
     * <code>optional uint32 message_length = 4;</code>
     */
    int getMessageLength();

    /**
     * <pre>
     * Maximum image message length.
     * </pre>
     *
     * <code>optional uint32 image_message_length = 5;</code>
     */
    boolean hasImageMessageLength();
    /**
     * <pre>
     * Maximum image message length.
     * </pre>
     *
     * <code>optional uint32 image_message_length = 5;</code>
     */
    int getImageMessageLength();

    /**
     * <pre>
     * The maximum number of users allowed on the server.
     * </pre>
     *
     * <code>optional uint32 max_users = 6;</code>
     */
    boolean hasMaxUsers();
    /**
     * <pre>
     * The maximum number of users allowed on the server.
     * </pre>
     *
     * <code>optional uint32 max_users = 6;</code>
     */
    int getMaxUsers();
  }
  /**
   * <pre>
   * Sent by the server when it informs the clients on server configuration
   * details.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.ServerConfig}
   */
  public  static final class ServerConfig extends
      com.google.protobuf.GeneratedMessageLite<
          ServerConfig, ServerConfig.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.ServerConfig)
      ServerConfigOrBuilder {
    private ServerConfig() {
      welcomeText_ = "";
    }
    private int bitField0_;
    public static final int MAX_BANDWIDTH_FIELD_NUMBER = 1;
    private int maxBandwidth_;
    /**
     * <pre>
     * The maximum bandwidth the clients should use.
     * </pre>
     *
     * <code>optional uint32 max_bandwidth = 1;</code>
     */
    @java.lang.Override
    public boolean hasMaxBandwidth() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The maximum bandwidth the clients should use.
     * </pre>
     *
     * <code>optional uint32 max_bandwidth = 1;</code>
     */
    @java.lang.Override
    public int getMaxBandwidth() {
      return maxBandwidth_;
    }
    /**
     * <pre>
     * The maximum bandwidth the clients should use.
     * </pre>
     *
     * <code>optional uint32 max_bandwidth = 1;</code>
     */
    private void setMaxBandwidth(int value) {
      bitField0_ |= 0x00000001;
      maxBandwidth_ = value;
    }
    /**
     * <pre>
     * The maximum bandwidth the clients should use.
     * </pre>
     *
     * <code>optional uint32 max_bandwidth = 1;</code>
     */
    private void clearMaxBandwidth() {
      bitField0_ = (bitField0_ & ~0x00000001);
      maxBandwidth_ = 0;
    }

    public static final int WELCOME_TEXT_FIELD_NUMBER = 2;
    private java.lang.String welcomeText_;
    /**
     * <pre>
     * Server welcome text.
     * </pre>
     *
     * <code>optional string welcome_text = 2;</code>
     */
    @java.lang.Override
    public boolean hasWelcomeText() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Server welcome text.
     * </pre>
     *
     * <code>optional string welcome_text = 2;</code>
     */
    @java.lang.Override
    public java.lang.String getWelcomeText() {
      return welcomeText_;
    }
    /**
     * <pre>
     * Server welcome text.
     * </pre>
     *
     * <code>optional string welcome_text = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getWelcomeTextBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(welcomeText_);
    }
    /**
     * <pre>
     * Server welcome text.
     * </pre>
     *
     * <code>optional string welcome_text = 2;</code>
     */
    private void setWelcomeText(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      welcomeText_ = value;
    }
    /**
     * <pre>
     * Server welcome text.
     * </pre>
     *
     * <code>optional string welcome_text = 2;</code>
     */
    private void clearWelcomeText() {
      bitField0_ = (bitField0_ & ~0x00000002);
      welcomeText_ = getDefaultInstance().getWelcomeText();
    }
    /**
     * <pre>
     * Server welcome text.
     * </pre>
     *
     * <code>optional string welcome_text = 2;</code>
     */
    private void setWelcomeTextBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      welcomeText_ = value.toStringUtf8();
    }

    public static final int ALLOW_HTML_FIELD_NUMBER = 3;
    private boolean allowHtml_;
    /**
     * <pre>
     * True if the server allows HTML.
     * </pre>
     *
     * <code>optional bool allow_html = 3;</code>
     */
    @java.lang.Override
    public boolean hasAllowHtml() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * True if the server allows HTML.
     * </pre>
     *
     * <code>optional bool allow_html = 3;</code>
     */
    @java.lang.Override
    public boolean getAllowHtml() {
      return allowHtml_;
    }
    /**
     * <pre>
     * True if the server allows HTML.
     * </pre>
     *
     * <code>optional bool allow_html = 3;</code>
     */
    private void setAllowHtml(boolean value) {
      bitField0_ |= 0x00000004;
      allowHtml_ = value;
    }
    /**
     * <pre>
     * True if the server allows HTML.
     * </pre>
     *
     * <code>optional bool allow_html = 3;</code>
     */
    private void clearAllowHtml() {
      bitField0_ = (bitField0_ & ~0x00000004);
      allowHtml_ = false;
    }

    public static final int MESSAGE_LENGTH_FIELD_NUMBER = 4;
    private int messageLength_;
    /**
     * <pre>
     * Maximum text message length.
     * </pre>
     *
     * <code>optional uint32 message_length = 4;</code>
     */
    @java.lang.Override
    public boolean hasMessageLength() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Maximum text message length.
     * </pre>
     *
     * <code>optional uint32 message_length = 4;</code>
     */
    @java.lang.Override
    public int getMessageLength() {
      return messageLength_;
    }
    /**
     * <pre>
     * Maximum text message length.
     * </pre>
     *
     * <code>optional uint32 message_length = 4;</code>
     */
    private void setMessageLength(int value) {
      bitField0_ |= 0x00000008;
      messageLength_ = value;
    }
    /**
     * <pre>
     * Maximum text message length.
     * </pre>
     *
     * <code>optional uint32 message_length = 4;</code>
     */
    private void clearMessageLength() {
      bitField0_ = (bitField0_ & ~0x00000008);
      messageLength_ = 0;
    }

    public static final int IMAGE_MESSAGE_LENGTH_FIELD_NUMBER = 5;
    private int imageMessageLength_;
    /**
     * <pre>
     * Maximum image message length.
     * </pre>
     *
     * <code>optional uint32 image_message_length = 5;</code>
     */
    @java.lang.Override
    public boolean hasImageMessageLength() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Maximum image message length.
     * </pre>
     *
     * <code>optional uint32 image_message_length = 5;</code>
     */
    @java.lang.Override
    public int getImageMessageLength() {
      return imageMessageLength_;
    }
    /**
     * <pre>
     * Maximum image message length.
     * </pre>
     *
     * <code>optional uint32 image_message_length = 5;</code>
     */
    private void setImageMessageLength(int value) {
      bitField0_ |= 0x00000010;
      imageMessageLength_ = value;
    }
    /**
     * <pre>
     * Maximum image message length.
     * </pre>
     *
     * <code>optional uint32 image_message_length = 5;</code>
     */
    private void clearImageMessageLength() {
      bitField0_ = (bitField0_ & ~0x00000010);
      imageMessageLength_ = 0;
    }

    public static final int MAX_USERS_FIELD_NUMBER = 6;
    private int maxUsers_;
    /**
     * <pre>
     * The maximum number of users allowed on the server.
     * </pre>
     *
     * <code>optional uint32 max_users = 6;</code>
     */
    @java.lang.Override
    public boolean hasMaxUsers() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The maximum number of users allowed on the server.
     * </pre>
     *
     * <code>optional uint32 max_users = 6;</code>
     */
    @java.lang.Override
    public int getMaxUsers() {
      return maxUsers_;
    }
    /**
     * <pre>
     * The maximum number of users allowed on the server.
     * </pre>
     *
     * <code>optional uint32 max_users = 6;</code>
     */
    private void setMaxUsers(int value) {
      bitField0_ |= 0x00000020;
      maxUsers_ = value;
    }
    /**
     * <pre>
     * The maximum number of users allowed on the server.
     * </pre>
     *
     * <code>optional uint32 max_users = 6;</code>
     */
    private void clearMaxUsers() {
      bitField0_ = (bitField0_ & ~0x00000020);
      maxUsers_ = 0;
    }

    public static MumbleProto.Mumble.ServerConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ServerConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ServerConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ServerConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ServerConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.ServerConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.ServerConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ServerConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.ServerConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ServerConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.ServerConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.ServerConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.ServerConfig prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Sent by the server when it informs the clients on server configuration
     * details.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.ServerConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.ServerConfig, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.ServerConfig)
        MumbleProto.Mumble.ServerConfigOrBuilder {
      // Construct using MumbleProto.Mumble.ServerConfig.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The maximum bandwidth the clients should use.
       * </pre>
       *
       * <code>optional uint32 max_bandwidth = 1;</code>
       */
      @java.lang.Override
      public boolean hasMaxBandwidth() {
        return instance.hasMaxBandwidth();
      }
      /**
       * <pre>
       * The maximum bandwidth the clients should use.
       * </pre>
       *
       * <code>optional uint32 max_bandwidth = 1;</code>
       */
      @java.lang.Override
      public int getMaxBandwidth() {
        return instance.getMaxBandwidth();
      }
      /**
       * <pre>
       * The maximum bandwidth the clients should use.
       * </pre>
       *
       * <code>optional uint32 max_bandwidth = 1;</code>
       */
      public Builder setMaxBandwidth(int value) {
        copyOnWrite();
        instance.setMaxBandwidth(value);
        return this;
      }
      /**
       * <pre>
       * The maximum bandwidth the clients should use.
       * </pre>
       *
       * <code>optional uint32 max_bandwidth = 1;</code>
       */
      public Builder clearMaxBandwidth() {
        copyOnWrite();
        instance.clearMaxBandwidth();
        return this;
      }

      /**
       * <pre>
       * Server welcome text.
       * </pre>
       *
       * <code>optional string welcome_text = 2;</code>
       */
      @java.lang.Override
      public boolean hasWelcomeText() {
        return instance.hasWelcomeText();
      }
      /**
       * <pre>
       * Server welcome text.
       * </pre>
       *
       * <code>optional string welcome_text = 2;</code>
       */
      @java.lang.Override
      public java.lang.String getWelcomeText() {
        return instance.getWelcomeText();
      }
      /**
       * <pre>
       * Server welcome text.
       * </pre>
       *
       * <code>optional string welcome_text = 2;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getWelcomeTextBytes() {
        return instance.getWelcomeTextBytes();
      }
      /**
       * <pre>
       * Server welcome text.
       * </pre>
       *
       * <code>optional string welcome_text = 2;</code>
       */
      public Builder setWelcomeText(
          java.lang.String value) {
        copyOnWrite();
        instance.setWelcomeText(value);
        return this;
      }
      /**
       * <pre>
       * Server welcome text.
       * </pre>
       *
       * <code>optional string welcome_text = 2;</code>
       */
      public Builder clearWelcomeText() {
        copyOnWrite();
        instance.clearWelcomeText();
        return this;
      }
      /**
       * <pre>
       * Server welcome text.
       * </pre>
       *
       * <code>optional string welcome_text = 2;</code>
       */
      public Builder setWelcomeTextBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setWelcomeTextBytes(value);
        return this;
      }

      /**
       * <pre>
       * True if the server allows HTML.
       * </pre>
       *
       * <code>optional bool allow_html = 3;</code>
       */
      @java.lang.Override
      public boolean hasAllowHtml() {
        return instance.hasAllowHtml();
      }
      /**
       * <pre>
       * True if the server allows HTML.
       * </pre>
       *
       * <code>optional bool allow_html = 3;</code>
       */
      @java.lang.Override
      public boolean getAllowHtml() {
        return instance.getAllowHtml();
      }
      /**
       * <pre>
       * True if the server allows HTML.
       * </pre>
       *
       * <code>optional bool allow_html = 3;</code>
       */
      public Builder setAllowHtml(boolean value) {
        copyOnWrite();
        instance.setAllowHtml(value);
        return this;
      }
      /**
       * <pre>
       * True if the server allows HTML.
       * </pre>
       *
       * <code>optional bool allow_html = 3;</code>
       */
      public Builder clearAllowHtml() {
        copyOnWrite();
        instance.clearAllowHtml();
        return this;
      }

      /**
       * <pre>
       * Maximum text message length.
       * </pre>
       *
       * <code>optional uint32 message_length = 4;</code>
       */
      @java.lang.Override
      public boolean hasMessageLength() {
        return instance.hasMessageLength();
      }
      /**
       * <pre>
       * Maximum text message length.
       * </pre>
       *
       * <code>optional uint32 message_length = 4;</code>
       */
      @java.lang.Override
      public int getMessageLength() {
        return instance.getMessageLength();
      }
      /**
       * <pre>
       * Maximum text message length.
       * </pre>
       *
       * <code>optional uint32 message_length = 4;</code>
       */
      public Builder setMessageLength(int value) {
        copyOnWrite();
        instance.setMessageLength(value);
        return this;
      }
      /**
       * <pre>
       * Maximum text message length.
       * </pre>
       *
       * <code>optional uint32 message_length = 4;</code>
       */
      public Builder clearMessageLength() {
        copyOnWrite();
        instance.clearMessageLength();
        return this;
      }

      /**
       * <pre>
       * Maximum image message length.
       * </pre>
       *
       * <code>optional uint32 image_message_length = 5;</code>
       */
      @java.lang.Override
      public boolean hasImageMessageLength() {
        return instance.hasImageMessageLength();
      }
      /**
       * <pre>
       * Maximum image message length.
       * </pre>
       *
       * <code>optional uint32 image_message_length = 5;</code>
       */
      @java.lang.Override
      public int getImageMessageLength() {
        return instance.getImageMessageLength();
      }
      /**
       * <pre>
       * Maximum image message length.
       * </pre>
       *
       * <code>optional uint32 image_message_length = 5;</code>
       */
      public Builder setImageMessageLength(int value) {
        copyOnWrite();
        instance.setImageMessageLength(value);
        return this;
      }
      /**
       * <pre>
       * Maximum image message length.
       * </pre>
       *
       * <code>optional uint32 image_message_length = 5;</code>
       */
      public Builder clearImageMessageLength() {
        copyOnWrite();
        instance.clearImageMessageLength();
        return this;
      }

      /**
       * <pre>
       * The maximum number of users allowed on the server.
       * </pre>
       *
       * <code>optional uint32 max_users = 6;</code>
       */
      @java.lang.Override
      public boolean hasMaxUsers() {
        return instance.hasMaxUsers();
      }
      /**
       * <pre>
       * The maximum number of users allowed on the server.
       * </pre>
       *
       * <code>optional uint32 max_users = 6;</code>
       */
      @java.lang.Override
      public int getMaxUsers() {
        return instance.getMaxUsers();
      }
      /**
       * <pre>
       * The maximum number of users allowed on the server.
       * </pre>
       *
       * <code>optional uint32 max_users = 6;</code>
       */
      public Builder setMaxUsers(int value) {
        copyOnWrite();
        instance.setMaxUsers(value);
        return this;
      }
      /**
       * <pre>
       * The maximum number of users allowed on the server.
       * </pre>
       *
       * <code>optional uint32 max_users = 6;</code>
       */
      public Builder clearMaxUsers() {
        copyOnWrite();
        instance.clearMaxUsers();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.ServerConfig)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.ServerConfig();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "maxBandwidth_",
              "welcomeText_",
              "allowHtml_",
              "messageLength_",
              "imageMessageLength_",
              "maxUsers_",
            };
            java.lang.String info =
                "\u0001\u0006\u0000\u0001\u0001\u0006\u0006\u0000\u0000\u0000\u0001\u000b\u0000\u0002" +
                "\b\u0001\u0003\u0007\u0002\u0004\u000b\u0003\u0005\u000b\u0004\u0006\u000b\u0005" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.ServerConfig> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.ServerConfig.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.ServerConfig)
    private static final MumbleProto.Mumble.ServerConfig DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new ServerConfig();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ServerConfig.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.ServerConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ServerConfig> PARSER;

    public static com.google.protobuf.Parser<ServerConfig> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SuggestConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MumbleProto.SuggestConfig)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Suggested client version.
     * </pre>
     *
     * <code>optional uint32 version = 1;</code>
     */
    boolean hasVersion();
    /**
     * <pre>
     * Suggested client version.
     * </pre>
     *
     * <code>optional uint32 version = 1;</code>
     */
    int getVersion();

    /**
     * <pre>
     * True if the administrator suggests positional audio to be used on this
     * server.
     * </pre>
     *
     * <code>optional bool positional = 2;</code>
     */
    boolean hasPositional();
    /**
     * <pre>
     * True if the administrator suggests positional audio to be used on this
     * server.
     * </pre>
     *
     * <code>optional bool positional = 2;</code>
     */
    boolean getPositional();

    /**
     * <pre>
     * True if the administrator suggests push to talk to be used on this server.
     * </pre>
     *
     * <code>optional bool push_to_talk = 3;</code>
     */
    boolean hasPushToTalk();
    /**
     * <pre>
     * True if the administrator suggests push to talk to be used on this server.
     * </pre>
     *
     * <code>optional bool push_to_talk = 3;</code>
     */
    boolean getPushToTalk();
  }
  /**
   * <pre>
   * Sent by the server to inform the clients of suggested client configuration
   * specified by the server administrator.
   * </pre>
   *
   * Protobuf type {@code MumbleProto.SuggestConfig}
   */
  public  static final class SuggestConfig extends
      com.google.protobuf.GeneratedMessageLite<
          SuggestConfig, SuggestConfig.Builder> implements
      // @@protoc_insertion_point(message_implements:MumbleProto.SuggestConfig)
      SuggestConfigOrBuilder {
    private SuggestConfig() {
    }
    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <pre>
     * Suggested client version.
     * </pre>
     *
     * <code>optional uint32 version = 1;</code>
     */
    @java.lang.Override
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Suggested client version.
     * </pre>
     *
     * <code>optional uint32 version = 1;</code>
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }
    /**
     * <pre>
     * Suggested client version.
     * </pre>
     *
     * <code>optional uint32 version = 1;</code>
     */
    private void setVersion(int value) {
      bitField0_ |= 0x00000001;
      version_ = value;
    }
    /**
     * <pre>
     * Suggested client version.
     * </pre>
     *
     * <code>optional uint32 version = 1;</code>
     */
    private void clearVersion() {
      bitField0_ = (bitField0_ & ~0x00000001);
      version_ = 0;
    }

    public static final int POSITIONAL_FIELD_NUMBER = 2;
    private boolean positional_;
    /**
     * <pre>
     * True if the administrator suggests positional audio to be used on this
     * server.
     * </pre>
     *
     * <code>optional bool positional = 2;</code>
     */
    @java.lang.Override
    public boolean hasPositional() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * True if the administrator suggests positional audio to be used on this
     * server.
     * </pre>
     *
     * <code>optional bool positional = 2;</code>
     */
    @java.lang.Override
    public boolean getPositional() {
      return positional_;
    }
    /**
     * <pre>
     * True if the administrator suggests positional audio to be used on this
     * server.
     * </pre>
     *
     * <code>optional bool positional = 2;</code>
     */
    private void setPositional(boolean value) {
      bitField0_ |= 0x00000002;
      positional_ = value;
    }
    /**
     * <pre>
     * True if the administrator suggests positional audio to be used on this
     * server.
     * </pre>
     *
     * <code>optional bool positional = 2;</code>
     */
    private void clearPositional() {
      bitField0_ = (bitField0_ & ~0x00000002);
      positional_ = false;
    }

    public static final int PUSH_TO_TALK_FIELD_NUMBER = 3;
    private boolean pushToTalk_;
    /**
     * <pre>
     * True if the administrator suggests push to talk to be used on this server.
     * </pre>
     *
     * <code>optional bool push_to_talk = 3;</code>
     */
    @java.lang.Override
    public boolean hasPushToTalk() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * True if the administrator suggests push to talk to be used on this server.
     * </pre>
     *
     * <code>optional bool push_to_talk = 3;</code>
     */
    @java.lang.Override
    public boolean getPushToTalk() {
      return pushToTalk_;
    }
    /**
     * <pre>
     * True if the administrator suggests push to talk to be used on this server.
     * </pre>
     *
     * <code>optional bool push_to_talk = 3;</code>
     */
    private void setPushToTalk(boolean value) {
      bitField0_ |= 0x00000004;
      pushToTalk_ = value;
    }
    /**
     * <pre>
     * True if the administrator suggests push to talk to be used on this server.
     * </pre>
     *
     * <code>optional bool push_to_talk = 3;</code>
     */
    private void clearPushToTalk() {
      bitField0_ = (bitField0_ & ~0x00000004);
      pushToTalk_ = false;
    }

    public static MumbleProto.Mumble.SuggestConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.SuggestConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.SuggestConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.SuggestConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.SuggestConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MumbleProto.Mumble.SuggestConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MumbleProto.Mumble.SuggestConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.SuggestConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.SuggestConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.SuggestConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MumbleProto.Mumble.SuggestConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MumbleProto.Mumble.SuggestConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(MumbleProto.Mumble.SuggestConfig prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Sent by the server to inform the clients of suggested client configuration
     * specified by the server administrator.
     * </pre>
     *
     * Protobuf type {@code MumbleProto.SuggestConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MumbleProto.Mumble.SuggestConfig, Builder> implements
        // @@protoc_insertion_point(builder_implements:MumbleProto.SuggestConfig)
        MumbleProto.Mumble.SuggestConfigOrBuilder {
      // Construct using MumbleProto.Mumble.SuggestConfig.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Suggested client version.
       * </pre>
       *
       * <code>optional uint32 version = 1;</code>
       */
      @java.lang.Override
      public boolean hasVersion() {
        return instance.hasVersion();
      }
      /**
       * <pre>
       * Suggested client version.
       * </pre>
       *
       * <code>optional uint32 version = 1;</code>
       */
      @java.lang.Override
      public int getVersion() {
        return instance.getVersion();
      }
      /**
       * <pre>
       * Suggested client version.
       * </pre>
       *
       * <code>optional uint32 version = 1;</code>
       */
      public Builder setVersion(int value) {
        copyOnWrite();
        instance.setVersion(value);
        return this;
      }
      /**
       * <pre>
       * Suggested client version.
       * </pre>
       *
       * <code>optional uint32 version = 1;</code>
       */
      public Builder clearVersion() {
        copyOnWrite();
        instance.clearVersion();
        return this;
      }

      /**
       * <pre>
       * True if the administrator suggests positional audio to be used on this
       * server.
       * </pre>
       *
       * <code>optional bool positional = 2;</code>
       */
      @java.lang.Override
      public boolean hasPositional() {
        return instance.hasPositional();
      }
      /**
       * <pre>
       * True if the administrator suggests positional audio to be used on this
       * server.
       * </pre>
       *
       * <code>optional bool positional = 2;</code>
       */
      @java.lang.Override
      public boolean getPositional() {
        return instance.getPositional();
      }
      /**
       * <pre>
       * True if the administrator suggests positional audio to be used on this
       * server.
       * </pre>
       *
       * <code>optional bool positional = 2;</code>
       */
      public Builder setPositional(boolean value) {
        copyOnWrite();
        instance.setPositional(value);
        return this;
      }
      /**
       * <pre>
       * True if the administrator suggests positional audio to be used on this
       * server.
       * </pre>
       *
       * <code>optional bool positional = 2;</code>
       */
      public Builder clearPositional() {
        copyOnWrite();
        instance.clearPositional();
        return this;
      }

      /**
       * <pre>
       * True if the administrator suggests push to talk to be used on this server.
       * </pre>
       *
       * <code>optional bool push_to_talk = 3;</code>
       */
      @java.lang.Override
      public boolean hasPushToTalk() {
        return instance.hasPushToTalk();
      }
      /**
       * <pre>
       * True if the administrator suggests push to talk to be used on this server.
       * </pre>
       *
       * <code>optional bool push_to_talk = 3;</code>
       */
      @java.lang.Override
      public boolean getPushToTalk() {
        return instance.getPushToTalk();
      }
      /**
       * <pre>
       * True if the administrator suggests push to talk to be used on this server.
       * </pre>
       *
       * <code>optional bool push_to_talk = 3;</code>
       */
      public Builder setPushToTalk(boolean value) {
        copyOnWrite();
        instance.setPushToTalk(value);
        return this;
      }
      /**
       * <pre>
       * True if the administrator suggests push to talk to be used on this server.
       * </pre>
       *
       * <code>optional bool push_to_talk = 3;</code>
       */
      public Builder clearPushToTalk() {
        copyOnWrite();
        instance.clearPushToTalk();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MumbleProto.SuggestConfig)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MumbleProto.Mumble.SuggestConfig();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "version_",
              "positional_",
              "pushToTalk_",
            };
            java.lang.String info =
                "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u000b\u0000\u0002" +
                "\u0007\u0001\u0003\u0007\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<MumbleProto.Mumble.SuggestConfig> parser = PARSER;
          if (parser == null) {
            synchronized (MumbleProto.Mumble.SuggestConfig.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:MumbleProto.SuggestConfig)
    private static final MumbleProto.Mumble.SuggestConfig DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new SuggestConfig();
    }

    static {
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SuggestConfig.class, DEFAULT_INSTANCE);
    }
    public static MumbleProto.Mumble.SuggestConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SuggestConfig> PARSER;

    public static com.google.protobuf.Parser<SuggestConfig> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
